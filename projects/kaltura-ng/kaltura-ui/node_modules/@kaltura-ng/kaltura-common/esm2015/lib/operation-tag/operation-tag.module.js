var OperationTagModule_1;
import { __decorate, __metadata, __param } from "tslib";
import { Self, Optional, NgModule } from '@angular/core';
import { OperationTagStoreMediator } from "./operation-tag-store-mediator";
import { OperationTagManagerService } from "./operation-tag-manager.service";
let OperationTagModule = OperationTagModule_1 = class OperationTagModule {
    // Prevents angular from creating another instance for operationTagManagerService when defined as provider in more than one place
    // (Each component will get the same instance as in the module/component that called the operationTagManagerService.forRoot)
    constructor(operationTagManagerService) {
        if (operationTagManagerService) {
            OperationTagStoreMediator.register(operationTagManagerService);
        }
    }
    static forRoot() {
        return {
            ngModule: OperationTagModule_1,
            providers: [
                OperationTagManagerService
            ]
        };
    }
};
OperationTagModule.ctorParameters = () => [
    { type: OperationTagManagerService, decorators: [{ type: Self }, { type: Optional }] }
];
OperationTagModule = OperationTagModule_1 = __decorate([
    NgModule({
        imports: [],
        declarations: [],
        exports: [],
        providers: []
    }),
    __param(0, Self()), __param(0, Optional()),
    __metadata("design:paramtypes", [OperationTagManagerService])
], OperationTagModule);
export { OperationTagModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLXRhZy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Aa2FsdHVyYS1uZy9rYWx0dXJhLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9vcGVyYXRpb24tdGFnL29wZXJhdGlvbi10YWcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN6RSxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQVkzRSxJQUFhLGtCQUFrQiwwQkFBL0IsTUFBYSxrQkFBa0I7SUFFM0IsaUlBQWlJO0lBQ2pJLDRIQUE0SDtJQUM1SCxZQUFnQywwQkFBc0Q7UUFDbEYsSUFBSSwwQkFBMEIsRUFBRTtZQUM1Qix5QkFBeUIsQ0FBQyxRQUFRLENBQUMsMEJBQTBCLENBQUMsQ0FBQztTQUNsRTtJQUNMLENBQUM7SUFFRCxNQUFNLENBQUMsT0FBTztRQUNWLE9BQU87WUFDSCxRQUFRLEVBQUUsb0JBQWtCO1lBQzVCLFNBQVMsRUFBUztnQkFDZCwwQkFBMEI7YUFDN0I7U0FDSixDQUFDO0lBQ04sQ0FBQztDQUNKLENBQUE7O1lBZCtELDBCQUEwQix1QkFBekUsSUFBSSxZQUFJLFFBQVE7O0FBSnBCLGtCQUFrQjtJQVY5QixRQUFRLENBQUM7UUFDTixPQUFPLEVBQUUsRUFDUjtRQUNELFlBQVksRUFBRSxFQUNiO1FBQ0QsT0FBTyxFQUFFLEVBQ1I7UUFDRCxTQUFTLEVBQUUsRUFDVjtLQUNKLENBQUM7SUFLZSxXQUFBLElBQUksRUFBRSxDQUFBLEVBQUUsV0FBQSxRQUFRLEVBQUUsQ0FBQTtxQ0FBNkIsMEJBQTBCO0dBSjdFLGtCQUFrQixDQWtCOUI7U0FsQlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBTZWxmLCBPcHRpb25hbCwgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7T3BlcmF0aW9uVGFnU3RvcmVNZWRpYXRvcn0gZnJvbSBcIi4vb3BlcmF0aW9uLXRhZy1zdG9yZS1tZWRpYXRvclwiO1xuaW1wb3J0IHtPcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZX0gZnJvbSBcIi4vb3BlcmF0aW9uLXRhZy1tYW5hZ2VyLnNlcnZpY2VcIjtcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICBdLFxuICAgIHByb3ZpZGVyczogW1xuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgT3BlcmF0aW9uVGFnTW9kdWxlIHtcblxuICAgIC8vIFByZXZlbnRzIGFuZ3VsYXIgZnJvbSBjcmVhdGluZyBhbm90aGVyIGluc3RhbmNlIGZvciBvcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZSB3aGVuIGRlZmluZWQgYXMgcHJvdmlkZXIgaW4gbW9yZSB0aGFuIG9uZSBwbGFjZVxuICAgIC8vIChFYWNoIGNvbXBvbmVudCB3aWxsIGdldCB0aGUgc2FtZSBpbnN0YW5jZSBhcyBpbiB0aGUgbW9kdWxlL2NvbXBvbmVudCB0aGF0IGNhbGxlZCB0aGUgb3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2UuZm9yUm9vdClcbiAgICBjb25zdHJ1Y3RvcihAU2VsZigpIEBPcHRpb25hbCgpIG9wZXJhdGlvblRhZ01hbmFnZXJTZXJ2aWNlOiBPcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZSl7XG4gICAgICAgIGlmIChvcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZSkge1xuICAgICAgICAgICAgT3BlcmF0aW9uVGFnU3RvcmVNZWRpYXRvci5yZWdpc3RlcihvcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBPcGVyYXRpb25UYWdNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IDxhbnlbXT5bXG4gICAgICAgICAgICAgICAgT3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2VcbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=