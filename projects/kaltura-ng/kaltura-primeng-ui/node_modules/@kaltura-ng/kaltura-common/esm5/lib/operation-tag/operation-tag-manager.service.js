import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
var OperationTagManagerService = /** @class */ (function () {
    function OperationTagManagerService() {
        this._tagStatus = new BehaviorSubject({});
        // whenever a tag status changes this event is emitted
        this.tagStatus$ = this._tagStatus.asObservable();
    }
    // increase the count for a tag
    OperationTagManagerService.prototype.increase = function (tag) {
        var tagsData = this._tagStatus.getValue();
        if (!tagsData[tag]) {
            tagsData[tag] = 0;
        }
        tagsData[tag]++;
        this._tagStatus.next(tagsData);
    };
    OperationTagManagerService.prototype.decrease = function (tag) {
        var tagsData = this._tagStatus.getValue();
        if (tagsData[tag] > 0) {
            tagsData[tag]--;
            this._tagStatus.next(tagsData);
        }
        else {
            tagsData[tag] = 0;
            this._tagStatus.next(tagsData);
        }
    };
    OperationTagManagerService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [])
    ], OperationTagManagerService);
    return OperationTagManagerService;
}());
export { OperationTagManagerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLXRhZy1tYW5hZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Aa2FsdHVyYS1uZy9rYWx0dXJhLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9vcGVyYXRpb24tdGFnL29wZXJhdGlvbi10YWctbWFuYWdlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUtyRDtJQU9JO1FBTFEsZUFBVSxHQUFHLElBQUksZUFBZSxDQUE0QixFQUFFLENBQUMsQ0FBQztRQUV4RSxzREFBc0Q7UUFDL0MsZUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7SUFHbkQsQ0FBQztJQUVELCtCQUErQjtJQUMvQiw2Q0FBUSxHQUFSLFVBQVMsR0FBVztRQUNoQixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDaEIsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNyQjtRQUNELFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRW5DLENBQUM7SUFFRCw2Q0FBUSxHQUFSLFVBQVMsR0FBVztRQUNoQixJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVDLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNuQixRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNoQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNsQzthQUFNO1lBQ0gsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUVsQztJQUNMLENBQUM7SUEvQlEsMEJBQTBCO1FBRHRDLFVBQVUsRUFBRTs7T0FDQSwwQkFBMEIsQ0FnQ3RDO0lBQUQsaUNBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQWhDWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGUsIE9uRGVzdHJveX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0JlaGF2aW9yU3ViamVjdH0gZnJvbSAncnhqcy9CZWhhdmlvclN1YmplY3QnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzL09ic2VydmFibGUnO1xuaW1wb3J0IHtPcGVyYXRpb25UYWdNYW5hZ2VyUHJveHl9IGZyb20gJy4vb3BlcmF0aW9uLXRhZy1zdG9yZS1tZWRpYXRvcic7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZSBpbXBsZW1lbnRzIE9wZXJhdGlvblRhZ01hbmFnZXJQcm94eSB7XG5cbiAgICBwcml2YXRlIF90YWdTdGF0dXMgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0+KHt9KTtcblxuICAgIC8vIHdoZW5ldmVyIGEgdGFnIHN0YXR1cyBjaGFuZ2VzIHRoaXMgZXZlbnQgaXMgZW1pdHRlZFxuICAgIHB1YmxpYyB0YWdTdGF0dXMkID0gdGhpcy5fdGFnU3RhdHVzLmFzT2JzZXJ2YWJsZSgpO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgLy8gaW5jcmVhc2UgdGhlIGNvdW50IGZvciBhIHRhZ1xuICAgIGluY3JlYXNlKHRhZzogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHRhZ3NEYXRhID0gdGhpcy5fdGFnU3RhdHVzLmdldFZhbHVlKCk7XG4gICAgICAgIGlmICghdGFnc0RhdGFbdGFnXSkge1xuICAgICAgICAgICAgdGFnc0RhdGFbdGFnXSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgdGFnc0RhdGFbdGFnXSsrO1xuICAgICAgICB0aGlzLl90YWdTdGF0dXMubmV4dCh0YWdzRGF0YSk7XG5cbiAgICB9XG5cbiAgICBkZWNyZWFzZSh0YWc6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBjb25zdCB0YWdzRGF0YSA9IHRoaXMuX3RhZ1N0YXR1cy5nZXRWYWx1ZSgpO1xuICAgICAgICBpZiAodGFnc0RhdGFbdGFnXSA+IDApIHtcbiAgICAgICAgICAgIHRhZ3NEYXRhW3RhZ10tLTtcbiAgICAgICAgICAgIHRoaXMuX3RhZ1N0YXR1cy5uZXh0KHRhZ3NEYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRhZ3NEYXRhW3RhZ10gPSAwO1xuICAgICAgICAgICAgdGhpcy5fdGFnU3RhdHVzLm5leHQodGFnc0RhdGEpO1xuXG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=