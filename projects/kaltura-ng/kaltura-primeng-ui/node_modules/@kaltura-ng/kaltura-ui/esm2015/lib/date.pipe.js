import { __decorate, __metadata } from "tslib";
import { Pipe } from '@angular/core';
import * as momentNS from 'moment';
const moment = momentNS;
let DatePipe = class DatePipe {
    constructor() { }
    transform(date, format) {
        if (date) {
            if (!format) {
                format = "dateAndTime";
            }
            switch (format) {
                case 'dateOnly':
                    format = 'MM/DD/YY';
                    break;
                case 'timeOnly':
                    format = 'HH:mm';
                    break;
                case 'dateAndTime':
                    format = "MM/DD/YY HH:mm";
                    break;
                case 'longDateOnly':
                    format = "MMMM D, YYYY";
                    break;
                default:
                    break;
            }
            return moment(date).format(format);
        }
        else {
            return '';
        }
    }
};
DatePipe = __decorate([
    Pipe({
        name: 'kDate'
    }),
    __metadata("design:paramtypes", [])
], DatePipe);
export { DatePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGthbHR1cmEtbmcva2FsdHVyYS11aS8iLCJzb3VyY2VzIjpbImxpYi9kYXRlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sS0FBSyxRQUFRLE1BQU0sUUFBUSxDQUFDO0FBQ25DLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQztBQU14QixJQUFhLFFBQVEsR0FBckIsTUFBYSxRQUFRO0lBRWpCLGdCQUFjLENBQUM7SUFFZixTQUFTLENBQUMsSUFBWSxFQUFFLE1BQWU7UUFDbkMsSUFBSSxJQUFJLEVBQUU7WUFDTixJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNULE1BQU0sR0FBRyxhQUFhLENBQUM7YUFDMUI7WUFFRCxRQUFRLE1BQU0sRUFBRTtnQkFDWixLQUFLLFVBQVU7b0JBQ1gsTUFBTSxHQUFHLFVBQVUsQ0FBQztvQkFDcEIsTUFBTTtnQkFDVixLQUFLLFVBQVU7b0JBQ1gsTUFBTSxHQUFHLE9BQU8sQ0FBQztvQkFDakIsTUFBTTtnQkFDVixLQUFLLGFBQWE7b0JBQ2QsTUFBTSxHQUFHLGdCQUFnQixDQUFDO29CQUMxQixNQUFNO2dCQUNWLEtBQUssY0FBYztvQkFDZixNQUFNLEdBQUcsY0FBYyxDQUFDO29CQUN4QixNQUFNO2dCQUNWO29CQUNJLE1BQU07YUFDYjtZQUdELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN0QzthQUNEO1lBQ0ksT0FBTyxFQUFFLENBQUM7U0FDYjtJQUNMLENBQUM7Q0FDSixDQUFBO0FBbENZLFFBQVE7SUFIcEIsSUFBSSxDQUFDO1FBQ0YsSUFBSSxFQUFFLE9BQU87S0FDaEIsQ0FBQzs7R0FDVyxRQUFRLENBa0NwQjtTQWxDWSxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgbW9tZW50TlMgZnJvbSAnbW9tZW50JztcbmNvbnN0IG1vbWVudCA9IG1vbWVudE5TO1xuXG5cbkBQaXBlKHtcbiAgICBuYW1lOiAna0RhdGUnXG59KVxuZXhwb3J0IGNsYXNzIERhdGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICBjb25zdHJ1Y3Rvcigpe31cblxuICAgIHRyYW5zZm9ybShkYXRlOiBudW1iZXIsIGZvcm1hdCA6IHN0cmluZyk6IGFueSB7XG4gICAgICAgIGlmIChkYXRlKSB7XG4gICAgICAgICAgICBpZiAoIWZvcm1hdCkge1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IFwiZGF0ZUFuZFRpbWVcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdkYXRlT25seSc6XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdCA9ICdNTS9ERC9ZWSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3RpbWVPbmx5JzpcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0ID0gJ0hIOm1tJztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZGF0ZUFuZFRpbWUnOlxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQgPSBcIk1NL0REL1lZIEhIOm1tXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2xvbmdEYXRlT25seSc6XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdCA9IFwiTU1NTSBELCBZWVlZXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIHJldHVybiBtb21lbnQoZGF0ZSkuZm9ybWF0KGZvcm1hdCk7XG4gICAgICAgIH1lbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==