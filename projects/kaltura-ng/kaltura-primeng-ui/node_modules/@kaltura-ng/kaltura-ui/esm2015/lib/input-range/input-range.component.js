var InputRangeComponent_1;
import { __decorate, __metadata } from "tslib";
import { Component, Input } from "@angular/core";
import { NG_VALUE_ACCESSOR } from "@angular/forms";
let InputRangeComponent = InputRangeComponent_1 = class InputRangeComponent {
    constructor() {
        this.pointOvered = [];
        this.onChange = (value) => { };
        this.onTouched = () => { };
    }
    ngOnInit() {
        this.selectedOptionIndex = this.options.findIndex(option => option.isSelected);
        this.selectedOptionIndex = this.selectedOptionIndex == -1 ? 0 : this.selectedOptionIndex;
        this.selectedText = this.options[this.selectedOptionIndex].label;
    }
    getProgressBarStyle() {
        return 100 / (this.options.length - 1) * (this.selectedOptionIndex >= 0 ? this.selectedOptionIndex : 0);
    }
    pointSelected(index) {
        if (this.selectedOptionIndex > 0) {
            this.options[this.selectedOptionIndex].isSelected = false;
        }
        this.options[index].isSelected = true;
        this.selectedText = this.options[index].label;
        this.selectedOptionIndex = index;
        this.onTouched();
        this.onChange(this.options[index].value);
    }
    //From ControlValueAccessor interface
    writeValue(value) {
        const valueOptionIndex = this.options.findIndex(option => option.value == value);
        if (valueOptionIndex !== -1) {
            this.pointSelected(valueOptionIndex);
        }
    }
    //From ControlValueAccessor interface
    registerOnChange(fn) {
        this.onChange = fn;
    }
    //From ControlValueAccessor interface
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
};
__decorate([
    Input(),
    __metadata("design:type", Array)
], InputRangeComponent.prototype, "options", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], InputRangeComponent.prototype, "width", void 0);
InputRangeComponent = InputRangeComponent_1 = __decorate([
    Component({
        selector: 'kInputRange',
        template: "<div class=\"kRangeContainer\">\n  <div [style.width]=\"width\">\n    <div class=\"kRangeInput kRangeInputBlock\">\n      <div class=\"kBbar\">\n        <div class=\"kBarProgress\"\n             [style.width]=\"getProgressBarStyle() + '%'\"></div>\n        <div class=\"kBarPoints\">\n          <div class=\"kBarPointCol\" (mouseout)=\"pointOvered[i]=false\" (mouseover)=\"pointOvered[i]=true\" [style.width]=\"100 / (options.length-1) + '%'\"\n               *ngFor=\"let option of options; index as i\">\n            <div class=\"kPoint\"\n                 [ngClass]=\"{\n                 'kSelected': (pointOvered.length > 0 && pointOvered[i]) || i == selectedOptionIndex,\n                 'kBgPrimary':  i <= selectedOptionIndex\n               }\"></div>\n            <div class=\"kPointClickArea\"\n                 (click) = \"pointSelected(i)\"\n                 [kTooltip] = \"option.tooltip\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <span class=\"kSelectedLabel\">{{selectedText}}</span>\n</div>\n",
        providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: InputRangeComponent_1,
                multi: true
            }
        ],
        styles: [".kRangeContainer{display:flex}.kRangeContainer .kRangeInput{display:inline-block;padding-top:10px;padding-bottom:50px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.kRangeContainer .kRangeInput.kRangeInputBlock{display:block;width:100%}.kRangeContainer .kRangeInput .kBbar{height:4px;width:100%;background-color:#ccc;position:relative}.kRangeContainer .kRangeInput .kBbar .kBarProgress{background-color:#00a784;height:100%}.kRangeContainer .kRangeInput .kBbar .kBarPoints{position:absolute;left:0;top:-8px;width:100%}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol{float:left;position:relative;height:20px}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol:last-child{width:0%!important}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol .kPointClickArea{position:absolute;width:45px;margin-top:-10px;height:40px;transform:translateX(-50%);cursor:pointer}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol .kPoint{width:9px;height:9px;margin-top:1px;border-radius:50%;background-color:#ccc;position:absolute;transform:translateX(-50%);cursor:pointer;border:4px solid #fff}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol .kPoint.kSelected{width:16px;height:16px;margin-top:-3px;border-radius:50%}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol .kPoint.kBgPrimary{background-color:#00a784}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol .kPoint.kBgPrimary.kSelected{border:none!important;margin-top:2px!important}.kRangeContainer .kRangeInput .kBbar .kBarPoints .kBarPointCol span{position:absolute;transform:translateX(-50%);bottom:-36px;white-space:nowrap}.kRangeContainer .kSelectedLabel{padding-left:30px;padding-top:3px;font-size:15px}"]
    }),
    __metadata("design:paramtypes", [])
], InputRangeComponent);
export { InputRangeComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcmFuZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGthbHR1cmEtbmcva2FsdHVyYS11aS8iLCJzb3VyY2VzIjpbImxpYi9pbnB1dC1yYW5nZS9pbnB1dC1yYW5nZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFtQyxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUF1QixpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBY3ZFLElBQWEsbUJBQW1CLDJCQUFoQyxNQUFhLG1CQUFtQjtJQVc5QjtRQUxPLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBRXhCLGFBQVEsR0FBRyxDQUFDLEtBQXNCLEVBQUUsRUFBRSxHQUFFLENBQUMsQ0FBQztRQUMxQyxjQUFTLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0lBR3JCLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQy9FLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDO1FBQ3pGLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFFbkUsQ0FBQztJQUVELG1CQUFtQjtRQUVqQixPQUFPLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG1CQUFtQixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUUxRyxDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQUs7UUFDakIsSUFBSSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsQ0FBQyxFQUFFO1lBQ2hDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztTQUMzRDtRQUVELElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUV0QyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQzlDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxLQUFLLENBQUM7UUFFakMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUzQyxDQUFDO0lBRUQscUNBQXFDO0lBQ3JDLFVBQVUsQ0FBQyxLQUFzQjtRQUMvQixNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsQ0FBQztRQUNqRixJQUFJLGdCQUFnQixLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztTQUN0QztJQUVILENBQUM7SUFFRCxxQ0FBcUM7SUFDckMsZ0JBQWdCLENBQUMsRUFBb0M7UUFDbkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVELHFDQUFxQztJQUNyQyxpQkFBaUIsQ0FBQyxFQUFPO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Q0FDRixDQUFBO0FBM0RVO0lBQVIsS0FBSyxFQUFFOzhCQUFVLEtBQUs7b0RBQWdGO0FBQzlGO0lBQVIsS0FBSyxFQUFFOztrREFBZTtBQUZaLG1CQUFtQjtJQWIvQixTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsYUFBYTtRQUN2QixvaUNBQTJDO1FBRTNDLFNBQVMsRUFBRTtZQUNUO2dCQUNFLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLFdBQVcsRUFBRSxxQkFBbUI7Z0JBQ2hDLEtBQUssRUFBRSxJQUFJO2FBQ1o7U0FDRjs7S0FDRixDQUFDOztHQUVXLG1CQUFtQixDQTREL0I7U0E1RFksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBPbkluaXQsIElucHV0fSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHtDb250cm9sVmFsdWVBY2Nlc3NvciwgTkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAna0lucHV0UmFuZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtcmFuZ2UuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1yYW5nZS5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBJbnB1dFJhbmdlQ29tcG9uZW50LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5cbmV4cG9ydCBjbGFzcyBJbnB1dFJhbmdlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIEBJbnB1dCgpIG9wdGlvbnM6IEFycmF5PHt2YWx1ZTogc3RyaW5nIHwgbnVtYmVyLCB0b29sdGlwOiBzdHJpbmcsIGlzU2VsZWN0ZWQ6IGJvb2xlYW4sIGxhYmVsOiBzdHJpbmd9PjtcbiAgQElucHV0KCkgd2lkdGg6IHN0cmluZztcblxuICBwdWJsaWMgc2VsZWN0ZWRPcHRpb25JbmRleDogbnVtYmVyO1xuICBwdWJsaWMgc2VsZWN0ZWRUZXh0OiBzdHJpbmc7XG4gIHB1YmxpYyBwb2ludE92ZXJlZCA9IFtdO1xuXG4gIG9uQ2hhbmdlID0gKHZhbHVlOiBzdHJpbmcgfCBudW1iZXIpID0+IHt9O1xuICBvblRvdWNoZWQgPSAoKSA9PiB7fTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25JbmRleCA9IHRoaXMub3B0aW9ucy5maW5kSW5kZXgob3B0aW9uID0+IG9wdGlvbi5pc1NlbGVjdGVkKTtcbiAgICB0aGlzLnNlbGVjdGVkT3B0aW9uSW5kZXggPSB0aGlzLnNlbGVjdGVkT3B0aW9uSW5kZXggPT0gLTEgPyAwIDogdGhpcy5zZWxlY3RlZE9wdGlvbkluZGV4O1xuICAgIHRoaXMuc2VsZWN0ZWRUZXh0ID0gdGhpcy5vcHRpb25zW3RoaXMuc2VsZWN0ZWRPcHRpb25JbmRleF0ubGFiZWw7XG5cbiAgfVxuXG4gIGdldFByb2dyZXNzQmFyU3R5bGUoKSB7XG5cbiAgICByZXR1cm4gMTAwIC8gKHRoaXMub3B0aW9ucy5sZW5ndGggLSAxKSAqICh0aGlzLnNlbGVjdGVkT3B0aW9uSW5kZXggPj0gMCA/IHRoaXMuc2VsZWN0ZWRPcHRpb25JbmRleCA6IDApO1xuXG4gIH1cblxuICBwb2ludFNlbGVjdGVkKGluZGV4KSB7XG4gICAgaWYgKHRoaXMuc2VsZWN0ZWRPcHRpb25JbmRleCA+IDApIHtcbiAgICAgIHRoaXMub3B0aW9uc1t0aGlzLnNlbGVjdGVkT3B0aW9uSW5kZXhdLmlzU2VsZWN0ZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB0aGlzLm9wdGlvbnNbaW5kZXhdLmlzU2VsZWN0ZWQgPSB0cnVlO1xuXG4gICAgdGhpcy5zZWxlY3RlZFRleHQgPSB0aGlzLm9wdGlvbnNbaW5kZXhdLmxhYmVsO1xuICAgIHRoaXMuc2VsZWN0ZWRPcHRpb25JbmRleCA9IGluZGV4O1xuXG4gICAgdGhpcy5vblRvdWNoZWQoKTtcbiAgICB0aGlzLm9uQ2hhbmdlKHRoaXMub3B0aW9uc1tpbmRleF0udmFsdWUpO1xuXG4gIH1cblxuICAvL0Zyb20gQ29udHJvbFZhbHVlQWNjZXNzb3IgaW50ZXJmYWNlXG4gIHdyaXRlVmFsdWUodmFsdWU6IHN0cmluZyB8IG51bWJlcikge1xuICAgIGNvbnN0IHZhbHVlT3B0aW9uSW5kZXggPSB0aGlzLm9wdGlvbnMuZmluZEluZGV4KG9wdGlvbiA9PiBvcHRpb24udmFsdWUgPT0gdmFsdWUpO1xuICAgIGlmICh2YWx1ZU9wdGlvbkluZGV4ICE9PSAtMSkge1xuICAgICAgdGhpcy5wb2ludFNlbGVjdGVkKHZhbHVlT3B0aW9uSW5kZXgpO1xuICAgIH1cblxuICB9XG5cbiAgLy9Gcm9tIENvbnRyb2xWYWx1ZUFjY2Vzc29yIGludGVyZmFjZVxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiAodmFsdWU6IHN0cmluZyB8IG51bWJlcikgPT4gdm9pZCkge1xuICAgIHRoaXMub25DaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIC8vRnJvbSBDb250cm9sVmFsdWVBY2Nlc3NvciBpbnRlcmZhY2VcbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSkge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cbn1cbiJdfQ==