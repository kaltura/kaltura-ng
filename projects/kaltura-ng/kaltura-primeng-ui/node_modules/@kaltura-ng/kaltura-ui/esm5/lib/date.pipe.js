import { __decorate, __metadata } from "tslib";
import { Pipe } from '@angular/core';
import * as momentNS from 'moment';
var moment = momentNS;
var DatePipe = /** @class */ (function () {
    function DatePipe() {
    }
    DatePipe.prototype.transform = function (date, format) {
        if (date) {
            if (!format) {
                format = "dateAndTime";
            }
            switch (format) {
                case 'dateOnly':
                    format = 'MM/DD/YY';
                    break;
                case 'timeOnly':
                    format = 'HH:mm';
                    break;
                case 'dateAndTime':
                    format = "MM/DD/YY HH:mm";
                    break;
                case 'longDateOnly':
                    format = "MMMM D, YYYY";
                    break;
                default:
                    break;
            }
            return moment(date).format(format);
        }
        else {
            return '';
        }
    };
    DatePipe = __decorate([
        Pipe({
            name: 'kDate'
        }),
        __metadata("design:paramtypes", [])
    ], DatePipe);
    return DatePipe;
}());
export { DatePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGthbHR1cmEtbmcva2FsdHVyYS11aS8iLCJzb3VyY2VzIjpbImxpYi9kYXRlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sS0FBSyxRQUFRLE1BQU0sUUFBUSxDQUFDO0FBQ25DLElBQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQztBQU14QjtJQUVJO0lBQWMsQ0FBQztJQUVmLDRCQUFTLEdBQVQsVUFBVSxJQUFZLEVBQUUsTUFBZTtRQUNuQyxJQUFJLElBQUksRUFBRTtZQUNOLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1QsTUFBTSxHQUFHLGFBQWEsQ0FBQzthQUMxQjtZQUVELFFBQVEsTUFBTSxFQUFFO2dCQUNaLEtBQUssVUFBVTtvQkFDWCxNQUFNLEdBQUcsVUFBVSxDQUFDO29CQUNwQixNQUFNO2dCQUNWLEtBQUssVUFBVTtvQkFDWCxNQUFNLEdBQUcsT0FBTyxDQUFDO29CQUNqQixNQUFNO2dCQUNWLEtBQUssYUFBYTtvQkFDZCxNQUFNLEdBQUcsZ0JBQWdCLENBQUM7b0JBQzFCLE1BQU07Z0JBQ1YsS0FBSyxjQUFjO29CQUNmLE1BQU0sR0FBRyxjQUFjLENBQUM7b0JBQ3hCLE1BQU07Z0JBQ1Y7b0JBQ0ksTUFBTTthQUNiO1lBR0QsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RDO2FBQ0Q7WUFDSSxPQUFPLEVBQUUsQ0FBQztTQUNiO0lBQ0wsQ0FBQztJQWpDUSxRQUFRO1FBSHBCLElBQUksQ0FBQztZQUNGLElBQUksRUFBRSxPQUFPO1NBQ2hCLENBQUM7O09BQ1csUUFBUSxDQWtDcEI7SUFBRCxlQUFDO0NBQUEsQUFsQ0QsSUFrQ0M7U0FsQ1ksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCAqIGFzIG1vbWVudE5TIGZyb20gJ21vbWVudCc7XG5jb25zdCBtb21lbnQgPSBtb21lbnROUztcblxuXG5AUGlwZSh7XG4gICAgbmFtZTogJ2tEYXRlJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXRlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gICAgY29uc3RydWN0b3IoKXt9XG5cbiAgICB0cmFuc2Zvcm0oZGF0ZTogbnVtYmVyLCBmb3JtYXQgOiBzdHJpbmcpOiBhbnkge1xuICAgICAgICBpZiAoZGF0ZSkge1xuICAgICAgICAgICAgaWYgKCFmb3JtYXQpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXQgPSBcImRhdGVBbmRUaW1lXCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnZGF0ZU9ubHknOlxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQgPSAnTU0vREQvWVknO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICd0aW1lT25seSc6XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdCA9ICdISDptbSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ2RhdGVBbmRUaW1lJzpcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0ID0gXCJNTS9ERC9ZWSBISDptbVwiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdsb25nRGF0ZU9ubHknOlxuICAgICAgICAgICAgICAgICAgICBmb3JtYXQgPSBcIk1NTU0gRCwgWVlZWVwiO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICByZXR1cm4gbW9tZW50KGRhdGUpLmZvcm1hdChmb3JtYXQpO1xuICAgICAgICB9ZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=