import { AbstractControl, ValidationErrors } from "@angular/forms";
export declare const urlRegex: RegExp;
export declare const urlHttpRegex: RegExp;
export declare const ipRegex: RegExp;
/**
 * Provides a set of validators used by form controls.
 *
 * A validator is a function that processes a {@link FormControl} or collection of
 * controls and returns a map of errors. A null map means that validation has passed.
 *
 * ### Example
 *
 * ```typescript
 * var loginControl = new FormControl("", [Validators.ip, Validators.required])
 * ```
 *
 */
export declare class KalturaValidators {
    /**
     * Validator that requires controls to have a value represented as IP (value not required).
     */
    static ip(control: AbstractControl): ValidationErrors | null;
    /**
     * Validator that requires controls to have a value represented as URL (value not required).
     */
    static url(control: AbstractControl): ValidationErrors | null;
    /**
     * Validator that requires controls to have a value represented as URL (value not required).
     */
    static urlHttp(control: AbstractControl): ValidationErrors | null;
    /**
     * Url validation
     */
    static isUrlValid(url: string): boolean;
}
