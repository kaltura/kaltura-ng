import { Observable } from 'rxjs/Observable';
import 'rxjs/add/observable/of';
import 'rxjs/add/observable/of';
import 'rxjs/add/operator/catch';
import 'rxjs/add/operator/do';
import { WidgetsManagerBase } from './widgets-manager-base';
import { KalturaLogger } from '@kaltura-ng/kaltura-common';
export declare abstract class WidgetBase<TForm extends WidgetsManagerBase<TData, TRequest>, TData, TRequest> {
    private _key;
    get data(): TData;
    private _activateSubscription;
    private _data;
    private _dataSource;
    data$: Observable<TData>;
    protected _logger: KalturaLogger;
    constructor(_key: string, logger?: KalturaLogger);
    private _widgetState;
    protected onDataSaving(newData: TData, request: TRequest, originalData: TData): void;
    protected onDataSaving(newData: TData, request: TRequest): void;
    protected form: TForm;
    private _widgetReset;
    widgetReset$: Observable<any>;
    get wasActivated(): boolean;
    get isValid(): boolean;
    get isDirty(): boolean;
    get isActive(): boolean;
    get isAttached(): boolean;
    get isBusy(): boolean;
    get key(): string;
    get isNewData(): boolean;
    protected onValidate(wasActivated: boolean): Observable<{
        isValid: boolean;
    }>;
    protected updateState(stateUpdate: {
        isValid?: boolean;
        isDirty?: boolean;
        isBusy?: boolean;
    }): void;
    private _updateState;
    protected onDataLoaded(data: TData): void;
    protected onDataLoading(dataId: any): void;
    protected abstract onReset(): any;
    protected onActivate(firstTimeActivating: boolean): Observable<{
        failed: boolean;
        error?: Error;
    }> | void;
    _setForm(manager: TForm): void;
    _handleDataLoading(dataId: string): void;
    private _setData;
    _handleDataLoaded(data: TData): void;
    _validate(): Observable<{
        isValid: boolean;
    }>;
    _handleDataSaving(newData: TData, request: TRequest, originalData: TData): void;
    _reset(): void;
    private _verifyRegistered;
    activate(): void;
    attachForm(): void;
    detachForm(): void;
    destory(): void;
}
