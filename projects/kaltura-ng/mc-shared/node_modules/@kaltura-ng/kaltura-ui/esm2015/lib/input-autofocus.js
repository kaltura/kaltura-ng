import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Renderer2, Input, AfterViewInit } from '@angular/core';
let AutofocusDirective = class AutofocusDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this._autofocus = true;
    }
    ngAfterViewInit() {
        if (this._autofocus) {
            setTimeout(() => {
                this.renderer.selectRootElement(this.el.nativeElement).focus();
            });
        }
    }
    set inputAutofocus(allowed) {
        this._autofocus = allowed;
    }
};
AutofocusDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
__decorate([
    Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], AutofocusDirective.prototype, "inputAutofocus", null);
AutofocusDirective = __decorate([
    Directive({
        selector: '[kAutofocus]'
    }),
    __metadata("design:paramtypes", [ElementRef, Renderer2])
], AutofocusDirective);
export { AutofocusDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtYXV0b2ZvY3VzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGthbHR1cmEtbmcva2FsdHVyYS11aS8iLCJzb3VyY2VzIjpbImxpYi9pbnB1dC1hdXRvZm9jdXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBS3ZGLElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0lBRzdCLFlBQW9CLEVBQWMsRUFBVSxRQUFtQjtRQUEzQyxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVUsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUZ2RCxlQUFVLEdBQUcsSUFBSSxDQUFDO0lBRzFCLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ25CLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2pFLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBR0QsSUFBSSxjQUFjLENBQUMsT0FBZ0I7UUFDakMsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUM7SUFDNUIsQ0FBQztDQUNGLENBQUE7O1lBZnlCLFVBQVU7WUFBb0IsU0FBUzs7QUFZL0Q7SUFEQyxLQUFLLEVBQUU7Ozt3REFHUDtBQWpCVSxrQkFBa0I7SUFIOUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLGNBQWM7S0FDekIsQ0FBQztxQ0FJd0IsVUFBVSxFQUFvQixTQUFTO0dBSHBELGtCQUFrQixDQWtCOUI7U0FsQlksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIElucHV0LCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1trQXV0b2ZvY3VzXSdcbn0pXG5leHBvcnQgY2xhc3MgQXV0b2ZvY3VzRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIHByaXZhdGUgX2F1dG9mb2N1cyA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgaWYgKHRoaXMuX2F1dG9mb2N1cykge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2VsZWN0Um9vdEVsZW1lbnQodGhpcy5lbC5uYXRpdmVFbGVtZW50KS5mb2N1cygpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgQElucHV0KClcbiAgc2V0IGlucHV0QXV0b2ZvY3VzKGFsbG93ZWQ6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9hdXRvZm9jdXMgPSBhbGxvd2VkO1xuICB9XG59XG4iXX0=