import { __decorate, __metadata } from "tslib";
import { Component, Input, TemplateRef, ContentChildren, QueryList } from '@angular/core';
import { FormArray, FormGroup, Validators, FormBuilder, AbstractControl } from '@angular/forms';
import { DynamicFormService } from './dynamic-form.service';
import { DynamicFormControlBase } from './dynamic-form-control-base';
let DynamicFormItem = class DynamicFormItem {
    constructor(_formBuilder, _dynamicFormService) {
        this._formBuilder = _formBuilder;
        this._dynamicFormService = _dynamicFormService;
    }
    asDynamicSection(control) {
        return control;
    }
    asFormGroup(control) {
        return control;
    }
    ngOnInit() {
        this.isRequired = false;
        const validators = this.control.validators;
        if (this.control.validators) {
            const RequiredValidator = validators.find(validator => validator == Validators.required);
            if (RequiredValidator) {
                this.isRequired = true;
            }
        }
    }
    initItem(dynamicControl) {
        return this._dynamicFormService.toFormGroup([dynamicControl], { ignoreMultiple: true });
    }
    addItem(dynamicControl) {
        const control = this.form.controls[dynamicControl.key];
        control.push(this.initItem(dynamicControl));
        control.markAsDirty();
    }
    removeItem(dynamicControl, i) {
        const control = this.form.controls[dynamicControl.key];
        control.removeAt(i);
        control.markAsDirty();
    }
};
DynamicFormItem.ctorParameters = () => [
    { type: FormBuilder },
    { type: DynamicFormService }
];
__decorate([
    Input(),
    __metadata("design:type", DynamicFormControlBase)
], DynamicFormItem.prototype, "control", void 0);
__decorate([
    Input(),
    __metadata("design:type", FormGroup)
], DynamicFormItem.prototype, "form", void 0);
__decorate([
    ContentChildren(TemplateRef, { descendants: false }),
    __metadata("design:type", QueryList)
], DynamicFormItem.prototype, "_templates", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], DynamicFormItem.prototype, "labelTemplate", void 0);
DynamicFormItem = __decorate([
    Component({
        selector: 'k-dynamic-form-item',
        template: "<div *ngIf=\"control\" [formGroup]=\"form\">\n\n    <ng-container  *ngIf=\"control.controlType === 'Group' && control.allowMultiple\">\n            <div class=\"kMultiple\" [formArrayName]=\"control.key\">\n                <span class=\"kGroupTitle\" *ngIf=\"control.label\">\n                    <span [kTooltip]=\"control.description\">{{control.label}}</span>\n                </span>\n                <div class=\"kGroupContainer\"  *ngFor=\"let groupForm of asFormGroup(form.controls[control.key]).controls; let i=index\">\n\n                    <div [formGroupName]=\"i\">\n                        <k-dynamic-form-item *ngFor=\"let childControl of asDynamicSection(control).children\"\n                                          [control]=\"childControl\"\n                                          [form]=\"groupForm\">\n                            <ng-template let-item=\"item\">\n                                <ng-container *ngTemplateOutlet=\"_templates.first;context:{ item : item }\">\n                                </ng-container>\n                            </ng-template>\n                        </k-dynamic-form-item>\n                    </div>\n\n                    <div class=\"kDeleteGroup\">\n                        <a (click)=\"!form.disabled && removeItem(control,i)\" [class.disabled]=\"form.disabled\">Delete</a>\n                    </div>\n                </div>\n\n                <div class=\"kGroupButtons\">\n                    <button (click)=\"addItem(control)\" class=\"kButton\" [disabled]=\"form.disabled\">Add</button>\n                </div>\n            </div>\n    </ng-container>\n\n    <div class=\"kMultiple\" *ngIf=\"control.controlType === 'Group' && !control.allowMultiple\">\n        <span class=\"kGroupTitle\" *ngIf=\"control.label\">\n            <span [kTooltip]=\"control.description\">{{control.label}}</span>\n        </span>\n        <k-dynamic-form-item *ngFor=\"let childControl of asDynamicSection(control).children\" [control]=\"childControl\" [form]=\"form\" [labelTemplate]=\"labelTemplate\">\n            <ng-template let-item=\"item\">\n                <ng-container *ngTemplateOutlet=\"_templates.first;context:{ item : item }\"></ng-container>\n            </ng-template>\n        </k-dynamic-form-item>\n    </div>\n\n    <div class=\"kRow\" [ngClass]=\"control.styleClass\" *ngIf=\"control.controlType !== 'Group'\">\n        <div class=\"kFormLabelContainer\">\n            <span class=\"kLabel\" *ngIf=\"control.label && !!labelTemplate == false\">{{control.label}}\n                <kInputHelper *ngIf=\"control.inputHelperConfig && control.inputHelperConfig.body\" [title]=\"control.inputHelperConfig.title\">\n                    <span [innerHTML]=\"control.inputHelperConfig.body\"></span>\n                </kInputHelper>\n            </span>\n            <ng-container *ngIf=\"!!labelTemplate\">\n                <ng-container *ngTemplateOutlet=\"labelTemplate;context:{item: { control : control, form : form, isRequired : isRequired }}\"></ng-container>\n            </ng-container>\n            <span *ngIf=\"isRequired\" class=\"kFormRequiredIndicator\">*</span>\n        </div>\n        <div class=\"kMultiple\" *ngIf=\"control.allowMultiple\" [formArrayName]=\"control.key\">\n\n            <div class=\"kSingleItem\" *ngFor=\"let itemFormGroup of asFormGroup(form.controls[control.key]).controls; let i=index\" [formGroupName]=\"i\">\n                    <ng-container *ngTemplateOutlet=\"_templates.first;context:{item: { control : control, form : itemFormGroup }}\"></ng-container>\n                <a (click)=\"!form.disabled && removeItem(control,i)\" class=\"kDelete\" [class.disabled]=\"form.disabled\">Delete</a>\n            </div>\n            <div>\n                <button class=\"kButton\" (click)=\"!form.disabled && addItem(control)\" [disabled]=\"form.disabled\">Add</button>\n            </div>\n        </div>\n\n        <div class=\"kControl\" [ngClass]=\"[control.controlType, control.key + 'Control']\" *ngIf=\"!control.allowMultiple\">\n            <ng-container *ngTemplateOutlet=\"_templates.first;context:{item: { control : control, form : form }}\"></ng-container>\n        </div>\n        <!--<div class=\"errorMessage\" *ngIf=\"form.controls[control.key].valid\">{{control.label}} is required</div>-->\n    </div>\n</div>\n\n",
        styles: [""]
    }),
    __metadata("design:paramtypes", [FormBuilder, DynamicFormService])
], DynamicFormItem);
export { DynamicFormItem };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1mb3JtLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGthbHR1cmEtbmcva2FsdHVyYS11aS8iLCJzb3VyY2VzIjpbImxpYi9keW5hbWljLWZvcm0vZHluYW1pYy1mb3JtLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsZUFBZSxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRyxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUcsV0FBVyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRWpHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBT3JFLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7SUFTeEIsWUFBb0IsWUFBMEIsRUFBVSxtQkFBd0M7UUFBNUUsaUJBQVksR0FBWixZQUFZLENBQWM7UUFBVSx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO0lBR2hHLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxPQUFvQztRQUNuRCxPQUE4QixPQUFPLENBQUM7SUFDeEMsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUF3QjtRQUNsQyxPQUFrQixPQUFPLENBQUM7SUFDNUIsQ0FBQztJQUVELFFBQVE7UUFDSixJQUFJLENBQUMsVUFBVSxHQUFDLEtBQUssQ0FBQztRQUV0QixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQUMzQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUMzQjtZQUNJLE1BQU0saUJBQWlCLEdBQUUsVUFBVSxDQUFDLElBQUksQ0FBRSxTQUFTLENBQUMsRUFBRSxDQUN0RCxTQUFTLElBQUksVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBRWxDLElBQUksaUJBQWlCLEVBQ3JCO2dCQUNJLElBQUksQ0FBQyxVQUFVLEdBQUMsSUFBSSxDQUFDO2FBQ3hCO1NBQ0o7SUFDTCxDQUFDO0lBRUQsUUFBUSxDQUFDLGNBQTRDO1FBQ2pELE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxFQUFFLEVBQUUsY0FBYyxFQUFHLElBQUksRUFBQyxDQUFDLENBQUM7SUFDNUYsQ0FBQztJQUVELE9BQU8sQ0FBQyxjQUE0QztRQUNoRCxNQUFNLE9BQU8sR0FBYyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEUsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFDNUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxVQUFVLENBQUMsY0FBNEMsRUFBRSxDQUFTO1FBQzlELE1BQU0sT0FBTyxHQUFjLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMxQixDQUFDO0NBQ0osQ0FBQTs7WUE1Q3NDLFdBQVc7WUFBZ0Msa0JBQWtCOztBQVJ2RjtJQUFSLEtBQUssRUFBRTs4QkFBVSxzQkFBc0I7Z0RBQU07QUFDckM7SUFBUixLQUFLLEVBQUU7OEJBQVEsU0FBUzs2Q0FBQztBQUkwQjtJQUFuRCxlQUFlLENBQUMsV0FBVyxFQUFFLEVBQUMsV0FBVyxFQUFFLEtBQUssRUFBQyxDQUFDOzhCQUFvQixTQUFTO21EQUFtQjtBQUMxRjtJQUFSLEtBQUssRUFBRTs4QkFBZ0IsV0FBVztzREFBTTtBQVBoQyxlQUFlO0lBTDNCLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxxQkFBcUI7UUFDL0IsaXdJQUFpRDs7S0FFcEQsQ0FBQztxQ0FVcUMsV0FBVyxFQUFnQyxrQkFBa0I7R0FUdkYsZUFBZSxDQXFEM0I7U0FyRFksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBDb250ZW50Q2hpbGRyZW4sIFF1ZXJ5TGlzdCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQXJyYXksIEZvcm1Hcm91cCwgVmFsaWRhdG9ycywgIEZvcm1CdWlsZGVyLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBEeW5hbWljU2VjdGlvbkNvbnRyb2wgfSBmcm9tICcuL2NvbnRyb2xzL2R5bmFtaWMtc2VjdGlvbi1jb250cm9sJztcbmltcG9ydCB7IER5bmFtaWNGb3JtU2VydmljZSB9IGZyb20gJy4vZHluYW1pYy1mb3JtLnNlcnZpY2UnO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sQmFzZSB9IGZyb20gJy4vZHluYW1pYy1mb3JtLWNvbnRyb2wtYmFzZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnay1keW5hbWljLWZvcm0taXRlbScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2R5bmFtaWMtZm9ybS1pdGVtLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHMgOiBbJy4vZHluYW1pYy1mb3JtLWl0ZW0uY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljRm9ybUl0ZW0gaW1wbGVtZW50cyAgT25Jbml0IHtcbiAgICBASW5wdXQoKSBjb250cm9sOiBEeW5hbWljRm9ybUNvbnRyb2xCYXNlPGFueT47XG4gICAgQElucHV0KCkgZm9ybSA6IEZvcm1Hcm91cDtcblxuICAgIHB1YmxpYyBpc1JlcXVpcmVkOiBib29sZWFuO1xuXG4gICAgQENvbnRlbnRDaGlsZHJlbihUZW1wbGF0ZVJlZiwge2Rlc2NlbmRhbnRzOiBmYWxzZX0pIHB1YmxpYyBfdGVtcGxhdGVzOiBRdWVyeUxpc3Q8VGVtcGxhdGVSZWY8YW55Pj47XG4gICAgQElucHV0KCkgbGFiZWxUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2Zvcm1CdWlsZGVyIDogRm9ybUJ1aWxkZXIsIHByaXZhdGUgX2R5bmFtaWNGb3JtU2VydmljZSA6IER5bmFtaWNGb3JtU2VydmljZSlcbiAgICB7XG5cbiAgICB9XG5cbiAgICBhc0R5bmFtaWNTZWN0aW9uKGNvbnRyb2w6IER5bmFtaWNGb3JtQ29udHJvbEJhc2U8YW55Pik6IER5bmFtaWNTZWN0aW9uQ29udHJvbCB7XG4gICAgICByZXR1cm4gPER5bmFtaWNTZWN0aW9uQ29udHJvbD5jb250cm9sO1xuICAgIH1cblxuICAgIGFzRm9ybUdyb3VwKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IEZvcm1Hcm91cCB7XG4gICAgICByZXR1cm4gPEZvcm1Hcm91cD5jb250cm9sO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmlzUmVxdWlyZWQ9ZmFsc2U7XG5cbiAgICAgICAgY29uc3QgdmFsaWRhdG9ycyA9IHRoaXMuY29udHJvbC52YWxpZGF0b3JzO1xuICAgICAgICBpZiAodGhpcy5jb250cm9sLnZhbGlkYXRvcnMpXG4gICAgICAgIHtcbiAgICAgICAgICAgIGNvbnN0IFJlcXVpcmVkVmFsaWRhdG9yID12YWxpZGF0b3JzLmZpbmQoIHZhbGlkYXRvciA9PlxuICAgICAgICAgICAgdmFsaWRhdG9yID09IFZhbGlkYXRvcnMucmVxdWlyZWQpO1xuXG4gICAgICAgICAgICBpZiAoUmVxdWlyZWRWYWxpZGF0b3IpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1JlcXVpcmVkPXRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbml0SXRlbShkeW5hbWljQ29udHJvbCA6IER5bmFtaWNGb3JtQ29udHJvbEJhc2U8YW55Pikge1xuICAgICAgICByZXR1cm4gdGhpcy5fZHluYW1pY0Zvcm1TZXJ2aWNlLnRvRm9ybUdyb3VwKFtkeW5hbWljQ29udHJvbF0sIHsgaWdub3JlTXVsdGlwbGUgOiB0cnVlfSk7XG4gICAgfVxuXG4gICAgYWRkSXRlbShkeW5hbWljQ29udHJvbCA6IER5bmFtaWNGb3JtQ29udHJvbEJhc2U8YW55Pikge1xuICAgICAgICBjb25zdCBjb250cm9sID0gPEZvcm1BcnJheT50aGlzLmZvcm0uY29udHJvbHNbZHluYW1pY0NvbnRyb2wua2V5XTtcbiAgICAgICAgY29udHJvbC5wdXNoKHRoaXMuaW5pdEl0ZW0oZHluYW1pY0NvbnRyb2wpKTtcbiAgICAgICAgY29udHJvbC5tYXJrQXNEaXJ0eSgpO1xuICAgIH1cblxuICAgIHJlbW92ZUl0ZW0oZHluYW1pY0NvbnRyb2wgOiBEeW5hbWljRm9ybUNvbnRyb2xCYXNlPGFueT4sIGk6IG51bWJlcikge1xuICAgICAgICBjb25zdCBjb250cm9sID0gPEZvcm1BcnJheT50aGlzLmZvcm0uY29udHJvbHNbZHluYW1pY0NvbnRyb2wua2V5XTtcbiAgICAgICAgY29udHJvbC5yZW1vdmVBdChpKTtcbiAgICAgICAgY29udHJvbC5tYXJrQXNEaXJ0eSgpO1xuICAgIH1cbn1cbiJdfQ==