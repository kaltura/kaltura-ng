import { ValidatorFn } from '@angular/forms';
export interface DynamicFormControlArgs<T> {
    value?: T;
    key: string;
    label?: string;
    description?: string;
    order?: number;
    allowMultiple?: boolean;
    validators?: Array<ValidatorFn>;
    validateOn?: 'change' | 'blur' | 'submit';
    errors?: {
        [key: string]: string;
    };
    inputHelperConfig?: {
        title?: string;
        body: string;
    };
    styleClass?: string;
    dateFormat?: string;
}
export declare abstract class DynamicFormControlBase<T> {
    abstract get controlType(): string;
    defaultValue: T;
    key: string;
    label: string;
    allowMultiple: boolean;
    order: number;
    description: string;
    validators: Array<ValidatorFn>;
    validateOn?: 'change' | 'blur' | 'submit';
    errors: {
        [key: string]: string;
    };
    inputHelperConfig: {
        title?: string;
        body: string;
    };
    styleClass: string;
    dateFormat?: string;
    constructor(options: DynamicFormControlArgs<T>);
}
