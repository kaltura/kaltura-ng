import { __decorate, __metadata } from "tslib";
import { Component, Input, OnInit, ViewEncapsulation, ViewChild, ElementRef, Renderer2 } from '@angular/core';
import { AreaBlockerMessage } from './area-blocker-message';
var AreaBlockerComponent = /** @class */ (function () {
    function AreaBlockerComponent(_renderer) {
        this._renderer = _renderer;
        this.bodyScroll = false;
        this.spinnerMarginTop = 0;
    }
    Object.defineProperty(AreaBlockerComponent.prototype, "showLoader", {
        get: function () {
            return this._showLoader;
        },
        set: function (value) {
            var _this = this;
            // once showLoader is set to true, use a timeout so *ngIf will cause the HTML to render and then calculate area blocker width
            if (value) {
                this._showLoaderHandler = setTimeout(function () {
                    _this._showLoaderHandler = null;
                    if (_this.bodyScroll && !!_this.areaBlockerContainer) {
                        var rect = _this.areaBlockerContainer.nativeElement.getBoundingClientRect();
                        if (rect.width < document.body.clientWidth && _this.spinnerContainer) {
                            _this._renderer.setStyle(_this.spinnerContainer.nativeElement, 'left', rect.left + rect.width / 2 + "px");
                        }
                    }
                    _this._renderer.setStyle(_this.spinnerContainer.nativeElement, 'opacity', '1'); // show the spinner only after its position is calculated to prevent seeing it jumps...
                }, 0);
            }
            else {
                if (this._showLoaderHandler) {
                    clearTimeout(this._showLoaderHandler);
                    this._showLoaderHandler = null;
                }
                if (this.bodyScroll && this.spinnerContainer) {
                    this._renderer.setStyle(this.spinnerContainer.nativeElement, 'opacity', '0'); // hide the spinner so we won't see it jump next time its position is recalculated
                }
            }
            this._showLoader = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AreaBlockerComponent.prototype, "message", {
        set: function (value) {
            var _this = this;
            if (typeof value === 'string') {
                this._message = { title: 'Error', message: value, buttons: [{ label: 'Dismiss', action: function () { _this._message = null; } }] };
            }
            else if (value instanceof AreaBlockerMessage) {
                this._message = value;
            }
            else {
                this._message = null;
            }
        },
        enumerable: true,
        configurable: true
    });
    AreaBlockerComponent.prototype.handleAction = function (button) {
        if (button) {
            button.action();
        }
    };
    AreaBlockerComponent.prototype.ngOnInit = function () {
    };
    AreaBlockerComponent.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    __decorate([
        ViewChild('areaBlockerContainer', { static: false }),
        __metadata("design:type", ElementRef)
    ], AreaBlockerComponent.prototype, "areaBlockerContainer", void 0);
    __decorate([
        ViewChild('spinnerContainer', { static: false }),
        __metadata("design:type", ElementRef)
    ], AreaBlockerComponent.prototype, "spinnerContainer", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AreaBlockerComponent.prototype, "bodyScroll", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], AreaBlockerComponent.prototype, "spinnerMarginTop", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AreaBlockerComponent.prototype, "classes", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], AreaBlockerComponent.prototype, "showLoader", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], AreaBlockerComponent.prototype, "message", null);
    AreaBlockerComponent = __decorate([
        Component({
            selector: 'k-area-blocker',
            template: "<ng-content></ng-content>\n<div #areaBlockerContainer *ngIf=\"showLoader || _message\" class=\"kAreaBlockerContainer\" [class.kAreaBlockerContainerError]=\"_message\" [ngClass]=\"classes\">\n  <div *ngIf=\"showLoader && !_message\" class=\"loading-backdrop show\">\n    <div #spinnerContainer class='spinner-container' [class.bodyScroll]=\"bodyScroll\" [style.marginTop]=\"spinnerMarginTop+'px'\">\n      <div class='spinner'><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></div>\n    </div>\n  </div>\n  <div  class=\"kErrorMessageContainer\" *ngIf=\"_message\" [class.bodyScroll]=\"bodyScroll\">\n    <div class=\"kErrorMessage\">\n      <div class=\"kErrorMessageTitle\">{{ _message.title }}</div>\n      <div class=\"kErrorMessageText\">{{ _message.message }}</div>\n      <div class=\"kErrorButtons\">\n        <button *ngFor=\"let button of _message.buttons\" (click)=\"handleAction(button)\" [ngClass]=\"button.classes\">{{button.label}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
            encapsulation: ViewEncapsulation.None,
            styles: ["k-area-blocker{position:relative;width:100%;height:100%;display:flex;flex:1 1 auto}k-area-blocker>.kAreaBlockerContainer{display:flex;flex-direction:row;align-items:center;justify-content:center;width:100%;height:100%;background-color:rgba(255,255,255,.7);position:absolute;top:0;left:0;z-index:510}@-webkit-keyframes kaltura-spinner{0%{transform:rotate(0) scale(.7);opacity:1}100%,70%{transform:rotate(360deg) scale(.7);opacity:1}82%{transform:rotate(360deg) scale(0);opacity:0}87%{transform:rotate(360deg) scale(.9);opacity:1}}@keyframes kaltura-spinner{0%{transform:rotate(0) scale(.7);opacity:1}100%,70%{transform:rotate(360deg) scale(.7);opacity:1}82%{transform:rotate(360deg) scale(0);opacity:0}87%{transform:rotate(360deg) scale(.9);opacity:1}}k-area-blocker>.kAreaBlockerContainer .loading-backdrop{position:absolute;top:0;left:0;width:100%;height:100%}k-area-blocker>.kAreaBlockerContainer .loading-backdrop .spinner-container{display:block;opacity:0;transform:translate3d(-50px,-50px,0)}k-area-blocker>.kAreaBlockerContainer .loading-backdrop .spinner-container.bodyScroll{position:fixed}k-area-blocker>.kAreaBlockerContainer .spinner{width:100px;height:100px;position:relative;-webkit-animation:2.5s infinite kaltura-spinner;animation:2.5s infinite kaltura-spinner}k-area-blocker>.kAreaBlockerContainer .spinner span{width:8px;height:8px;background-color:#fff;display:block;border-radius:8px;position:absolute;top:50%;left:50%;margin-top:-4px;margin-left:-4px}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(1){transform:rotate(45deg) translateX(-25px) translateY(-25px);background-color:#da1f26}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(2){transform:rotate(90deg) translateX(-25px) translateY(-25px);background-color:#06a885}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(3){transform:rotate(135deg) translateX(-25px) translateY(-25px);background-color:#009344}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(4){transform:rotate(180deg) translateX(-25px) translateY(-25px);background-color:#f8a61a}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(5){transform:rotate(225deg) translateX(-25px) translateY(-25px);background-color:#1b4a97}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(6){transform:rotate(270deg) translateX(-25px) translateY(-25px);background-color:#00abcc}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(7){transform:rotate(315deg) translateX(-25px) translateY(-25px);background-color:#b1d238}k-area-blocker>.kAreaBlockerContainer .spinner span:nth-child(8){transform:rotate(360deg) translateX(-25px) translateY(-25px);background-color:#fcd203}k-area-blocker>.kAreaBlockerContainer .kErrorMessageContainer{display:flex;align-items:center;justify-content:center;flex-direction:column;z-index:1001}k-area-blocker>.kAreaBlockerContainer .kErrorMessageContainer.bodyScroll{margin-top:0;position:fixed;top:calc(50vh - 90px);left:calc(50vw - 293px)}k-area-blocker>.kAreaBlockerContainer .kErrorMessage{width:586px;background-color:#fff;border-radius:4px;box-shadow:0 16px 20px 0 rgba(0,0,0,.3);padding:60px 32px 32px;box-sizing:border-box;text-align:center}k-area-blocker>.kAreaBlockerContainer .kErrorMessageTitle{color:#333;font-size:20px;font-weight:700;line-height:24px}k-area-blocker>.kAreaBlockerContainer .kErrorMessageText{max-height:250px;min-height:30px;padding:4px;overflow-y:auto;color:#999;font-size:15px;font-weight:700;line-height:18px;margin-top:26px;white-space:pre-wrap}k-area-blocker>.kAreaBlockerContainer .kErrorButtons{margin-top:44px}k-area-blocker>.kAreaBlockerContainer .kErrorButtons button{cursor:pointer;min-width:100px;outline:0;color:#333;font-size:14px;font-weight:700;line-height:17px;text-align:center;height:34px;border:1px solid #ccc;border-radius:3px;background-color:#fff;box-sizing:border-box;padding:0 12px;margin:0 8px}"]
        }),
        __metadata("design:paramtypes", [Renderer2])
    ], AreaBlockerComponent);
    return AreaBlockerComponent;
}());
export { AreaBlockerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJlYS1ibG9ja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BrYWx0dXJhLW5nL2thbHR1cmEtdWkvIiwic291cmNlcyI6WyJsaWIvYXJlYS1ibG9ja2VyL2FyZWEtYmxvY2tlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQVE1RDtJQXlERSw4QkFBb0IsU0FBb0I7UUFBcEIsY0FBUyxHQUFULFNBQVMsQ0FBVztRQWhEL0IsZUFBVSxHQUFhLEtBQUssQ0FBQztRQUM3QixxQkFBZ0IsR0FBWSxDQUFDLENBQUM7SUErQ0csQ0FBQztJQTVDbEMsc0JBQUksNENBQVU7YUF5QnZCO1lBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO1FBQzFCLENBQUM7YUEzQlEsVUFBZSxLQUFlO1lBQXZDLGlCQXVCQztZQXRCRyw2SEFBNkg7WUFDN0gsSUFBSSxLQUFLLEVBQUU7Z0JBQ1AsSUFBSSxDQUFDLGtCQUFrQixHQUFHLFVBQVUsQ0FBQztvQkFDakMsS0FBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztvQkFDL0IsSUFBSSxLQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsQ0FBQyxLQUFJLENBQUMsb0JBQW9CLEVBQUU7d0JBQ2hELElBQU0sSUFBSSxHQUFHLEtBQUksQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQzt3QkFDN0UsSUFBSSxJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUksQ0FBQyxnQkFBZ0IsRUFBRTs0QkFDakUsS0FBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxNQUFNLEVBQUssSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsT0FBSSxDQUFDLENBQUM7eUJBQzNHO3FCQUNKO29CQUNELEtBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEtBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsdUZBQXVGO2dCQUN6SyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDVDtpQkFBTTtnQkFDSCxJQUFJLElBQUksQ0FBQyxrQkFBa0IsRUFBRTtvQkFDekIsWUFBWSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO29CQUN0QyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO2lCQUNsQztnQkFDRCxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO29CQUMxQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLGtGQUFrRjtpQkFDbks7YUFDSjtZQUNELElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUM7OztPQUFBO0lBT0Qsc0JBQUkseUNBQU87YUFBWCxVQUFZLEtBQW1DO1lBRC9DLGlCQWFDO1lBVkMsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQzdCO2dCQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxLQUFLLEVBQUcsT0FBTyxFQUFFLE9BQU8sRUFBRyxLQUFLLEVBQUUsT0FBTyxFQUFHLENBQUMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRyxjQUFRLEtBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLENBQUEsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDO2FBQy9IO2lCQUFLLElBQUksS0FBSyxZQUFZLGtCQUFrQixFQUM3QztnQkFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQzthQUN2QjtpQkFDRDtnQkFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQzthQUN0QjtRQUNILENBQUM7OztPQUFBO0lBSU0sMkNBQVksR0FBbkIsVUFBb0IsTUFBK0I7UUFDakQsSUFBSSxNQUFNLEVBQUU7WUFDVixNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDO0lBRUQsdUNBQVEsR0FBUjtJQUdBLENBQUM7O2dCQVg4QixTQUFTOztJQW5EYztRQUFyRCxTQUFTLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7a0NBQXVCLFVBQVU7c0VBQUM7SUFDckM7UUFBakQsU0FBUyxDQUFDLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDO2tDQUFtQixVQUFVO2tFQUFDO0lBRXRFO1FBQVIsS0FBSyxFQUFFOzs0REFBOEI7SUFDN0I7UUFBUixLQUFLLEVBQUU7O2tFQUErQjtJQUM5QjtRQUFSLEtBQUssRUFBRTs7eURBQWtCO0lBRWpCO1FBQVIsS0FBSyxFQUFFOzs7MERBdUJQO0lBT0Q7UUFEQyxLQUFLLEVBQUU7Ozt1REFhUDtJQXZEVSxvQkFBb0I7UUFOaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQiw0aUNBQTRDO1lBRTVDLGFBQWEsRUFBRyxpQkFBaUIsQ0FBQyxJQUFJOztTQUN2QyxDQUFDO3lDQTBEK0IsU0FBUztPQXpEN0Isb0JBQW9CLENBc0VoQztJQUFELDJCQUFDO0NBQUEsQUF0RUQsSUFzRUM7U0F0RVksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvbiwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFyZWFCbG9ja2VyTWVzc2FnZSB9IGZyb20gJy4vYXJlYS1ibG9ja2VyLW1lc3NhZ2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdrLWFyZWEtYmxvY2tlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9hcmVhLWJsb2NrZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9hcmVhLWJsb2NrZXIuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbiA6IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgQXJlYUJsb2NrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQgIHtcblxuICBwcml2YXRlIF9zaG93TG9hZGVyOiBib29sZWFuO1xuICBwdWJsaWMgX21lc3NhZ2UgOiBBcmVhQmxvY2tlck1lc3NhZ2U7XG4gIHByaXZhdGUgX3Nob3dMb2FkZXJIYW5kbGVyOiBudW1iZXI7XG5cbiAgQFZpZXdDaGlsZCgnYXJlYUJsb2NrZXJDb250YWluZXInLCB7IHN0YXRpYzogZmFsc2UgfSkgYXJlYUJsb2NrZXJDb250YWluZXI6IEVsZW1lbnRSZWY7XG4gIEBWaWV3Q2hpbGQoJ3NwaW5uZXJDb250YWluZXInLCB7IHN0YXRpYzogZmFsc2UgfSkgc3Bpbm5lckNvbnRhaW5lcjogRWxlbWVudFJlZjtcblxuICBASW5wdXQoKSBib2R5U2Nyb2xsIDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBzcGlubmVyTWFyZ2luVG9wIDogbnVtYmVyID0gMDtcbiAgQElucHV0KCkgY2xhc3NlcyA6IHN0cmluZztcblxuICBASW5wdXQoKSBzZXQgc2hvd0xvYWRlcih2YWx1ZSA6IGJvb2xlYW4pIHtcbiAgICAgIC8vIG9uY2Ugc2hvd0xvYWRlciBpcyBzZXQgdG8gdHJ1ZSwgdXNlIGEgdGltZW91dCBzbyAqbmdJZiB3aWxsIGNhdXNlIHRoZSBIVE1MIHRvIHJlbmRlciBhbmQgdGhlbiBjYWxjdWxhdGUgYXJlYSBibG9ja2VyIHdpZHRoXG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICB0aGlzLl9zaG93TG9hZGVySGFuZGxlciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICB0aGlzLl9zaG93TG9hZGVySGFuZGxlciA9IG51bGw7XG4gICAgICAgICAgICAgIGlmICh0aGlzLmJvZHlTY3JvbGwgJiYgISF0aGlzLmFyZWFCbG9ja2VyQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5hcmVhQmxvY2tlckNvbnRhaW5lci5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgICAgICAgaWYgKHJlY3Qud2lkdGggPCBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoICYmIHRoaXMuc3Bpbm5lckNvbnRhaW5lcikge1xuICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3JlbmRlcmVyLnNldFN0eWxlKHRoaXMuc3Bpbm5lckNvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnbGVmdCcsIGAke3JlY3QubGVmdCArIHJlY3Qud2lkdGggLyAyfXB4YCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIuc2V0U3R5bGUodGhpcy5zcGlubmVyQ29udGFpbmVyLm5hdGl2ZUVsZW1lbnQsICdvcGFjaXR5JywgJzEnKTsgLy8gc2hvdyB0aGUgc3Bpbm5lciBvbmx5IGFmdGVyIGl0cyBwb3NpdGlvbiBpcyBjYWxjdWxhdGVkIHRvIHByZXZlbnQgc2VlaW5nIGl0IGp1bXBzLi4uXG4gICAgICAgICAgfSwgMCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICh0aGlzLl9zaG93TG9hZGVySGFuZGxlcikge1xuICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fc2hvd0xvYWRlckhhbmRsZXIpO1xuICAgICAgICAgICAgICB0aGlzLl9zaG93TG9hZGVySGFuZGxlciA9IG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0aGlzLmJvZHlTY3JvbGwgJiYgdGhpcy5zcGlubmVyQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgIHRoaXMuX3JlbmRlcmVyLnNldFN0eWxlKHRoaXMuc3Bpbm5lckNvbnRhaW5lci5uYXRpdmVFbGVtZW50LCAnb3BhY2l0eScsICcwJyk7IC8vIGhpZGUgdGhlIHNwaW5uZXIgc28gd2Ugd29uJ3Qgc2VlIGl0IGp1bXAgbmV4dCB0aW1lIGl0cyBwb3NpdGlvbiBpcyByZWNhbGN1bGF0ZWRcbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLl9zaG93TG9hZGVyID0gdmFsdWU7XG4gIH1cblxuICBnZXQgc2hvd0xvYWRlcigpOiBib29sZWFue1xuICAgIHJldHVybiB0aGlzLl9zaG93TG9hZGVyO1xuICB9XG5cbiAgQElucHV0KClcbiAgc2V0IG1lc3NhZ2UodmFsdWUgOiBBcmVhQmxvY2tlck1lc3NhZ2UgfCBzdHJpbmcpXG4gIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJylcbiAgICB7XG4gICAgICB0aGlzLl9tZXNzYWdlID0geyB0aXRsZSA6ICdFcnJvcicsIG1lc3NhZ2UgOiB2YWx1ZSwgYnV0dG9ucyA6IFt7IGxhYmVsIDonRGlzbWlzcycsIGFjdGlvbiA6ICgpID0+IHsgdGhpcy5fbWVzc2FnZSA9IG51bGw7fX1dfTtcbiAgICB9ZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcmVhQmxvY2tlck1lc3NhZ2UpXG4gICAge1xuICAgICAgdGhpcy5fbWVzc2FnZSA9IHZhbHVlO1xuICAgIH1lbHNlXG4gICAge1xuICAgICAgdGhpcy5fbWVzc2FnZSA9IG51bGw7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfcmVuZGVyZXI6IFJlbmRlcmVyMil7fVxuXG4gIHB1YmxpYyBoYW5kbGVBY3Rpb24oYnV0dG9uIDogeyBhY3Rpb24gOiAoKSA9PiB2b2lkfSkge1xuICAgIGlmIChidXR0b24pIHtcbiAgICAgIGJ1dHRvbi5hY3Rpb24oKTtcbiAgICB9XG4gIH1cblxuICBuZ09uSW5pdCgpXG4gIHtcblxuICB9XG5cbn1cblxuIl19