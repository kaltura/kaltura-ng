{"version":3,"file":"kaltura-ng-kaltura-common.js","sources":["ng://@kaltura-ng/kaltura-common/lib/operation-tag/operation-tag-store-mediator.ts","ng://@kaltura-ng/kaltura-common/lib/operation-tag/operation-tag-manager.service.ts","ng://@kaltura-ng/kaltura-common/lib/operation-tag/operation-tag.module.ts","ng://@kaltura-ng/kaltura-common/lib/friendly-hash-id.ts","ng://@kaltura-ng/kaltura-common/lib/kaltura-logger.ts","ng://@kaltura-ng/kaltura-common/lib/server-polls/server-polls.service.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/tracked-file.ts","ng://@kaltura-ng/kaltura-common/lib/rxjs/operators/cancel-on-destroy.ts","ng://@kaltura-ng/kaltura-common/lib/rxjs/operators/tag.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/upload-management.service.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/upload-management.module.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/upload-file-adapter.ts","ng://@kaltura-ng/kaltura-common/lib/utils/download.ts","ng://@kaltura-ng/kaltura-common/lib/utils/kaltura-utils.ts","ng://@kaltura-ng/kaltura-common/lib/xml-parser/xml-to-json.ts","ng://@kaltura-ng/kaltura-common/lib/xml-parser/xml-parser.ts","ng://@kaltura-ng/kaltura-common/lib/app-storage.service.ts","ng://@kaltura-ng/kaltura-common/lib/kaltura-common.module.ts","ng://@kaltura-ng/kaltura-common/public_api.ts","ng://@kaltura-ng/kaltura-common/kaltura-ng-kaltura-common.ts"],"sourcesContent":["export interface OperationTagManagerProxy {\n    increase: (tag: string) => void;\n    decrease: (tag: string) => void;\n}\n\nexport class OperationTagStoreMediator{\n\n    private static _operationsTagManager: OperationTagManagerProxy = null;\n\n    public static register(operationsTagManager: OperationTagManagerProxy){\n        this._operationsTagManager = operationsTagManager;\n    }\n\n    public static increase(tag: string){\n        if (this._operationsTagManager){\n            this._operationsTagManager.increase(tag);\n        }\n    }\n\n    public static decrease(tag: string){\n        if (this._operationsTagManager){\n            this._operationsTagManager.decrease(tag);\n        }\n    }\n\n}","import {Injectable, OnDestroy} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {OperationTagManagerProxy} from './operation-tag-store-mediator';\n\n@Injectable()\nexport class OperationTagManagerService implements OperationTagManagerProxy {\n\n    private _tagStatus = new BehaviorSubject<{ [key: string]: number }>({});\n\n    // whenever a tag status changes this event is emitted\n    public tagStatus$ = this._tagStatus.asObservable();\n\n    constructor() {\n    }\n\n    // increase the count for a tag\n    increase(tag: string): void {\n        const tagsData = this._tagStatus.getValue();\n        if (!tagsData[tag]) {\n            tagsData[tag] = 0;\n        }\n        tagsData[tag]++;\n        this._tagStatus.next(tagsData);\n\n    }\n\n    decrease(tag: string): void {\n        const tagsData = this._tagStatus.getValue();\n        if (tagsData[tag] > 0) {\n            tagsData[tag]--;\n            this._tagStatus.next(tagsData);\n        } else {\n            tagsData[tag] = 0;\n            this._tagStatus.next(tagsData);\n\n        }\n    }\n}\n","\nimport { Self, Optional, NgModule, ModuleWithProviders } from '@angular/core';\nimport {OperationTagStoreMediator} from \"./operation-tag-store-mediator\";\nimport {OperationTagManagerService} from \"./operation-tag-manager.service\";\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n    ]\n})\nexport class OperationTagModule {\n\n    // Prevents angular from creating another instance for operationTagManagerService when defined as provider in more than one place\n    // (Each component will get the same instance as in the module/component that called the operationTagManagerService.forRoot)\n    constructor(@Self() @Optional() operationTagManagerService: OperationTagManagerService){\n        if (operationTagManagerService) {\n            OperationTagStoreMediator.register(operationTagManagerService);\n        }\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: OperationTagModule,\n            providers: <any[]>[\n                OperationTagManagerService\n            ]\n        };\n    }\n}\n","'use strict';\n/**\n * Source - from http://fiznool.com/blog/2014/11/16/short-id-generation-in-javascript/\n */\n\n/**\n * The default alphabet is 25 numbers and lowercase letters.\n * Any numbers that look like letters and vice versa are removed:\n * 1 l, 0 o.\n * Also the following letters are not present, to prevent any\n * expletives: cfhistu\n */\nvar DEFAULT_ALPHABET =\n    '23456789abdegjkmnpqrvwxyz';\n\n// Governs the length of the ID.\n// With an alphabet of 25 chars,\n// a length of 8 gives us 25^8 or\n// 152,587,890,625 possibilities.\n// Should be enough...\nvar DEFAULT_ID_LENGTH = 5;\n\n/**\n * Governs the number of times we should try to find\n * a unique value before giving up.\n */\nvar UNIQUE_RETRIES = 9999;\n\n\n\nexport class FriendlyHashId {\n\n    static defaultInstance : FriendlyHashId = null;\n    static generate(alphabetOptions? : any) : string {\n        if (!FriendlyHashId.defaultInstance)\n        {\n            FriendlyHashId.defaultInstance = new FriendlyHashId();\n        }\n        return FriendlyHashId.defaultInstance.generate(alphabetOptions);\n    }\n\n    /**\n     * Returns a randomly-generated friendly ID.\n     * Note that the friendly ID is not guaranteed to be\n     * unique to any other ID generated by this same method,\n     * so it is up to you to check for uniqueness.\n     * return {String} friendly ID.\n     */\n    generate(alphabetOptions? : any) : string\n    {\n        var options = alphabetOptions || {};\n\n        var alphabet = options.alphabet || DEFAULT_ALPHABET;\n        var idLength = options.idLength || DEFAULT_ID_LENGTH;\n\n        var rtn = '';\n        for (var i = 0; i < idLength; i++) {\n            rtn += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\n        }\n        return rtn;\n    };\n\n    /**\n     * Tries to generate a unique ID that is not defined in the\n     * `previous` array.\n     * param  {Array} previous The list of previous ids to avoid.\n     * return {String} A unique ID, or `null` if one could not be generated.\n     */\n    generateUnique(previous : any[]) {\n        previous = previous || [];\n        var retries = 0;\n        var id;\n\n        // Try to generate a unique ID,\n        // i.e. one that isn't in the previous.\n        while (!id && retries < UNIQUE_RETRIES) {\n            id = this.generate();\n            if (previous.indexOf(id) !== -1) {\n                id = null;\n                retries++;\n            }\n        }\n\n        return id;\n    };\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport type Context = { [key: string]: any };\nexport type DefferedContext = () => Context;\n\nexport const KalturaLoggerInjectionToken = new InjectionToken<KalturaLogger>('kaltura-logger');\n\nexport interface KalturaLogger {\n\ttrace(message: string, context?: Context): void;\n\n\ttrace(message: string, context?: DefferedContext): void;\n\n\ttrace(message: string, context?: Context | DefferedContext): void;\n\n\tdebug(message: string, context?: Context): void;\n\n\tdebug(message: string, context?: DefferedContext): void;\n\n\tdebug(message: string, context?: Context | DefferedContext): void;\n\n\tinfo(message: string, context?: Context): void;\n\n\tinfo(message: string, context?: DefferedContext): void;\n\n\tinfo(message: string, context?: Context | DefferedContext): void;\n\n\twarn(message: string, context?: Context): void;\n\n\twarn(message: string, context?: DefferedContext): void;\n\n\twarn(message: string, context?: Context | DefferedContext): void;\n\n\terror(message: string, context?: Context): void;\n\n\terror(message: string, error?: Error): void;\n\n\terror(message: string, context?: Error | Context): void;\n\n\tfatal(message: string, context?: Context): void;\n\n\tfatal(message: string, error?: Error): void;\n\n\tfatal(message: string, context?: Error | Context): void;\n\n\tsubLogger(name: string): KalturaLogger;\n}\n\nexport class EmptyLogger implements KalturaLogger {\n\ttrace(message: string, context?: Context): void;\n\ttrace(message: string, context?: DefferedContext): void;\n\ttrace(message: string, context?: Context | DefferedContext): void;\n\ttrace(message: string, context?): void {\n\t}\n\n\tdebug(message: string, context?: Context): void;\n\tdebug(message: string, context?: DefferedContext): void;\n\tdebug(message: string, context?: Context | DefferedContext): void;\n\tdebug(message: string, context?): void {\n\t}\n\n\tinfo(message: string, context?: Context): void;\n\tinfo(message: string, context?: DefferedContext): void;\n\tinfo(message: string, context?: Context | DefferedContext): void;\n\tinfo(message: string, context?): void {\n\t}\n\n\twarn(message: string, context?: Context): void;\n\twarn(message: string, context?: DefferedContext): void;\n\twarn(message: string, context?: Context | DefferedContext): void;\n\twarn(message: string, context?): void {\n\t}\n\n\terror(message: string, context?: Context): void;\n\terror(message: string, error?: Error): void;\n\terror(message: string, context?: Error | Context): void;\n\terror(message: string, context?): void {\n\t}\n\n\tfatal(message: string, context?: Context): void;\n\tfatal(message: string, error?: Error): void;\n\tfatal(message: string, context?: Error | Context): void;\n\tfatal(message: string, context?): void {\n\t}\n\n\tsubLogger(name: string): KalturaLogger {\n\t\treturn new EmptyLogger();\n\t}\n}\n\n","import { Observable } from 'rxjs';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { FriendlyHashId } from '../friendly-hash-id';\nimport { ISubscription } from 'rxjs/Subscription';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { EmptyLogger, KalturaLogger } from '../kaltura-logger';\nimport { Optional } from '@angular/core';\n\nexport type PollInterval = 10 | 30 | 60 | 300;\n\nexport interface RequestFactory<TRequest, TResponse> {\n  create(): TRequest;\n}\n\ninterface PollItem<TError> {\n  id: string;\n  interval: PollInterval;\n  lastExecution: Date,\n  queryEnabled: boolean,\n  requestFactory: RequestFactory<any, any>,\n  observer: Subscriber<{result: any, error: TError}>\n}\n\nexport abstract class ServerPolls<TRequest, TError> {\n  private _pollQueue: { [key: string]: PollItem<TError> } = {};\n  private _tokenGenerator = new FriendlyHashId();\n  private _queueTimeout: number;\n  private _missingDestoryHandling = false;\n  private _subscriptions: ISubscription[] = [];\n  private _state = new BehaviorSubject({ busy: false });\n    private _logger: KalturaLogger;\n  public state$ = this._state.asObservable();\n  private _queueInterval: number = null;\n\n  protected abstract _executeRequests(requests: TRequest[]): Observable<{ error: TError, result: any }[]>;\n\n  protected abstract _createGlobalError(error?: Error): TError;\n\n  protected abstract _getOnDestroy$(): Observable<void>;\n\n  protected abstract _canExecute(): boolean;\n\n  constructor(kalturaLogger: KalturaLogger) {\n\n\t  if (kalturaLogger) {\n\t\t  this._logger = kalturaLogger;\n\t  } else {\n\t\t  this._logger = new EmptyLogger();\n\t  }\n\t  this._initialize();\n  }\n\n  private _warnAboutMissingDestory(): void {\n      // NOTICE: showing a warning every time since this is an implementation issue that must be addressed during development.\n      const error = `calling method '_getOnDestroy$()' didn't return valid observable (did you remember to provide 'Observable' that will be invoked from ngOnDestroy method?)`;\n      this._logger.error(error);\n  }\n\n  private _initialize(): void {\n      this._logger.trace('_initialize()');\n      setTimeout(() => {\n          const onDestroy$ = this._getOnDestroy$();\n\n          if (!onDestroy$) {\n              this._missingDestoryHandling = true;\n              this._warnAboutMissingDestory();\n          } else {\n              onDestroy$.subscribe(() => {\n                  this._logger.trace('onDestroy$.subscribe()');\n                  this._cancelQueueInterval();\n                  this._subscriptions.forEach(item => {\n                      item.unsubscribe();\n                  });\n                  this._subscriptions = [];\n              });\n          }\n      });\n  }\n\n  private _cancelQueueInterval(): void {\n    clearTimeout(this._queueTimeout);\n  }\n\n  private _getPollQueueList(): PollItem<TError>[] {\n    return Object.keys(this._pollQueue).map(key => this._pollQueue[key]);\n  }\n\n  private _setupQueueTimer(): void {\n      this._cancelQueueInterval();\n\n      const pollQueueList = this._getPollQueueList();\n\n      if (this._missingDestoryHandling) {\n          // NOTICE: showing a warning every time since this is an implementation issue that must be addressed during development.\n          this._warnAboutMissingDestory();\n      }\n\n\n      if (!pollQueueList.length) {\n          this._logger.info('no actions found in the queue. suspending interval until an action will be added');\n          return;\n      }\n\n      let newInterval: number = null;\n      const hasNewPolls = pollQueueList.some(({lastExecution}) => !!lastExecution);\n      if (!hasNewPolls) {\n          newInterval = Math.min(...pollQueueList.map(({interval}) => interval)) / 2;\n      }\n      newInterval = newInterval && newInterval > 10 ? newInterval : 10; // default to ten seconds (minimum value)\n      if (this._queueInterval !== newInterval) {\n          this._logger.info( `updating queue interval to poll server every ${newInterval} seconds`);\n          this._queueInterval = newInterval;\n      }\n\n      this._queueTimeout = setTimeout(() => {\n          this._onQueueTimerTick();\n      }, this._queueInterval * 1000);\n  }\n\n  public forcePolling() {\n      this._logger.info('force server polling requested');\n      // cancel active requests\n      this._cancelQueueInterval();\n      this._subscriptions.forEach(subscription => {\n          subscription.unsubscribe();\n      });\n      this._subscriptions = [];\n\n      // enable all requests\n      this._getPollQueueList().forEach(item => item.queryEnabled = true);\n\n      // send poll request for all requests\n      const subscription = this._queryPollItems(this._getPollQueueList())\n          .subscribe(() => this._setupQueueTimer(), () => this._setupQueueTimer());\n  }\n\n    private _queryPollItems(items: PollItem<TError>[]): Observable<void> {\n        return Observable.create(observer => {\n            this._logger.debug(`execute server polling`);\n\n            if (!this._canExecute() || !items || items.length === 0) {\n                this._logger.debug(`execute server polling ignored, cannot execute request or no items provided to query`);\n                observer.next(undefined);\n                return;\n            }\n\n            const requests = items.map(item => {\n                let ItemRequest: TRequest;\n                let error: TError;\n                try {\n                    ItemRequest = item.requestFactory.create();\n                } catch (err) {\n                    this._logger.error(`failed to create a request for '${item.id}'. got the following error : '${err.message}'`);\n\n                    ItemRequest = null;\n                    error = this._createGlobalError(err);\n                }\n\n                if (error) {\n                    this._propagateServerResponse(item, {error: error, result: null});\n                }\n                return ItemRequest ? {pollItem: item, request: ItemRequest} : null;\n            }).filter(Boolean);\n\n            this._logger.info(`executing server poll for ${requests.length} items`);\n\n            if (!requests.length)\n            {\n                observer.next(undefined);\n            }else {\n                const subscription = this._executeRequests(requests.map(item => item.request))\n                    .subscribe(\n                        response => {\n                            this._removeSubscription(subscription);\n\n                            this._logger.info(`got ${response.length} responses. propagate responses to relevant actions`);\n                            requests.forEach(({pollItem}, index) => {\n                                let result = response[index];\n                                if (Array.isArray(result)) {\n                                    result = { result, error: null }\n                                }\n                                this._propagateServerResponse(pollItem, result);\n                            });\n\n                            observer.next(undefined);\n                        },\n                        (error) => {\n\n                            this._logger.error(`failed to query the server. got the following error : '${error.message}'`);\n                            this._removeSubscription(subscription);\n\n                            const errorResponse = {error: this._createGlobalError(error), result: null};\n                            requests.forEach(({pollItem}) => {\n                                this._propagateServerResponse(pollItem, errorResponse);\n                            });\n\n                            observer.next(undefined);\n                        }\n                    );\n                this._subscriptions.push(subscription);\n\n                return () => {\n                    this._removeSubscription(subscription);\n                };\n            }\n\n\n        });\n    }\n\n    private _removeSubscription(subscription: ISubscription): void {\n        if (subscription) {\n            const subscriptionIndex = this._subscriptions.indexOf(subscription);\n\n            if (subscriptionIndex > -1) {\n                this._subscriptions.splice(\n                    subscriptionIndex,\n                    1\n                )\n            }\n        }\n    }\n\n    private _onQueueTimerTick(): void {\n\n        if (!this._canExecute()) {\n            this._setupQueueTimer();\n            this._logger.trace('_onQueueTimerTick(): canExecute() check failed. ignore current execution');\n            return;\n        }\n\n        this._logger.debug('prepare server poll request');\n\n        const now = Number(new Date());\n        const itemsToBeExecuted = this._getPollQueueList()\n            .filter(item => item.queryEnabled && (!item.lastExecution || (Number(item.lastExecution) + (item.interval * 1000) <= now)));\n\n\n        if (!itemsToBeExecuted.length) {\n            this._logger.debug('nothing to run. Waiting next tick...');\n            this._setupQueueTimer();\n            return;\n        }\n\n        this._logger.info(`set busy mode to true`);\n        this._state.next({busy: true});\n        this._queryPollItems(itemsToBeExecuted)\n            .subscribe(\n                () => {\n                    this._state.next({busy: false});\n                    this._setupQueueTimer();\n                },\n                (error) => {\n                    this._state.next({busy: false});\n                }\n            );\n    }\n\n  private _propagateServerResponse(item: PollItem<TError>, response: { error: TError, result: any }): void{\n      try {\n          if (this._pollQueue[item.id]) {\n              this._logger.debug(`propagating response for ${item.id}`);\n              item.lastExecution = new Date();\n              item.observer.next(response);\n          }else\n          {\n              this._logger.info(`cannot find registered action for '${item.id} (it might indicate that this action was unsubscribed while a request to the server was executed)`);\n          }\n      } catch (err) {\n          this._logger.warn( `error happened while propagating response of '${item.id}'.ignoring error. got the following error: ${err.message}`);\n      }\n  }\n\n  public isBusy(): boolean {\n      return this._state.getValue().busy;\n  }\n\n  public register<TResponse>(intervalInSeconds: PollInterval, requestFactory: RequestFactory<TRequest, TResponse>): Observable<{ error: TError, result: TResponse }> {\n    return Observable.create(observer => {\n      const newPollId = this._tokenGenerator.generateUnique(Object.keys(this._pollQueue));\n        this._logger.info( `register new poll request ${newPollId} (interval = ${intervalInSeconds} seconds)`);\n      const newPollItem: PollItem<TError> = this._pollQueue[newPollId] = {\n        id: newPollId,\n        interval: intervalInSeconds,\n        lastExecution: null,\n          queryEnabled: false,\n        requestFactory: requestFactory,\n        observer: observer\n      };\n\n      this._logger.info( `execute the added request '${newPollId}'`);\n      let initialRequest = this._queryPollItems([newPollItem])\n          .subscribe(\n              () =>\n              {\n                  initialRequest = null;\n                  newPollItem.queryEnabled = true;\n                  this._setupQueueTimer();\n              },\n              () =>\n              {\n                  initialRequest = null;\n                  newPollItem.queryEnabled = true;\n                  this._setupQueueTimer();\n              }\n          );\n\n      return () => {\n          this._logger.info(`stop polling for ${newPollId}`);\n          if (initialRequest) {\n              initialRequest.unsubscribe();\n          }\n          delete this._pollQueue[newPollId];\n      }\n    });\n  }\n}\n","import { UploadFileData } from './upload-file-data';\nimport { ISubscription } from 'rxjs/Subscription';\n\nexport type TrackedFileStatus = string\n\nexport class TrackedFileStatuses {\n    public static readonly added: TrackedFileStatus = 'added'; // one-time status, cannot be assigned twice\n    public static readonly pendingPrepare: TrackedFileStatus = 'pendingPrepare';\n    public static readonly preparing: TrackedFileStatus = 'preparing';\n    public static readonly prepared: TrackedFileStatus = 'prepared'; // one-time status, cannot be assigned twice\n    public static readonly pendingUpload: TrackedFileStatus = 'waitingUpload';\n    public static readonly uploading: TrackedFileStatus = 'uploading';\n    public static readonly uploadCompleted: TrackedFileStatus = 'uploadCompleted'; // one-time status, cannot be assigned twice\n    public static readonly failure: TrackedFileStatus = 'failure';\n    public static readonly cancelled: TrackedFileStatus = 'cancelled';\n    public static readonly purged: TrackedFileStatus = 'purged';  // one-time status, cannot be assigned twice\n}\n\nexport interface TrackedFileData\n{\n    id: string;\n    status: TrackedFileStatus;\n    uploadStartAt: Date;\n    progress: number;\n    uploadCompleteAt?: Date;\n    uploadOrder: number;\n    failureType?: string;\n    failureReason?: string;\n    data: UploadFileData;\n}\n\nexport interface TrackedFileChanges\n{\n    status?: TrackedFileStatus;\n    uploadStartAt?: Date;\n    progress?: number;\n    uploadCompleteAt?: Date;\n    uploadOrder?: number;\n    failureType?: string;\n    failureReason?: string;\n}\n\nexport class TrackedFile {\n    private _id: string;\n    public get id():string{\n        return this._id;\n    }\n    status: TrackedFileStatus = TrackedFileStatuses.added;\n    uploadStartAt?: Date;\n    progress: number =  0;\n    uploadCompleteAt: Date = null;\n    uploadOrder: number = 0;\n    failureType: string;\n    failureReason: string;\n    data: UploadFileData;\n    uploadSubscription: ISubscription;\n    private _statusHistory : { [key:string] : boolean } = {\n        'added' : true\n    };\n\n    constructor(id: string, data: UploadFileData)\n    {\n        this._id = id;\n        this.data = data;\n    }\n\n    public asData() : TrackedFileData{\n        return {\n            id: this.id,\n            status: this.status,\n            uploadStartAt: this.uploadStartAt,\n            progress: this.progress,\n            uploadCompleteAt: this.uploadCompleteAt,\n            uploadOrder: this.uploadOrder,\n            failureType: this.failureType,\n            failureReason: this.failureReason,\n            data: this.data\n        };\n    }\n\n    public update(changes: TrackedFileChanges): void\n    {\n        if (changes.status && changes.status !== this.status) {\n            if (!this.canTransitionTo(changes.status))\n            {\n                throw new Error(`file ${this.id}: cannot update status to '${changes.status}'`);\n            }\n\n            this._statusHistory[changes.status] = true;\n        }\n\n        Object.assign(this,changes);\n    }\n\n    public wasInStatus(status: TrackedFileStatus): boolean\n    {\n        return !!this._statusHistory[status];\n    }\n\n    public canTransitionTo(toStatus: string) : boolean {\n        let result: boolean = false;\n        const trackedFile = this;\n        const fromStatus = trackedFile ? trackedFile.status : null;\n\n        if (trackedFile  && fromStatus && toStatus) {\n\n            if (fromStatus === TrackedFileStatuses.purged)\n            {\n                // never allow changing status once file was purged\n                result = false;\n            }\n\n            switch (toStatus) {\n                case TrackedFileStatuses.added:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.added);\n                    break;\n                case TrackedFileStatuses.pendingPrepare:\n                    result = !this.wasInStatus(TrackedFileStatuses.prepared);\n                    break;\n                case TrackedFileStatuses.preparing:\n                    result = !this.wasInStatus(TrackedFileStatuses.prepared)\n                        && fromStatus === TrackedFileStatuses.pendingPrepare;\n                    break;\n                case TrackedFileStatuses.prepared:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.prepared)\n                        && fromStatus === TrackedFileStatuses.preparing;\n                    break;\n                case TrackedFileStatuses.pendingUpload:\n                    result = this.wasInStatus(TrackedFileStatuses.prepared)\n                        && !this.wasInStatus(TrackedFileStatuses.uploadCompleted);\n                    break;\n                case TrackedFileStatuses.uploading:\n                    result = !this.wasInStatus(TrackedFileStatuses.uploadCompleted)\n                        && fromStatus === TrackedFileStatuses.pendingUpload;\n                    break;\n                case TrackedFileStatuses.uploadCompleted:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.uploadCompleted)\n                        && fromStatus === TrackedFileStatuses.uploading;\n                    break;\n                case TrackedFileStatuses.cancelled:\n                    result = ([TrackedFileStatuses.cancelled, TrackedFileStatuses.uploadCompleted, TrackedFileStatuses.purged].indexOf(fromStatus) === -1);\n                    break;\n                case TrackedFileStatuses.failure:\n                    // always allow changing to 'failure' status (assuming 'purge' is handled separately before)\n                    result = ([TrackedFileStatuses.uploadCompleted, TrackedFileStatuses.purged].indexOf(fromStatus) === -1);\n                    break;\n                case TrackedFileStatuses.purged:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.purged);\n                    break;\n                default:\n                    throw new Error(`unknown status provided '${toStatus}'`);\n            }\n        }\n\n        return result;\n    }\n\n}\n","import {merge, MonoTypeOperatorFunction, Observable, Operator, Subject, Subscriber, TeardownLogic} from \"rxjs\";\nimport {OnDestroy} from \"@angular/core\";\n\nconst __ngOnDestroySource__ = Symbol(\"__ngOnDestroySource__\");\nconst __ngOnDestroy__ = Symbol(\"__ngOnDestroy__\");\n\ninterface EnhancedOnDestroy extends OnDestroy {\n  [__ngOnDestroySource__]: Subject<string>;\n  [__ngOnDestroy__]: () => void;\n}\n\nexport function cancelOnDestroy<T>(instance: OnDestroy,\n                                   manualDestroy?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new CancelOnDestroyOperator(instance, manualDestroy));\n}\n\nclass CancelOnDestroyOperator<T> implements Operator<T, T> {\n  constructor(private instance: OnDestroy, private manualDestroy?: Observable<any>) {\n    if (instance.ngOnDestroy) {\n      if (!(<EnhancedOnDestroy>instance)[__ngOnDestroySource__]) {\n        (<EnhancedOnDestroy>instance)[__ngOnDestroySource__] = new Subject();\n        (<EnhancedOnDestroy>instance)[__ngOnDestroy__] = instance.ngOnDestroy;\n\n        instance.ngOnDestroy = function (this: EnhancedOnDestroy) {\n\n          this[__ngOnDestroy__].apply(this, arguments);\n          this[__ngOnDestroySource__].next();\n          this[__ngOnDestroySource__].complete();\n        };\n      }\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    return source.subscribe(new CancelOnDestroySubscriber(subscriber, <EnhancedOnDestroy>this.instance, this.manualDestroy));\n  }\n}\n\nclass CancelOnDestroySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>,\n              private _instance: EnhancedOnDestroy,\n              private manualDestroy?: Observable<any>) {\n    super(destination);\n\n    const sources = manualDestroy\n      ? merge(manualDestroy, _instance[__ngOnDestroySource__])\n      : _instance[__ngOnDestroySource__].asObservable();\n\n    this.add(sources.subscribe(\n      () => {\n        destination.unsubscribe();\n      }\n    ));\n  }\n}\n","import {MonoTypeOperatorFunction, Observable, Operator, Subscriber, TeardownLogic} from \"rxjs\";\nimport {OperationTagStoreMediator} from \"../../operation-tag/operation-tag-store-mediator\";\n\nexport function tag<T>(action): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TagOperator(action));\n}\n\nclass TagOperator<T> implements Operator<T, T> {\n  constructor(private _tag: string) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TagSubscriber(subscriber, this._tag));\n  }\n}\n\nclass TagSubscriber<T> extends Subscriber<T> {\n  private _isDecreased = false;\n\n  constructor(destination: Subscriber<T>,\n              private _tag: string) {\n    super(destination);\n\n    OperationTagStoreMediator.increase(this._tag);\n  }\n\n\n  protected _error(err: any) {\n    if (this._tag && !this._isDecreased) {\n\n      this._isDecreased = true;\n      OperationTagStoreMediator.decrease(this._tag);\n    }\n    super._error(err);\n  }\n\n  protected _complete() {\n    if (this._tag && !this._isDecreased) {\n      this._isDecreased = true;\n      OperationTagStoreMediator.decrease(this._tag);\n    }\n    super._complete();\n  }\n\n  unsubscribe() {\n    if (!this.closed && this._tag && !this._isDecreased) {\n      this._isDecreased = true;\n      OperationTagStoreMediator.decrease(this._tag);\n    }\n\n    super.unsubscribe();\n  }\n}\n","import { OnDestroy, Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { UploadFileData } from './upload-file-data';\nimport { UploadFileAdapter } from './upload-file-adapter';\nimport { Subject, Observable } from 'rxjs';\nimport 'rxjs/add/operator/groupBy';\nimport { FriendlyHashId } from '../friendly-hash-id';\nimport { TrackedFile, TrackedFileChanges, TrackedFileData, TrackedFileStatuses } from './tracked-file';\nimport { cancelOnDestroy } from '../rxjs/operators';\n\nexport interface TrackedFiles {\n    [id: string]: TrackedFile\n}\n\nexport const UploadFileAdapterToken = new InjectionToken<string>('upload-file-adapter');\n\n@Injectable()\nexport class UploadManagement implements OnDestroy {\n    private _trackedFiles: TrackedFiles = {};\n    private _onTrackedFileChanged = new Subject<TrackedFileData>();\n    private _maxUploadRequests: number = null;\n    public onTrackedFileChanged$ = this._onTrackedFileChanged.asObservable();\n    private _tokenGenerator = new FriendlyHashId();\n    syncUploadQueueTimeoutId : number;\n\n    constructor(@Inject(UploadFileAdapterToken) @Optional() private _uploadFileAdapter: UploadFileAdapter<any>[]) {\n\n    }\n\n    public setMaxUploadRequests(maxUploads?: number): void {\n        if (maxUploads === null || maxUploads > 0) {\n            this._log('info', `limit max upload requests to ${maxUploads}`);\n            this._maxUploadRequests = maxUploads;\n        } else {\n            this._log('info', `remove max upload limitation`);\n            this._maxUploadRequests = null;\n        }\n    }\n\n    // TODO [kmcng] replace this function with log library\n    private _log(level: 'silly' | 'debug' | 'info' | 'warn' | 'error', message: string, fileId?: string): void {\n        const messageContext = fileId ? `file '${fileId}'` : '';\n        const origin = 'upload manager';\n        const formattedMessage = `log: [${level}] [${origin}] ${messageContext}: ${message}`;\n        switch (level) {\n            case 'silly':\n            case 'debug':\n            case 'info':\n                console.log(formattedMessage);\n                break;\n            case 'warn':\n                console.warn(formattedMessage);\n                break;\n            case 'error':\n                console.error(formattedMessage);\n                break;\n        }\n    }\n\n    public getTrackedFiles(): TrackedFileData[]\n    {\n        return Object.keys(this._trackedFiles).map(fileId => this._trackedFiles[fileId].asData());\n    }\n\n    public getTrackedFile(fileId: string): TrackedFileData\n    {\n        const relevantFile = this._trackedFiles[fileId];\n        return relevantFile? relevantFile.asData() : null;\n    }\n\n    public addFile(file: UploadFileData): { id: string } {\n        const [newFileId] = this.addFiles([file]);\n        return newFileId;\n    }\n\n    public addFiles(files: UploadFileData[]): { id: string, data: UploadFileData }[] {\n\n        const result: { id: string, data: UploadFileData }[] = [];\n\n        files.forEach((fileData) => {\n\n            const newUploadId = this._tokenGenerator.generateUnique(Object.keys(this._trackedFiles));\n\n            this._log('info', `add new file '${fileData.getFileName()}' to queue with unique file id`,newUploadId);\n            this._createTrackedFile(newUploadId, fileData);\n\n            result.push({id: newUploadId, data: fileData});\n        });\n\n        if (result.length)\n        {\n            this._syncUploadQueue();\n        }\n\n\n        return result;\n    }\n\n    public cancelUploadWithError(id: string, reason: string) : void {\n        this._log('info', `cancel file upload with custom reason '${reason}'`,id);\n\n        const trackedFile = this._trackedFiles[id];\n\n        if (trackedFile) {\n            {\n                if (trackedFile.canTransitionTo(TrackedFileStatuses.cancelled)) {\n                    this.cancelUpload(id, false);\n\n                  if (trackedFile.canTransitionTo(TrackedFileStatuses.failure)) {\n                    this._updateTrackedFile(trackedFile,\n                      {\n                        status: TrackedFileStatuses.failure,\n                        failureReason: reason || 'unknown error',\n                        failureType: 'manual_error'\n                      }\n                    );\n                  }\n                }\n            }\n        }else\n        {\n            this._log('warn','cannot cancel upload, failed to find file with provided id',id);\n        }\n    }\n\n\n    public resumeUpload(id: string): void {\n      this.resumeUploads([id]);\n    }\n\n    public resumeUploads(files: string[]): void {\n        let syncUploadQueue = false;\n\n        files.forEach(id => {\n            this._log('info', `resume file upload.`, id);\n            const trackedFile = this._trackedFiles[id];\n\n            if (trackedFile) {\n                if (trackedFile.wasInStatus(TrackedFileStatuses.prepared)) {\n                    this._updateTrackedFile(trackedFile, {\n                        status: TrackedFileStatuses.pendingUpload\n                    });\n                } else {\n                    this._updateTrackedFile(trackedFile, {\n                        status: TrackedFileStatuses.pendingPrepare\n                    });\n                }\n            } else {\n                this._log('warn', 'cannot resume upload, failed to find file with provided id', id);\n            }\n        });\n\n        this._syncUploadQueue();\n    }\n\n    public cancelUpload(id: string, purge: boolean= true): void {\n        this._log('info', `cancel file upload.`, id);\n\n        const trackedFile = this._trackedFiles[id];\n\n        if (trackedFile) {\n            if (trackedFile.status !== TrackedFileStatuses.cancelled\n                && trackedFile.canTransitionTo(TrackedFileStatuses.cancelled))\n            {\n                if (trackedFile.uploadSubscription) {\n                    trackedFile.uploadSubscription.unsubscribe();\n                    trackedFile.uploadSubscription = null;\n                }\n\n                this._updateTrackedFile(trackedFile,\n                    {\n                        status: TrackedFileStatuses.cancelled\n                    });\n\n                if (purge) {\n                    this.purgeUpload(id);\n                }\n\n                this._syncUploadQueue();\n            }\n        }else\n        {\n            this._log('warn', 'cannot cancel upload, failed to find file with provided id', id);\n        }\n    }\n\n    public purgeUpload(id: string): void {\n\n        this._log('info', `purge file from queue.`, id);\n\n        const trackedFile = this._trackedFiles[id];\n\n        if (trackedFile)\n        {\n            if (trackedFile.canTransitionTo(TrackedFileStatuses.purged)) {\n\n                this.cancelUpload(id, false);\n\n                this._updateTrackedFile(trackedFile, {status: TrackedFileStatuses.purged});\n\n                this._removeTrackedFile(trackedFile);\n            }\n        }else\n        {\n            this._log('warn', 'cannot purge upload, failed to find file with provided id', id);\n        }\n    }\n\n    private _removeTrackedFile(trackedFile: TrackedFile) {\n        this._log('info', `remove tracked file from queue`, trackedFile.id);\n\n        // Developer notice - this is a cleanup function just in case.\n        if (trackedFile.uploadSubscription) {\n            trackedFile.uploadSubscription.unsubscribe();\n            trackedFile.uploadSubscription = null;\n        }\n\n        delete this._trackedFiles[trackedFile.id];\n    }\n\n    private _syncUploadQueue(): void {\n        if (this.syncUploadQueueTimeoutId) {\n            clearTimeout(this.syncUploadQueueTimeoutId);\n            this.syncUploadQueueTimeoutId = null;\n        }\n\n        // DEVELOPER NOTICE: This logic is delayed to the next event loop on purpose to prevent\n        // collision between two sync requests\n        this.syncUploadQueueTimeoutId = setTimeout(() => {\n            this._log('info', `syncing upload queue`);\n            this.syncUploadQueueTimeoutId = null;\n            this._executePreparePhase();\n            this._executeUploadPhase();\n        }, 200);\n    }\n\n    private _executePreparePhase(): void {\n        const files = Object.keys(this._trackedFiles).map(fileId => this._trackedFiles[fileId]).filter(trackedFile => {\n            return trackedFile.status === TrackedFileStatuses.pendingPrepare\n                && trackedFile.canTransitionTo(TrackedFileStatuses.preparing);\n        });\n\n        if (files.length)\n        {\n            this._log('info',`handling ${files.length} files, waiting to be prepared`);\n\n            const groupedFiles = files.reduce((acc: { adapter: UploadFileAdapter<any>, files: TrackedFile[] }[], curr : TrackedFile) => {\n                const uploadAdapter = this._getUploadAdapter(curr.data) || null;\n\n                const matchedItem = acc.find(item => item.adapter ? item.adapter.constructor === uploadAdapter.constructor : item.adapter === null);\n\n                if (matchedItem) {\n                    matchedItem.files.push(curr);\n                } else {\n                    acc.push({adapter: uploadAdapter, files: [curr]});\n                }\n\n                return acc;\n            }, []);\n\n            groupedFiles.forEach(item => {\n                if (item.adapter) {\n                    this._log('debug', `executing prepare phase for ${item.files.length} files with adapter '${item.adapter.label}'`);\n\n                    item.files.forEach(file =>\n                    {\n                        this._updateTrackedFile(file,{ status : TrackedFileStatuses.preparing});\n                    });\n\n                    item.adapter.prepare(item.files)\n                        .pipe(cancelOnDestroy(this))\n                        .subscribe(\n                            preparedFiles => {\n                                this._log('debug', `executing prepare phase succeeded for ${item.files.length} files with adapter '${item.adapter.label}'.`);\n                                this._handlePrepareAdapterResponse(preparedFiles);\n\n                                this._syncUploadQueue();\n                            },\n                            reason => {\n\n                                this._log('error', `executing prepare phase failed for ${item.files.length} files with adapter '${item.adapter.label}'. error: ${reason.message}`);\n\n                                this._handlePrepareAdapterResponse(\n                                    item.files.map(file =>({ id: file.id, status:false}))\n                                );\n\n                                this._syncUploadQueue();\n                            });\n\n                }\n                else {\n                    item.files.forEach(file => {\n                        this._updateTrackedFile(file,\n                            {\n                                status: TrackedFileStatuses.failure,\n                                failureReason: 'upload destination is not supported',\n                                failureType: 'unknown_destination'\n                            })\n                    })\n                }\n            });\n        }\n    }\n\n    private _handlePrepareAdapterResponse(responseFiles : { id: string, status:boolean}[]) : void {\n        responseFiles.forEach(\n            responseFile => {\n                const trackedFile = this._trackedFiles[responseFile.id];\n\n                if (!trackedFile) {\n                    this._log('warn', `cannot handle prepare response for file '${responseFile.id}' since there is no tracking information for that file (did the user purge the file during the prepare execution?)`);\n                }\n                else if (trackedFile.status !== TrackedFileStatuses.preparing) {\n                    this._log('warn', `cannot handle file result from prepare action (did the user cancel the file upload during the prepare execution?)`, trackedFile.id);\n                } else if (responseFile.status) {\n                    const changedStatusToPrepared = this._updateTrackedFile(trackedFile,\n                        {\n                            status: TrackedFileStatuses.prepared\n                        });\n\n                    if (changedStatusToPrepared) {\n                        this._updateTrackedFile(trackedFile,\n                            {\n                                status: TrackedFileStatuses.pendingUpload\n                            });\n                    }\n                } else {\n                    this._updateTrackedFile(trackedFile,\n                        {\n                            status: TrackedFileStatuses.failure,\n                            failureReason: 'failed to prepare upload',\n                            failureType: 'preparation_failed'\n                        });\n                }\n            });\n    }\n\n    private _executeUploadPhase(): void {\n        const waitingForUploadsFiles = [];\n        const activeUploadFiles = [];\n\n        Object.keys(this._trackedFiles).forEach(fileId =>\n        {\n            const trackedFile = this._trackedFiles[fileId];\n\n            if (trackedFile.status === TrackedFileStatuses.uploading)\n            {\n                activeUploadFiles.push(trackedFile);\n            }else if (trackedFile.status === TrackedFileStatuses.pendingUpload\n                && trackedFile.canTransitionTo(TrackedFileStatuses.uploading))\n            {\n                waitingForUploadsFiles.push(trackedFile);\n            }\n        });\n\n        const activeUploadsCount = activeUploadFiles.length;\n        const waitingFilesCount = waitingForUploadsFiles.length;\n\n        if (waitingFilesCount > 0) {\n            let nextUploadFiles: TrackedFile[] = [];\n\n            this._log('silly', `active uploads: ${activeUploadsCount} | pending files: ${waitingFilesCount}`);\n\n            const availableUploadSlots = (this._maxUploadRequests && this._maxUploadRequests > 0) ? this._maxUploadRequests - activeUploadsCount : waitingFilesCount;\n\n            if (availableUploadSlots > 0) {\n                nextUploadFiles = [\n                    ...waitingForUploadsFiles.sort(pendingFile => pendingFile.uploadOrder || 1000)\n                ].slice(0, availableUploadSlots);\n            }\n\n            this._log('debug', `available upload slots to be used ${availableUploadSlots}`);\n\n\n            nextUploadFiles.forEach(pendingFile => {\n                this._initiateUpload(pendingFile);\n            });\n        }\n    }\n\n    private _createTrackedFile(id: string, fileData: UploadFileData): void {\n        const newTrackedFile = this._trackedFiles[id] = new TrackedFile(id, fileData);\n\n        this._onTrackedFileChanged.next(newTrackedFile.asData());\n\n        this._updateTrackedFile(newTrackedFile,\n            {status: TrackedFileStatuses.pendingPrepare}\n        );\n    }\n\n    private _updateTrackedFile(trackedFile: TrackedFile, changes: TrackedFileChanges): boolean {\n\n        let result = true;\n\n        if (changes.status && changes.status !== trackedFile.status) {\n\n\n            if (trackedFile.canTransitionTo(changes.status))\n            {\n                this._log('info', `notify file status changes from '${trackedFile.status}' to '${changes.status}'`,trackedFile.id);\n                trackedFile.update(changes);\n            }else\n            {\n                this._log('error', `cannot update file data from '${trackedFile.status}' to '${changes.status}. target status is not allowed. update to status 'failure' instead.`,trackedFile.id);\n\n                trackedFile.update({\n                    status: TrackedFileStatuses.failure,\n                    failureReason: 'cannot change status',\n                    failureType: 'change_not_allowed'\n                });\n\n                result = false;\n            }\n        }else\n        {\n            //this._log('info', `notify file data changes`,trackedFile.id);\n            trackedFile.update(changes)\n        }\n\n        this._onTrackedFileChanged.next(trackedFile.asData());\n\n        return result;\n    }\n\n    public supportChunkUpload(uploadFileData: UploadFileData) : boolean {\n        const uploadAdapter: UploadFileAdapter<any> = this._getUploadAdapter(uploadFileData);\n        return uploadAdapter ? uploadAdapter.supportChunkUpload() : false;\n    }\n\n    private _initiateUpload(trackedFile: TrackedFile): void {\n\n        const {data, id} = trackedFile;\n        const uploadAdapter: UploadFileAdapter<any> = this._getUploadAdapter(data);\n\n        this._log('info', `initiate new upload for file '${id}'`);\n\n        if (!uploadAdapter) {\n            this._log('warn', `cannot find destination adapter for requested file, failing upload request`);\n            this._updateTrackedFile(trackedFile,\n                {\n                    status: TrackedFileStatuses.failure,\n                    failureReason: 'upload destination is not supported',\n                    failureType: 'unknown_destination'\n                });\n\n            this._syncUploadQueue();\n\n        } else if (trackedFile.canTransitionTo(TrackedFileStatuses.uploading)) {\n            if (trackedFile.uploadSubscription) {\n                this._log('warn', `an active upload was found while the status indicated no upload currently in progress. cancel previous upload`);\n                trackedFile.uploadSubscription.unsubscribe();\n                trackedFile.uploadSubscription = null;\n            }\n\n            this._updateTrackedFile(trackedFile, {\n                status: TrackedFileStatuses.uploading,\n                progress: 0,\n                uploadStartAt: new Date(),\n            });\n\n            const canHandleResponse = (id: string, actionDescription: string) : boolean =>\n            {\n                let result = false;\n                const trackedFileStillExists = !!this._trackedFiles[id];\n\n                if (!trackedFileStillExists) {\n                    this._log('warn', `cannot handle file upload ${actionDescription}. There is no tracking file with the provided id (was the file purged?)`, id);\n                } else if (trackedFile.status !== TrackedFileStatuses.uploading) {\n                    this._log('warn', `cannot handle file upload ${actionDescription}. The file status it not 'uploading' (was the file upload cancelled?)`, id);\n                }else {\n                    result = true;\n                }\n\n                return result;\n            };\n\n            trackedFile.uploadSubscription = uploadAdapter.upload(id, data)\n                .subscribe(\n                    (uploadChanges) => {\n                        if (canHandleResponse(id, 'progress'))\n                        {\n                            this._updateTrackedFile(trackedFile,\n                                {\n                                    progress: uploadChanges.progress\n                                });\n                        }\n                    },\n                    (error) => {\n                        trackedFile.uploadSubscription = null;\n\n                        if (canHandleResponse(id, 'failure')) {\n                            const failureReason = error && error.message ? error.message : '';\n\n                            this._updateTrackedFile(trackedFile,\n                                {\n                                    status: TrackedFileStatuses.failure,\n                                    failureReason,\n                                    failureType: 'general_error'\n                                });\n                        }\n\n                        this._syncUploadQueue();\n                    },\n                    () => {\n                        trackedFile.uploadSubscription = null;\n\n                        if (canHandleResponse(id, 'completion')) {\n                            this._updateTrackedFile(trackedFile,\n                                {\n                                    status: TrackedFileStatuses.uploadCompleted,\n                                    progress: 1,\n                                    uploadCompleteAt: new Date()\n                                });\n\n                            this._removeTrackedFile(trackedFile);\n                            this._syncUploadQueue();\n                        }\n                    }\n                );\n        }\n    }\n\n    private _getUploadAdapter(fileData: UploadFileData): UploadFileAdapter<any> {\n\n        if (this._uploadFileAdapter) {\n            return this._uploadFileAdapter.find(uploadFileAdapter => {\n                return uploadFileAdapter.canHandle(fileData);\n            });\n        } else {\n            return null;\n        }\n    }\n\n    ngOnDestroy(): void {\n        Object.keys(this._trackedFiles).forEach(id =>\n        {\n            this.purgeUpload(id);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { UploadManagement } from './upload-management.service';\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        UploadManagement\n    ]\n})\nexport class UploadManagementModule {\n\n}\n","import { Observable } from 'rxjs';\nimport { UploadFileData } from './upload-file-data';\n\n\nexport abstract class UploadFileAdapter<T extends UploadFileData>{\n    abstract get label() : string;\n    abstract prepare(files : {id: string, data : T}[]) : Observable<{id: string, status: boolean}[]>;\n    abstract upload(id: string, data : T) : Observable<{ id : string, progress? : number}>;\n    abstract canHandle(uploadFile : UploadFileData) : boolean;\n    abstract supportChunkUpload(): boolean;\n}\n","//download.js v4.2, by dandavis; 2008-2016. [CCBY2] see http://danml.com/download.html for tests/usage\nexport const Download = function (data, strFileName, strMimeType) {\n\tvar self = window, // this script is only for browsers anyway...\n\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\tmimeType = strMimeType || defaultMime,\n\t\tpayload = data,\n\t\turl = !strFileName && !strMimeType && payload,\n\t\tanchor = document.createElement(\"a\"),\n\t\ttoString = function(a){return String(a);},\n\t\tmyBlob = (self['Blob'] || self['MozBlob'] || self['WebKitBlob'] || toString),\n\t\tfileName = strFileName || \"download\",\n\t\tblob,\n\t\treader;\n\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\n\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\tpayload=[payload, mimeType];\n\t\tmimeType=payload[0];\n\t\tpayload=payload[1];\n\t}\n\n\t//go ahead and download dataURLs right away\n\tif(/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)){\n\n\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\tmimeType=payload.type || defaultMime;\n\t\t}else{\n\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\tsaver(payload, false) ; // everyone else can save dataURLs un-processed\n\t\t}\n\n\t}//end if dataURL passed?\n\n\tblob = payload instanceof myBlob ?\n\t\tpayload :\n\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\tfunction dataUrlToBlob(strUrl) {\n\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\treturn new myBlob([uiArr], {type: type});\n\t}\n\n\tfunction saver(url, winMode){\n\n\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\tanchor.href = url;\n\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\tanchor.className = \"download-js-link\";\n\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\tanchor.style.display = \"none\";\n\t\t\tdocument.body.appendChild(anchor);\n\t\t\tsetTimeout(function() {\n\t\t\t\tanchor.click();\n\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t}, 66);\n\t\t\treturn true;\n\t\t}\n\n\t\t// handle non-a[download] safari as best we can:\n\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\turl=url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t//do iframe dataURL download (old ch+FF):\n\t\tvar f = document.createElement(\"iframe\");\n\t\tdocument.body.appendChild(f);\n\n\t\tif(!winMode){ // force a mime that will download:\n\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t}\n\t\tf.src=url;\n\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t}//end saver\n\n\n\n\n\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\treturn navigator.msSaveBlob(blob, fileName);\n\t}\n\n\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\tsaver(self.URL.createObjectURL(blob), true);\n\t}else{\n\t\t// handle non-Blob()+non-URL browsers:\n\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\ttry{\n\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob), false  );\n\t\t\t}catch(y){\n\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob), false  );\n\t\t\t}\n\t\t}\n\n\t\t// Blob but not URL support:\n\t\treader=new FileReader();\n\t\treader.onload=function(e){\n\t\t\tsaver(this.result, false);\n\t\t};\n\t\treader.readAsDataURL(blob);\n\t}\n\treturn true;\n};\n","import { Download } from './download';\n\nconst _xmlCharMap = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;'\n};\n\nexport class KalturaUtils\n{\n    static escapeXml(value: any) : string {\n        let parsedValue = value;\n        switch(typeof value)\n        {\n            case 'string':\n            case 'number':\n            case 'boolean':\n                parsedValue = value;\n                break;\n            default:\n            parsedValue = value || '';\n                break;\n        }\n\n        return String(parsedValue).replace(/[&<>]/g, char => _xmlCharMap[char]);\n    }\n\n\tstatic getStartDateValue(value : Date) : Date\n    {\n        if (value) {\n            const newValue = new Date(value.getTime());\n            newValue.setHours(0);\n            newValue.setMinutes(0);\n            newValue.setSeconds(0);\n            return newValue;\n        }else{\n            return null;\n        }\n    }\n\n    static getEndDateValue(value : Date) : Date\n    {\n        if (value) {\n            const newValue = new Date(value.getTime());\n            newValue.setHours(23);\n            newValue.setMinutes(59);\n            newValue.setSeconds(59);\n            return newValue;\n        }else{\n            return null;\n        }\n    }static removeEmptyProperties(value : {})\n\t{\n\t\tObject.keys(value).forEach(function(key) {\n\t\t\tif (value[key] && typeof value[key] === 'object') {\n\t\t\t\tKalturaUtils.removeEmptyProperties(value[key]);\n\t\t\t}\n\t\t\telse if (value[key] === null) {\n\t\t\t\tdelete value[key]\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t}\n\n    static moveUpItems<T>(list: T[], selectedItems : T[]): boolean {\n        if (list && list.length && selectedItems && selectedItems.length) {\n            const relevantItems = selectedItems.map(item => ({ selectedItem: item, index: list.indexOf(item) }))\n                .filter(item => item.index !== -1)\n                .sort((a, b) => a.index - b.index);\n            if (relevantItems.length) {\n                const minIndexInSelected = relevantItems[0].index;\n                const nextIndex = Math.max(0, minIndexInSelected - 1);\n                relevantItems.forEach((item, i) => {\n                    list.splice(item.index - i, 1);\n                });\n\n                list.splice(nextIndex, 0, ...relevantItems.map(item => item.selectedItem));\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static moveDownItems<T>(list: T[], selectedItems : T[]): boolean {\n        if (selectedItems && selectedItems.length && list && list.length) {\n            const relevantItems = selectedItems.map(item => ({ selectedItem: item, index: list.indexOf(item) }))\n                .filter(item => item.index !== -1)\n                .sort((a, b) => a.index - b.index);\n            if (relevantItems.length) {\n                const maxIndexInSelected = relevantItems[relevantItems.length - 1].index;\n                const nextIndex = Math.min(list.length - 1, maxIndexInSelected + 1);\n                relevantItems.forEach((item, i) => {\n                    list.splice(item.index - i, 1);\n                });\n                const correctedIndex = nextIndex - relevantItems.length;\n\n                list.splice(correctedIndex + 1, 0, ...relevantItems.map(item => item.selectedItem));\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static formatTime(value: number, addTimeChars: boolean = false): string {\n\n        let hours: number = Math.floor( Math.round( value ) / 3600 ) % 24;\n        let minutes: number = Math.floor( ( Math.round( value ) / 60 ) % 60 );\n        let seconds: number = Math.round(value) % 60;\n\n        let hoursStr: string = hours === 0 ? '' : addTimeChars ? hours.toString() + \"h:\" : hours.toString() + \":\";\n        let minutesStr: string = minutes === 0 && hours === 0 ? '00' : minutes < 10  ? '0' + minutes.toString() : minutes.toString();\n        let secondsStr: string = seconds < 10  ? '0' + seconds.toString() : seconds.toString();\n        if (addTimeChars){\n            minutesStr = minutesStr + \"m\";\n            secondsStr = secondsStr + \"s\";\n        }\n        return hoursStr + minutesStr + \":\" + secondsStr;\n    }\n\n    static fromServerDate(value : number) : Date\n    {\n        return (value ? new Date(value * 1000) : null);\n    }\n\n    static toServerDate(value : Date) : number\n    {\n        return value ? Math.round(value.getTime() / 1000) : null;\n    }\n\n    static download(data: any, strFileName: string, strMimeType: string) : Boolean\n    {\n        return Download(data, strFileName, strMimeType);\n    }\n}\n","/* Copyright 2013 William Summers, Metatribal Research\n * adapted from https://developer.mozilla.org/en-US/docs/JXON\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author William Summers\n *\n */\nexport const XmlToJSON = (function () {\n\n    var options = { // set up the default options\n        mergeCDATA: true,\t// extract cdata and merge with text\n        grokAttr: true,\t\t// convert truthy attributes to boolean, etc\n        grokText: true,\t\t// convert truthy text/attr to boolean, etc\n        normalize: true,\t// collapse multiple spaces to single space\n        xmlns: true, \t\t// include namespaces as attribute in output\n        namespaceKey: '_ns', \t// tag name for namespace objects\n        textKey: '_text', \t// tag name for text nodes\n        valueKey: '_value', \t// tag name for attribute values\n        attrKey: '_attr', \t// tag for attr groups\n        cdataKey: '_cdata',\t// tag for cdata nodes (ignored if mergeCDATA is true)\n        attrsAsObject: true, \t// if false, key is used as prefix to name, set prefix to '' to merge children and attrs.\n        stripAttrPrefix: true, \t// remove namespace prefixes from attributes\n        stripElemPrefix: true, \t// for elements of same name in diff namespaces, you can enable namespaces and access the nskey property\n        childrenAsArray: true \t// force children into arrays\n    };\n\n    var prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n    var trimMatch = new RegExp(/^\\s+|\\s+$/g);\n\n    var grokType = function (sValue) {\n        if (/^\\s*$/.test(sValue)) {\n            return null;\n        }\n        if (/^(?:true|false)$/i.test(sValue)) {\n            return sValue.toLowerCase() === \"true\";\n        }\n        if (isFinite(sValue)) {\n            return parseFloat(sValue);\n        }\n        return sValue;\n    };\n\n    var parseString = function (xmlString : string, opt : any) {\n        return this.parseXML(stringToXML(xmlString), opt);\n    }\n\n    var parseXML = function (oXMLParent, opt?) {\n\n        // initialize options\n        for (let key in opt) {\n            options[key] = opt[key];\n        }\n\n        var vResult = {}, nLength = 0, sCollectedTxt = \"\";\n\n        // parse namespace information\n        if (options.xmlns && oXMLParent.namespaceURI) {\n            vResult[options.namespaceKey] = oXMLParent.namespaceURI;\n        }\n\n        // parse attributes\n        // using attributes property instead of hasAttributes method to support older browsers\n        if (oXMLParent.attributes && oXMLParent.attributes.length > 0) {\n            var vAttribs = {};\n\n            for (nLength; nLength < oXMLParent.attributes.length; nLength++) {\n                let oAttrib = oXMLParent.attributes.item(nLength);\n                vContent = {};\n                let attribName = '';\n\n                if (options.stripAttrPrefix) {\n                    attribName = oAttrib.name.replace(prefixMatch, '');\n\n                } else {\n                    attribName = oAttrib.name;\n                }\n\n                if (options.grokAttr) {\n                    vContent[options.valueKey] = grokType(oAttrib.value.replace(trimMatch, ''));\n                } else {\n                    vContent[options.valueKey] = oAttrib.value.replace(trimMatch, '');\n                }\n\n                if (options.xmlns && oAttrib.namespaceURI) {\n                    vContent[options.namespaceKey] = oAttrib.namespaceURI;\n                }\n\n                if (options.attrsAsObject) { // attributes with same local name must enable prefixes\n                    vAttribs[attribName] = vContent;\n                } else {\n                    vResult[options.attrKey + attribName] = vContent;\n                }\n            }\n\n            if (options.attrsAsObject) {\n                vResult[options.attrKey] = vAttribs;\n            } else {}\n        }\n\n        // iterate over the children\n        if (oXMLParent.hasChildNodes()) {\n            for (var oNode, sProp, vContent, nItem = 0; nItem < oXMLParent.childNodes.length; nItem++) {\n                oNode = oXMLParent.childNodes.item(nItem);\n\n                if (oNode.nodeType === 4) {\n                    if (options.mergeCDATA) {\n                        sCollectedTxt += oNode.nodeValue;\n                    } else {\n                        if (vResult.hasOwnProperty(options.cdataKey)) {\n                            if (vResult[options.cdataKey].constructor !== Array) {\n                                vResult[options.cdataKey] = [vResult[options.cdataKey]];\n                            }\n                            vResult[options.cdataKey].push(oNode.nodeValue);\n\n                        } else {\n                            if (options.childrenAsArray) {\n                                vResult[options.cdataKey] = [];\n                                vResult[options.cdataKey].push(oNode.nodeValue);\n                            } else {\n                                vResult[options.cdataKey] = oNode.nodeValue;\n                            }\n                        }\n                    }\n                } /* nodeType is \"CDATASection\" (4) */\n                else if (oNode.nodeType === 3) {\n                    sCollectedTxt += oNode.nodeValue;\n                } /* nodeType is \"Text\" (3) */\n                else if (oNode.nodeType === 1) { /* nodeType is \"Element\" (1) */\n\n                    if (nLength === 0) {\n                        vResult = {};\n                    }\n\n                    // using nodeName to support browser (IE) implementation with no 'localName' property\n                    if (options.stripElemPrefix) {\n                        sProp = oNode.nodeName.replace(prefixMatch, '');\n                    } else {\n                        sProp = oNode.nodeName;\n                    }\n\n                    vContent = parseXML(oNode);\n\n                    if (vResult.hasOwnProperty(sProp)) {\n                        if (vResult[sProp].constructor !== Array) {\n                            vResult[sProp] = [vResult[sProp]];\n                        }\n                        vResult[sProp].push(vContent);\n\n                    } else {\n                        if (options.childrenAsArray) {\n                            vResult[sProp] = [];\n                            vResult[sProp].push(vContent);\n                        } else {\n                            vResult[sProp] = vContent;\n                        }\n                        nLength++;\n                    }\n                }\n            }\n        } else if (!sCollectedTxt){ // no children and no text, return null\n            if (options.childrenAsArray) {\n                vResult[options.textKey] = [];\n                vResult[options.textKey].push(null);\n            } else {\n                vResult[options.textKey] = null;\n            }\n        }\n\n        if (sCollectedTxt) {\n            if (options.grokText) {\n                let value = grokType(sCollectedTxt.replace(trimMatch, ''));\n                if (value) {\n                    vResult[options.textKey] = value;\n                }\n            } else if (options.normalize) {\n                vResult[options.textKey] = sCollectedTxt.replace(trimMatch, '').replace(/\\s+/g, \" \");\n            } else {\n                vResult[options.textKey] = sCollectedTxt.replace(trimMatch, '');\n            }\n        }\n\n        return vResult;\n    }\n\n\n    // Convert xmlDocument to a string\n    // Returns null on failure\n    var xmlToString = function (xmlDoc) {\n        try {\n            var xmlString = xmlDoc.xml ? xmlDoc.xml : (new XMLSerializer()).serializeToString(xmlDoc);\n            return xmlString;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    // Convert a string to XML Node Structure\n    // Returns null on failure\n    var stringToXML = function (xmlString) {\n        try {\n            var xmlDoc = null;\n\n            if (typeof DOMParser === 'function') {\n\n                var parser = new DOMParser();\n                xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\n\n                return xmlDoc;\n            } else {\n                return null;\n                // TODO [kmcng] consider if to allow active x object\n                // xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                // xmlDoc.async = false;\n                // xmlDoc.loadXML(xmlString);\n                //\n                // return xmlDoc;\n            }\n        } catch (e) {\n            return null;\n        }\n    }\n\n    // this is the \"revealed\"/public part of the module\n    return {\n        parseXML: parseXML,\n        parseString: parseString,\n        xmlToString: xmlToString,\n        stringToXML: stringToXML\n    };\n\n}());","import { XmlToJSON } from './xml-to-json';\nimport { KalturaUtils } from '../utils/kaltura-utils';\n\n\n\nfunction convertAttributes(attributes: object): string {\n  let parsedAttributes = '';\n  if (attributes) {\n    Object.keys(attributes).forEach(attributeName => {\n      const value = KalturaUtils.escapeXml(attributes[attributeName]);\n      parsedAttributes += ` ${attributeName}=\"${value}\"`;\n    });\n  }\n\n  return parsedAttributes;\n}\n\nfunction convertObjectToXml(prefix: string, propertyName: string, propertyValue: any): string {\n    let result = ``;\n\n    const noPrefixPropertyName = (propertyName || '').indexOf('noprefix:') !== -1;\n    if (noPrefixPropertyName) {\n      propertyName = propertyName.replace('noprefix:', '');\n      prefix = '';\n    }\n\n    if (Array.isArray(propertyValue)) {\n        propertyValue.forEach(innerItem =>\n        {\n            result += convertObjectToXml(prefix, propertyName, innerItem);\n        });\n    } else if (propertyValue && typeof propertyValue === 'object') {\n\n        const parsedAttributes = convertAttributes(propertyValue['attr']);\n        let parsedValue: any = '';\n\n        if (propertyValue['text']) {\n            parsedValue = KalturaUtils.escapeXml(propertyValue['text']);\n        } else {\n            Object.keys(propertyValue).forEach(innerProperty => {\n                if (innerProperty !== 'attr') {\n                    parsedValue += convertObjectToXml(prefix, innerProperty, propertyValue[innerProperty]);\n                }\n            });\n        }\n\n        result += `<${prefix}${propertyName}`;\n\n        if (parsedAttributes) {\n            result += `${parsedAttributes}>`;\n        } else {\n            result += '>';\n        }\n\n        result += `${parsedValue}</${prefix}${propertyName}>`;\n    }\n\n\n    return result;\n}\n\nexport class XmlParser\n{\n    static toJson(xml : string) : {}\n    {\n        return XmlToJSON.parseString(xml,\n            {\n                textKey: 'text', \t// tag name for text nodes\n                valueKey: 'value', \t// tag name for attribute values\n                attrKey: 'attr', \t// tag for attr groups\n                cdataKey: 'cdata',\t// tag for cdata nodes (ignored if mergeCDATA is true)\n                childrenAsArray: false, \t// force children into arrays\n\t            grokText: false,\n\t            grokAttr: false,\n              normalize: false,\n            });\n    }\n\n    static toXml(data: object, root: string, prefix: string = ''): string {\n        const parsedPrefix = prefix ? `${prefix}:` : '';\n        let parsedObject = '';\n        let parsedAttributes = '';\n\n        if (data) {\n            parsedAttributes = convertAttributes(data['attr']);\n\n            Object.keys(data).forEach(property => {\n                if (property !== 'attr') {\n                   parsedObject += convertObjectToXml(parsedPrefix, property, data[property])\n                }\n            });\n        }\n\n        return `<${parsedPrefix}${root}${parsedAttributes}>${parsedObject}</${parsedPrefix}${root}>`;\n    }\n\n    static toSimpleXml(data : {}, config : {removeEmpty? : boolean} = {}) : string{\n        let result = '';\n        const _parseValueToXml = (value : any) =>\n        {\n            let result : string;\n\n            if (typeof value === 'object') {\n                result = XmlParser.toSimpleXml(value, config);\n            }\n            else {\n                result = KalturaUtils.escapeXml(value);\n            }\n\n            return result;\n        };\n\n        if (data) {\n            Object.keys(data).forEach(function (key) {\n                const propertyValue = data[key];\n                const isEmptyValue = (propertyValue === null || typeof propertyValue === 'undefined' || propertyValue === '');\n\n                if (!config.removeEmpty || (config.removeEmpty && !isEmptyValue)) {\n                    if (propertyValue instanceof Array) {\n                        propertyValue.map(arrayItem => {\n                            const valueAsXml = _parseValueToXml(arrayItem);\n                            const isEmptyValue = (valueAsXml === null || typeof valueAsXml === 'undefined' || valueAsXml === '');\n\n                            if (!config.removeEmpty || (config.removeEmpty && !isEmptyValue)) {\n                                result += `<${key}>${valueAsXml}</${key}>`;\n                            }\n                        })\n                    } else if (typeof propertyValue === 'object') {\n                        const valueAsXml = _parseValueToXml(propertyValue);\n                        const isEmptyValue = (valueAsXml === null || typeof valueAsXml === 'undefined' || valueAsXml === '');\n\n                        if (!config.removeEmpty || (config.removeEmpty && !isEmptyValue)) {\n                            result += `<${key}>${valueAsXml}</${key}>`;\n                        }\n                    }\n                    else {\n                        const value = KalturaUtils.escapeXml(propertyValue);\n                        result += `<${key}>${value}</${key}>`;\n                    }\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport interface IAppStorage {\n    setInLocalStorage(key:string, value:any) : void;\n    getFromLocalStorage(key:string) : any;\n    removeFromLocalStorage(key:string) : any;\n    setInSessionStorage(key:string, value:any) : void;\n    getFromSessionStorage(key:string) : any;\n    removeFromSessionStorage(key:string) : any;\n}\n\nexport const APP_STORAGE_TOKEN: InjectionToken<IAppStorage> = new InjectionToken<IAppStorage>('APP_STORAGE_TOKEN');\n\nexport class AppStorage implements IAppStorage{\n    private storage : any = {};\n\n    setInLocalStorage(key:string, value:any):void {\n        this.storage[key] = value;\n    }\n\n    getFromLocalStorage(key:string):any {\n        return this.storage[key];\n    }\n\n    removeFromLocalStorage(key:string):any {\n       delete this.storage[key];\n    }\n\n    setInSessionStorage(key:string, value:any):void {\n        this.storage[key] = value;\n    }\n\n    getFromSessionStorage(key:string):any {\n        return this.storage[key];\n    }\n\n    removeFromSessionStorage(key:string):any {\n        delete this.storage[key];\n    }\n\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KalturaUtils } from './utils/kaltura-utils';\nimport { APP_STORAGE_TOKEN, AppStorage } from './app-storage.service';\nimport { EmptyLogger, KalturaLoggerInjectionToken } from './kaltura-logger';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        ]\n})\nexport class KalturaCommonModule {\n    // constructor(@Optional() @SkipSelf() module : KalturaCoreModule, private appBootstrap : AppBootstrap)\n    // {\n    //     if (module) {\n    //         throw new Error(\"KMCngCoreModule module imported twice.\");\n    //     }\n    // }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: KalturaCommonModule,\n            providers: [\n                { provide: APP_STORAGE_TOKEN, useClass: AppStorage },\n\t            KalturaUtils,\n                { provide: KalturaLoggerInjectionToken, useClass: EmptyLogger}\n            ]\n        };\n    }\n}\n","/*\n * Public API Surface of kaltura-common\n */\n\nexport * from './lib/operation-tag/index';\nexport * from './lib/server-polls/index';\nexport * from './lib/upload-management/index';\nexport * from './lib/utils/index';\nexport * from './lib/xml-parser/index';\nexport * from './lib/app-storage.service';\nexport * from './lib/friendly-hash-id';\nexport * from './lib/kaltura-common.module';\nexport * from './lib/kaltura-logger';\nexport * from './lib/rxjs/operators/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {XmlToJSON as Éµa} from './lib/xml-parser/xml-to-json';"],"names":[],"mappings":"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"}