import { __decorate, __metadata, __param } from "tslib";
import { Self, Optional, NgModule } from '@angular/core';
import { OperationTagStoreMediator } from "./operation-tag-store-mediator";
import { OperationTagManagerService } from "./operation-tag-manager.service";
var OperationTagModule = /** @class */ (function () {
    // Prevents angular from creating another instance for operationTagManagerService when defined as provider in more than one place
    // (Each component will get the same instance as in the module/component that called the operationTagManagerService.forRoot)
    function OperationTagModule(operationTagManagerService) {
        if (operationTagManagerService) {
            OperationTagStoreMediator.register(operationTagManagerService);
        }
    }
    OperationTagModule_1 = OperationTagModule;
    OperationTagModule.forRoot = function () {
        return {
            ngModule: OperationTagModule_1,
            providers: [
                OperationTagManagerService
            ]
        };
    };
    var OperationTagModule_1;
    OperationTagModule.ctorParameters = function () { return [
        { type: OperationTagManagerService, decorators: [{ type: Self }, { type: Optional }] }
    ]; };
    OperationTagModule = OperationTagModule_1 = __decorate([
        NgModule({
            imports: [],
            declarations: [],
            exports: [],
            providers: []
        }),
        __param(0, Self()), __param(0, Optional()),
        __metadata("design:paramtypes", [OperationTagManagerService])
    ], OperationTagModule);
    return OperationTagModule;
}());
export { OperationTagModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLXRhZy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Aa2FsdHVyYS1uZy9rYWx0dXJhLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9vcGVyYXRpb24tdGFnL29wZXJhdGlvbi10YWcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlFLE9BQU8sRUFBQyx5QkFBeUIsRUFBQyxNQUFNLGdDQUFnQyxDQUFDO0FBQ3pFLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBWTNFO0lBRUksaUlBQWlJO0lBQ2pJLDRIQUE0SDtJQUM1SCw0QkFBZ0MsMEJBQXNEO1FBQ2xGLElBQUksMEJBQTBCLEVBQUU7WUFDNUIseUJBQXlCLENBQUMsUUFBUSxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDbEU7SUFDTCxDQUFDOzJCQVJRLGtCQUFrQjtJQVVwQiwwQkFBTyxHQUFkO1FBQ0ksT0FBTztZQUNILFFBQVEsRUFBRSxvQkFBa0I7WUFDNUIsU0FBUyxFQUFTO2dCQUNkLDBCQUEwQjthQUM3QjtTQUNKLENBQUM7SUFDTixDQUFDOzs7Z0JBYjJELDBCQUEwQix1QkFBekUsSUFBSSxZQUFJLFFBQVE7O0lBSnBCLGtCQUFrQjtRQVY5QixRQUFRLENBQUM7WUFDTixPQUFPLEVBQUUsRUFDUjtZQUNELFlBQVksRUFBRSxFQUNiO1lBQ0QsT0FBTyxFQUFFLEVBQ1I7WUFDRCxTQUFTLEVBQUUsRUFDVjtTQUNKLENBQUM7UUFLZSxXQUFBLElBQUksRUFBRSxDQUFBLEVBQUUsV0FBQSxRQUFRLEVBQUUsQ0FBQTt5Q0FBNkIsMEJBQTBCO09BSjdFLGtCQUFrQixDQWtCOUI7SUFBRCx5QkFBQztDQUFBLEFBbEJELElBa0JDO1NBbEJZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgU2VsZiwgT3B0aW9uYWwsIE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge09wZXJhdGlvblRhZ1N0b3JlTWVkaWF0b3J9IGZyb20gXCIuL29wZXJhdGlvbi10YWctc3RvcmUtbWVkaWF0b3JcIjtcbmltcG9ydCB7T3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2V9IGZyb20gXCIuL29wZXJhdGlvbi10YWctbWFuYWdlci5zZXJ2aWNlXCI7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIE9wZXJhdGlvblRhZ01vZHVsZSB7XG5cbiAgICAvLyBQcmV2ZW50cyBhbmd1bGFyIGZyb20gY3JlYXRpbmcgYW5vdGhlciBpbnN0YW5jZSBmb3Igb3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2Ugd2hlbiBkZWZpbmVkIGFzIHByb3ZpZGVyIGluIG1vcmUgdGhhbiBvbmUgcGxhY2VcbiAgICAvLyAoRWFjaCBjb21wb25lbnQgd2lsbCBnZXQgdGhlIHNhbWUgaW5zdGFuY2UgYXMgaW4gdGhlIG1vZHVsZS9jb21wb25lbnQgdGhhdCBjYWxsZWQgdGhlIG9wZXJhdGlvblRhZ01hbmFnZXJTZXJ2aWNlLmZvclJvb3QpXG4gICAgY29uc3RydWN0b3IoQFNlbGYoKSBAT3B0aW9uYWwoKSBvcGVyYXRpb25UYWdNYW5hZ2VyU2VydmljZTogT3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2Upe1xuICAgICAgICBpZiAob3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2UpIHtcbiAgICAgICAgICAgIE9wZXJhdGlvblRhZ1N0b3JlTWVkaWF0b3IucmVnaXN0ZXIob3BlcmF0aW9uVGFnTWFuYWdlclNlcnZpY2UpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogT3BlcmF0aW9uVGFnTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiA8YW55W10+W1xuICAgICAgICAgICAgICAgIE9wZXJhdGlvblRhZ01hbmFnZXJTZXJ2aWNlXG4gICAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgfVxufVxuIl19