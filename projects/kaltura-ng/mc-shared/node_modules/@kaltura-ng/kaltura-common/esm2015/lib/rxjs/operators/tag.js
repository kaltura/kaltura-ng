import { Subscriber } from "rxjs";
import { OperationTagStoreMediator } from "../../operation-tag/operation-tag-store-mediator";
export function tag(action) {
    return (source) => source.lift(new TagOperator(action));
}
class TagOperator {
    constructor(_tag) {
        this._tag = _tag;
    }
    call(subscriber, source) {
        return source.subscribe(new TagSubscriber(subscriber, this._tag));
    }
}
class TagSubscriber extends Subscriber {
    constructor(destination, _tag) {
        super(destination);
        this._tag = _tag;
        this._isDecreased = false;
        OperationTagStoreMediator.increase(this._tag);
    }
    _error(err) {
        if (this._tag && !this._isDecreased) {
            this._isDecreased = true;
            OperationTagStoreMediator.decrease(this._tag);
        }
        super._error(err);
    }
    _complete() {
        if (this._tag && !this._isDecreased) {
            this._isDecreased = true;
            OperationTagStoreMediator.decrease(this._tag);
        }
        super._complete();
    }
    unsubscribe() {
        if (!this.closed && this._tag && !this._isDecreased) {
            this._isDecreased = true;
            OperationTagStoreMediator.decrease(this._tag);
        }
        super.unsubscribe();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGthbHR1cmEtbmcva2FsdHVyYS1jb21tb24vIiwic291cmNlcyI6WyJsaWIvcnhqcy9vcGVyYXRvcnMvdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUQsVUFBVSxFQUFnQixNQUFNLE1BQU0sQ0FBQztBQUMvRixPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxrREFBa0QsQ0FBQztBQUUzRixNQUFNLFVBQVUsR0FBRyxDQUFJLE1BQU07SUFDM0IsT0FBTyxDQUFDLE1BQXFCLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUN6RSxDQUFDO0FBRUQsTUFBTSxXQUFXO0lBQ2YsWUFBb0IsSUFBWTtRQUFaLFNBQUksR0FBSixJQUFJLENBQVE7SUFDaEMsQ0FBQztJQUVELElBQUksQ0FBQyxVQUF5QixFQUFFLE1BQVc7UUFDekMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksYUFBYSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNwRSxDQUFDO0NBQ0Y7QUFFRCxNQUFNLGFBQWlCLFNBQVEsVUFBYTtJQUcxQyxZQUFZLFdBQTBCLEVBQ2xCLElBQVk7UUFDOUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBREQsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUh4QixpQkFBWSxHQUFHLEtBQUssQ0FBQztRQU0zQix5QkFBeUIsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFHUyxNQUFNLENBQUMsR0FBUTtRQUN2QixJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBRW5DLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQ3pCLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDL0M7UUFDRCxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BCLENBQUM7SUFFUyxTQUFTO1FBQ2pCLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDbkMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7WUFDekIseUJBQXlCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMvQztRQUNELEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ25ELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBQ3pCLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDL0M7UUFFRCxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb24sIE9ic2VydmFibGUsIE9wZXJhdG9yLCBTdWJzY3JpYmVyLCBUZWFyZG93bkxvZ2ljfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHtPcGVyYXRpb25UYWdTdG9yZU1lZGlhdG9yfSBmcm9tIFwiLi4vLi4vb3BlcmF0aW9uLXRhZy9vcGVyYXRpb24tdGFnLXN0b3JlLW1lZGlhdG9yXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB0YWc8VD4oYWN0aW9uKTogTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uPFQ+IHtcbiAgcmV0dXJuIChzb3VyY2U6IE9ic2VydmFibGU8VD4pID0+IHNvdXJjZS5saWZ0KG5ldyBUYWdPcGVyYXRvcihhY3Rpb24pKTtcbn1cblxuY2xhc3MgVGFnT3BlcmF0b3I8VD4gaW1wbGVtZW50cyBPcGVyYXRvcjxULCBUPiB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX3RhZzogc3RyaW5nKSB7XG4gIH1cblxuICBjYWxsKHN1YnNjcmliZXI6IFN1YnNjcmliZXI8VD4sIHNvdXJjZTogYW55KTogVGVhcmRvd25Mb2dpYyB7XG4gICAgcmV0dXJuIHNvdXJjZS5zdWJzY3JpYmUobmV3IFRhZ1N1YnNjcmliZXIoc3Vic2NyaWJlciwgdGhpcy5fdGFnKSk7XG4gIH1cbn1cblxuY2xhc3MgVGFnU3Vic2NyaWJlcjxUPiBleHRlbmRzIFN1YnNjcmliZXI8VD4ge1xuICBwcml2YXRlIF9pc0RlY3JlYXNlZCA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKGRlc3RpbmF0aW9uOiBTdWJzY3JpYmVyPFQ+LFxuICAgICAgICAgICAgICBwcml2YXRlIF90YWc6IHN0cmluZykge1xuICAgIHN1cGVyKGRlc3RpbmF0aW9uKTtcblxuICAgIE9wZXJhdGlvblRhZ1N0b3JlTWVkaWF0b3IuaW5jcmVhc2UodGhpcy5fdGFnKTtcbiAgfVxuXG5cbiAgcHJvdGVjdGVkIF9lcnJvcihlcnI6IGFueSkge1xuICAgIGlmICh0aGlzLl90YWcgJiYgIXRoaXMuX2lzRGVjcmVhc2VkKSB7XG5cbiAgICAgIHRoaXMuX2lzRGVjcmVhc2VkID0gdHJ1ZTtcbiAgICAgIE9wZXJhdGlvblRhZ1N0b3JlTWVkaWF0b3IuZGVjcmVhc2UodGhpcy5fdGFnKTtcbiAgICB9XG4gICAgc3VwZXIuX2Vycm9yKGVycik7XG4gIH1cblxuICBwcm90ZWN0ZWQgX2NvbXBsZXRlKCkge1xuICAgIGlmICh0aGlzLl90YWcgJiYgIXRoaXMuX2lzRGVjcmVhc2VkKSB7XG4gICAgICB0aGlzLl9pc0RlY3JlYXNlZCA9IHRydWU7XG4gICAgICBPcGVyYXRpb25UYWdTdG9yZU1lZGlhdG9yLmRlY3JlYXNlKHRoaXMuX3RhZyk7XG4gICAgfVxuICAgIHN1cGVyLl9jb21wbGV0ZSgpO1xuICB9XG5cbiAgdW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmNsb3NlZCAmJiB0aGlzLl90YWcgJiYgIXRoaXMuX2lzRGVjcmVhc2VkKSB7XG4gICAgICB0aGlzLl9pc0RlY3JlYXNlZCA9IHRydWU7XG4gICAgICBPcGVyYXRpb25UYWdTdG9yZU1lZGlhdG9yLmRlY3JlYXNlKHRoaXMuX3RhZyk7XG4gICAgfVxuXG4gICAgc3VwZXIudW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIl19