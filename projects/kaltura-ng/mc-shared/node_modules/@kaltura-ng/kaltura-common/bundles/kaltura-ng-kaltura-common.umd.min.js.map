{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@kaltura-ng/kaltura-common/lib/operation-tag/operation-tag-store-mediator.ts","ng://@kaltura-ng/kaltura-common/lib/operation-tag/operation-tag-manager.service.ts","ng://@kaltura-ng/kaltura-common/lib/operation-tag/operation-tag.module.ts","ng://@kaltura-ng/kaltura-common/lib/friendly-hash-id.ts","ng://@kaltura-ng/kaltura-common/lib/kaltura-logger.ts","ng://@kaltura-ng/kaltura-common/lib/server-polls/server-polls.service.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/tracked-file.ts","ng://@kaltura-ng/kaltura-common/lib/rxjs/operators/cancel-on-destroy.ts","ng://@kaltura-ng/kaltura-common/lib/rxjs/operators/tag.ts","ng://@kaltura-ng/kaltura-common/lib/xml-parser/xml-to-json.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/upload-management.service.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/upload-management.module.ts","ng://@kaltura-ng/kaltura-common/lib/upload-management/upload-file-adapter.ts","ng://@kaltura-ng/kaltura-common/lib/utils/download.ts","ng://@kaltura-ng/kaltura-common/lib/utils/kaltura-utils.ts","ng://@kaltura-ng/kaltura-common/lib/xml-parser/xml-parser.ts","ng://@kaltura-ng/kaltura-common/lib/app-storage.service.ts","ng://@kaltura-ng/kaltura-common/lib/kaltura-common.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","OperationTagStoreMediator","register","operationsTagManager","_operationsTagManager","increase","tag","decrease","OperationTagManagerService","_tagStatus","BehaviorSubject","tagStatus$","asObservable","tagsData","getValue","Injectable","OperationTagModule","operationTagManagerService","forRoot","ngModule","OperationTagModule_1","providers","type","Self","Optional","NgModule","imports","declarations","exports","FriendlyHashId","generate","alphabetOptions","defaultInstance","options","alphabet","idLength","rtn","charAt","Math","floor","random","generateUnique","previous","id","retries","indexOf","KalturaLoggerInjectionToken","InjectionToken","EmptyLogger","trace","message","context","debug","info","warn","fatal","subLogger","name","ServerPolls","kalturaLogger","_pollQueue","_tokenGenerator","_missingDestoryHandling","_subscriptions","_state","busy","state$","_queueInterval","_logger","_initialize","_warnAboutMissingDestory","_this","setTimeout","onDestroy$","_getOnDestroy$","subscribe","_cancelQueueInterval","forEach","item","unsubscribe","clearTimeout","_queueTimeout","_getPollQueueList","keys","map","_setupQueueTimer","pollQueueList","newInterval","some","_a","lastExecution","min","apply","interval","_onQueueTimerTick","forcePolling","subscription","queryEnabled","_queryPollItems","items","Observable","observer","_canExecute","undefined","requests","ItemRequest","requestFactory","err","_createGlobalError","_propagateServerResponse","result","pollItem","request","filter","Boolean","subscription_1","_executeRequests","response","_removeSubscription","index","isArray","errorResponse","subscriptionIndex","splice","now","Number","Date","itemsToBeExecuted","isBusy","intervalInSeconds","newPollId","newPollItem","initialRequest","TrackedFileStatuses","added","pendingPrepare","preparing","prepared","pendingUpload","uploading","uploadCompleted","failure","cancelled","purged","TrackedFile","data","status","progress","uploadCompleteAt","uploadOrder","_statusHistory","_id","asData","uploadStartAt","failureType","failureReason","update","changes","canTransitionTo","Error","assign","wasInStatus","toStatus","fromStatus","__ngOnDestroySource__","__ngOnDestroy__","cancelOnDestroy","instance","manualDestroy","source","lift","CancelOnDestroyOperator","ngOnDestroy","Subject","complete","subscriber","CancelOnDestroySubscriber","_super","destination","_instance","sources","merge","add","Subscriber","prefixMatch","trimMatch","grokType","parseXML","stringToXML","TagOperator","_tag","TagSubscriber","_isDecreased","_error","_complete","closed","UploadFileAdapterToken","UploadManagement","_uploadFileAdapter","_trackedFiles","_onTrackedFileChanged","_maxUploadRequests","onTrackedFileChanged$","setMaxUploadRequests","maxUploads","_log","level","fileId","formattedMessage","console","log","getTrackedFiles","getTrackedFile","relevantFile","addFile","file","addFiles","files","fileData","newUploadId","getFileName","_createTrackedFile","_syncUploadQueue","cancelUploadWithError","reason","trackedFile","cancelUpload","_updateTrackedFile","resumeUpload","resumeUploads","purge","uploadSubscription","purgeUpload","_removeTrackedFile","syncUploadQueueTimeoutId","_executePreparePhase","_executeUploadPhase","reduce","acc","curr","uploadAdapter","_getUploadAdapter","matchedItem","find","adapter","label","prepare","pipe","preparedFiles","_handlePrepareAdapterResponse","responseFiles","responseFile","waitingForUploadsFiles","activeUploadFiles","activeUploadsCount","waitingFilesCount","nextUploadFiles","availableUploadSlots","sort","pendingFile","slice","_initiateUpload","newTrackedFile","supportChunkUpload","uploadFileData","canHandleResponse_1","actionDescription","upload","uploadChanges","uploadFileAdapter","canHandle","Inject","args","UploadManagementModule","Download","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","anchor","document","createElement","toString","a","String","myBlob","fileName","bind","Blob","test","navigator","msSaveBlob","dataUrlToBlob","saver","strUrl","parts","split","binData","atob","decodeURIComponent","pop","mx","uiArr","Uint8Array","charCodeAt","url","winMode","href","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","open","confirm","location","f","src","createObjectURL","btoa","y","encodeURIComponent","FileReader","onload","readAsDataURL","_xmlCharMap","<",">","&","KalturaUtils","escapeXml","parsedValue","char","getStartDateValue","newValue","getTime","setHours","setMinutes","setSeconds","getEndDateValue","removeEmptyProperties","moveUpItems","list","selectedItems","relevantItems","selectedItem","minIndexInSelected","nextIndex","max","moveDownItems","maxIndexInSelected","correctedIndex","formatTime","addTimeChars","hours","round","minutes","seconds","hoursStr","minutesStr","secondsStr","fromServerDate","toServerDate","download","XmlToJSON","mergeCDATA","grokAttr","grokText","normalize","xmlns","namespaceKey","textKey","valueKey","attrKey","cdataKey","attrsAsObject","stripAttrPrefix","stripElemPrefix","childrenAsArray","RegExp","sValue","toLowerCase","isFinite","parseFloat","oXMLParent","opt","vResult","nLength","sCollectedTxt","namespaceURI","attributes","vAttribs","oAttrib","vContent","attribName","hasChildNodes","oNode","sProp","nItem","childNodes","nodeType","nodeValue","nodeName","parseString","xmlString","xmlToString","xmlDoc","xml","XMLSerializer","serializeToString","DOMParser","parseFromString","convertAttributes","parsedAttributes","attributeName","XmlParser","toJson","toXml","root","prefix","parsedPrefix","parsedObject","property","convertObjectToXml","propertyName","propertyValue","innerItem","parsedValue_1","innerProperty","toSimpleXml","config","_parseValueToXml","isEmptyValue","removeEmpty","arrayItem","valueAsXml","isEmptyValue_1","APP_STORAGE_TOKEN","AppStorage","storage","setInLocalStorage","getFromLocalStorage","removeFromLocalStorage","setInSessionStorage","getFromSessionStorage","removeFromSessionStorage","KalturaCommonModule","KalturaCommonModule_1","provide","useClass","CommonModule","action"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface OperationTagManagerProxy {\n    increase: (tag: string) => void;\n    decrease: (tag: string) => void;\n}\n\nexport class OperationTagStoreMediator{\n\n    private static _operationsTagManager: OperationTagManagerProxy = null;\n\n    public static register(operationsTagManager: OperationTagManagerProxy){\n        this._operationsTagManager = operationsTagManager;\n    }\n\n    public static increase(tag: string){\n        if (this._operationsTagManager){\n            this._operationsTagManager.increase(tag);\n        }\n    }\n\n    public static decrease(tag: string){\n        if (this._operationsTagManager){\n            this._operationsTagManager.decrease(tag);\n        }\n    }\n\n}","import {Injectable, OnDestroy} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {OperationTagManagerProxy} from './operation-tag-store-mediator';\n\n@Injectable()\nexport class OperationTagManagerService implements OperationTagManagerProxy {\n\n    private _tagStatus = new BehaviorSubject<{ [key: string]: number }>({});\n\n    // whenever a tag status changes this event is emitted\n    public tagStatus$ = this._tagStatus.asObservable();\n\n    constructor() {\n    }\n\n    // increase the count for a tag\n    increase(tag: string): void {\n        const tagsData = this._tagStatus.getValue();\n        if (!tagsData[tag]) {\n            tagsData[tag] = 0;\n        }\n        tagsData[tag]++;\n        this._tagStatus.next(tagsData);\n\n    }\n\n    decrease(tag: string): void {\n        const tagsData = this._tagStatus.getValue();\n        if (tagsData[tag] > 0) {\n            tagsData[tag]--;\n            this._tagStatus.next(tagsData);\n        } else {\n            tagsData[tag] = 0;\n            this._tagStatus.next(tagsData);\n\n        }\n    }\n}\n","\nimport { Self, Optional, NgModule, ModuleWithProviders } from '@angular/core';\nimport {OperationTagStoreMediator} from \"./operation-tag-store-mediator\";\nimport {OperationTagManagerService} from \"./operation-tag-manager.service\";\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n    ]\n})\nexport class OperationTagModule {\n\n    // Prevents angular from creating another instance for operationTagManagerService when defined as provider in more than one place\n    // (Each component will get the same instance as in the module/component that called the operationTagManagerService.forRoot)\n    constructor(@Self() @Optional() operationTagManagerService: OperationTagManagerService){\n        if (operationTagManagerService) {\n            OperationTagStoreMediator.register(operationTagManagerService);\n        }\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: OperationTagModule,\n            providers: <any[]>[\n                OperationTagManagerService\n            ]\n        };\n    }\n}\n","'use strict';\n/**\n * Source - from http://fiznool.com/blog/2014/11/16/short-id-generation-in-javascript/\n */\n\n/**\n * The default alphabet is 25 numbers and lowercase letters.\n * Any numbers that look like letters and vice versa are removed:\n * 1 l, 0 o.\n * Also the following letters are not present, to prevent any\n * expletives: cfhistu\n */\nvar DEFAULT_ALPHABET =\n    '23456789abdegjkmnpqrvwxyz';\n\n// Governs the length of the ID.\n// With an alphabet of 25 chars,\n// a length of 8 gives us 25^8 or\n// 152,587,890,625 possibilities.\n// Should be enough...\nvar DEFAULT_ID_LENGTH = 5;\n\n/**\n * Governs the number of times we should try to find\n * a unique value before giving up.\n */\nvar UNIQUE_RETRIES = 9999;\n\n\n\nexport class FriendlyHashId {\n\n    static defaultInstance : FriendlyHashId = null;\n    static generate(alphabetOptions? : any) : string {\n        if (!FriendlyHashId.defaultInstance)\n        {\n            FriendlyHashId.defaultInstance = new FriendlyHashId();\n        }\n        return FriendlyHashId.defaultInstance.generate(alphabetOptions);\n    }\n\n    /**\n     * Returns a randomly-generated friendly ID.\n     * Note that the friendly ID is not guaranteed to be\n     * unique to any other ID generated by this same method,\n     * so it is up to you to check for uniqueness.\n     * return {String} friendly ID.\n     */\n    generate(alphabetOptions? : any) : string\n    {\n        var options = alphabetOptions || {};\n\n        var alphabet = options.alphabet || DEFAULT_ALPHABET;\n        var idLength = options.idLength || DEFAULT_ID_LENGTH;\n\n        var rtn = '';\n        for (var i = 0; i < idLength; i++) {\n            rtn += alphabet.charAt(Math.floor(Math.random() * alphabet.length));\n        }\n        return rtn;\n    };\n\n    /**\n     * Tries to generate a unique ID that is not defined in the\n     * `previous` array.\n     * param  {Array} previous The list of previous ids to avoid.\n     * return {String} A unique ID, or `null` if one could not be generated.\n     */\n    generateUnique(previous : any[]) {\n        previous = previous || [];\n        var retries = 0;\n        var id;\n\n        // Try to generate a unique ID,\n        // i.e. one that isn't in the previous.\n        while (!id && retries < UNIQUE_RETRIES) {\n            id = this.generate();\n            if (previous.indexOf(id) !== -1) {\n                id = null;\n                retries++;\n            }\n        }\n\n        return id;\n    };\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport type Context = { [key: string]: any };\nexport type DefferedContext = () => Context;\n\nexport const KalturaLoggerInjectionToken = new InjectionToken<KalturaLogger>('kaltura-logger');\n\nexport interface KalturaLogger {\n\ttrace(message: string, context?: Context): void;\n\n\ttrace(message: string, context?: DefferedContext): void;\n\n\ttrace(message: string, context?: Context | DefferedContext): void;\n\n\tdebug(message: string, context?: Context): void;\n\n\tdebug(message: string, context?: DefferedContext): void;\n\n\tdebug(message: string, context?: Context | DefferedContext): void;\n\n\tinfo(message: string, context?: Context): void;\n\n\tinfo(message: string, context?: DefferedContext): void;\n\n\tinfo(message: string, context?: Context | DefferedContext): void;\n\n\twarn(message: string, context?: Context): void;\n\n\twarn(message: string, context?: DefferedContext): void;\n\n\twarn(message: string, context?: Context | DefferedContext): void;\n\n\terror(message: string, context?: Context): void;\n\n\terror(message: string, error?: Error): void;\n\n\terror(message: string, context?: Error | Context): void;\n\n\tfatal(message: string, context?: Context): void;\n\n\tfatal(message: string, error?: Error): void;\n\n\tfatal(message: string, context?: Error | Context): void;\n\n\tsubLogger(name: string): KalturaLogger;\n}\n\nexport class EmptyLogger implements KalturaLogger {\n\ttrace(message: string, context?: Context): void;\n\ttrace(message: string, context?: DefferedContext): void;\n\ttrace(message: string, context?: Context | DefferedContext): void;\n\ttrace(message: string, context?): void {\n\t}\n\n\tdebug(message: string, context?: Context): void;\n\tdebug(message: string, context?: DefferedContext): void;\n\tdebug(message: string, context?: Context | DefferedContext): void;\n\tdebug(message: string, context?): void {\n\t}\n\n\tinfo(message: string, context?: Context): void;\n\tinfo(message: string, context?: DefferedContext): void;\n\tinfo(message: string, context?: Context | DefferedContext): void;\n\tinfo(message: string, context?): void {\n\t}\n\n\twarn(message: string, context?: Context): void;\n\twarn(message: string, context?: DefferedContext): void;\n\twarn(message: string, context?: Context | DefferedContext): void;\n\twarn(message: string, context?): void {\n\t}\n\n\terror(message: string, context?: Context): void;\n\terror(message: string, error?: Error): void;\n\terror(message: string, context?: Error | Context): void;\n\terror(message: string, context?): void {\n\t}\n\n\tfatal(message: string, context?: Context): void;\n\tfatal(message: string, error?: Error): void;\n\tfatal(message: string, context?: Error | Context): void;\n\tfatal(message: string, context?): void {\n\t}\n\n\tsubLogger(name: string): KalturaLogger {\n\t\treturn new EmptyLogger();\n\t}\n}\n\n","import { Observable } from 'rxjs';\nimport { Subscriber } from 'rxjs/Subscriber';\nimport { FriendlyHashId } from '../friendly-hash-id';\nimport { ISubscription } from 'rxjs/Subscription';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { EmptyLogger, KalturaLogger } from '../kaltura-logger';\nimport { Optional } from '@angular/core';\n\nexport type PollInterval = 10 | 30 | 60 | 300;\n\nexport interface RequestFactory<TRequest, TResponse> {\n  create(): TRequest;\n}\n\ninterface PollItem<TError> {\n  id: string;\n  interval: PollInterval;\n  lastExecution: Date,\n  queryEnabled: boolean,\n  requestFactory: RequestFactory<any, any>,\n  observer: Subscriber<{result: any, error: TError}>\n}\n\nexport abstract class ServerPolls<TRequest, TError> {\n  private _pollQueue: { [key: string]: PollItem<TError> } = {};\n  private _tokenGenerator = new FriendlyHashId();\n  private _queueTimeout: number;\n  private _missingDestoryHandling = false;\n  private _subscriptions: ISubscription[] = [];\n  private _state = new BehaviorSubject({ busy: false });\n    private _logger: KalturaLogger;\n  public state$ = this._state.asObservable();\n  private _queueInterval: number = null;\n\n  protected abstract _executeRequests(requests: TRequest[]): Observable<{ error: TError, result: any }[]>;\n\n  protected abstract _createGlobalError(error?: Error): TError;\n\n  protected abstract _getOnDestroy$(): Observable<void>;\n\n  protected abstract _canExecute(): boolean;\n\n  constructor(kalturaLogger: KalturaLogger) {\n\n\t  if (kalturaLogger) {\n\t\t  this._logger = kalturaLogger;\n\t  } else {\n\t\t  this._logger = new EmptyLogger();\n\t  }\n\t  this._initialize();\n  }\n\n  private _warnAboutMissingDestory(): void {\n      // NOTICE: showing a warning every time since this is an implementation issue that must be addressed during development.\n      const error = `calling method '_getOnDestroy$()' didn't return valid observable (did you remember to provide 'Observable' that will be invoked from ngOnDestroy method?)`;\n      this._logger.error(error);\n  }\n\n  private _initialize(): void {\n      this._logger.trace('_initialize()');\n      setTimeout(() => {\n          const onDestroy$ = this._getOnDestroy$();\n\n          if (!onDestroy$) {\n              this._missingDestoryHandling = true;\n              this._warnAboutMissingDestory();\n          } else {\n              onDestroy$.subscribe(() => {\n                  this._logger.trace('onDestroy$.subscribe()');\n                  this._cancelQueueInterval();\n                  this._subscriptions.forEach(item => {\n                      item.unsubscribe();\n                  });\n                  this._subscriptions = [];\n              });\n          }\n      });\n  }\n\n  private _cancelQueueInterval(): void {\n    clearTimeout(this._queueTimeout);\n  }\n\n  private _getPollQueueList(): PollItem<TError>[] {\n    return Object.keys(this._pollQueue).map(key => this._pollQueue[key]);\n  }\n\n  private _setupQueueTimer(): void {\n      this._cancelQueueInterval();\n\n      const pollQueueList = this._getPollQueueList();\n\n      if (this._missingDestoryHandling) {\n          // NOTICE: showing a warning every time since this is an implementation issue that must be addressed during development.\n          this._warnAboutMissingDestory();\n      }\n\n\n      if (!pollQueueList.length) {\n          this._logger.info('no actions found in the queue. suspending interval until an action will be added');\n          return;\n      }\n\n      let newInterval: number = null;\n      const hasNewPolls = pollQueueList.some(({lastExecution}) => !!lastExecution);\n      if (!hasNewPolls) {\n          newInterval = Math.min(...pollQueueList.map(({interval}) => interval)) / 2;\n      }\n      newInterval = newInterval && newInterval > 10 ? newInterval : 10; // default to ten seconds (minimum value)\n      if (this._queueInterval !== newInterval) {\n          this._logger.info( `updating queue interval to poll server every ${newInterval} seconds`);\n          this._queueInterval = newInterval;\n      }\n\n      this._queueTimeout = setTimeout(() => {\n          this._onQueueTimerTick();\n      }, this._queueInterval * 1000);\n  }\n\n  public forcePolling() {\n      this._logger.info('force server polling requested');\n      // cancel active requests\n      this._cancelQueueInterval();\n      this._subscriptions.forEach(subscription => {\n          subscription.unsubscribe();\n      });\n      this._subscriptions = [];\n\n      // enable all requests\n      this._getPollQueueList().forEach(item => item.queryEnabled = true);\n\n      // send poll request for all requests\n      const subscription = this._queryPollItems(this._getPollQueueList())\n          .subscribe(() => this._setupQueueTimer(), () => this._setupQueueTimer());\n  }\n\n    private _queryPollItems(items: PollItem<TError>[]): Observable<void> {\n        return Observable.create(observer => {\n            this._logger.debug(`execute server polling`);\n\n            if (!this._canExecute() || !items || items.length === 0) {\n                this._logger.debug(`execute server polling ignored, cannot execute request or no items provided to query`);\n                observer.next(undefined);\n                return;\n            }\n\n            const requests = items.map(item => {\n                let ItemRequest: TRequest;\n                let error: TError;\n                try {\n                    ItemRequest = item.requestFactory.create();\n                } catch (err) {\n                    this._logger.error(`failed to create a request for '${item.id}'. got the following error : '${err.message}'`);\n\n                    ItemRequest = null;\n                    error = this._createGlobalError(err);\n                }\n\n                if (error) {\n                    this._propagateServerResponse(item, {error: error, result: null});\n                }\n                return ItemRequest ? {pollItem: item, request: ItemRequest} : null;\n            }).filter(Boolean);\n\n            this._logger.info(`executing server poll for ${requests.length} items`);\n\n            if (!requests.length)\n            {\n                observer.next(undefined);\n            }else {\n                const subscription = this._executeRequests(requests.map(item => item.request))\n                    .subscribe(\n                        response => {\n                            this._removeSubscription(subscription);\n\n                            this._logger.info(`got ${response.length} responses. propagate responses to relevant actions`);\n                            requests.forEach(({pollItem}, index) => {\n                                let result = response[index];\n                                if (Array.isArray(result)) {\n                                    result = { result, error: null }\n                                }\n                                this._propagateServerResponse(pollItem, result);\n                            });\n\n                            observer.next(undefined);\n                        },\n                        (error) => {\n\n                            this._logger.error(`failed to query the server. got the following error : '${error.message}'`);\n                            this._removeSubscription(subscription);\n\n                            const errorResponse = {error: this._createGlobalError(error), result: null};\n                            requests.forEach(({pollItem}) => {\n                                this._propagateServerResponse(pollItem, errorResponse);\n                            });\n\n                            observer.next(undefined);\n                        }\n                    );\n                this._subscriptions.push(subscription);\n\n                return () => {\n                    this._removeSubscription(subscription);\n                };\n            }\n\n\n        });\n    }\n\n    private _removeSubscription(subscription: ISubscription): void {\n        if (subscription) {\n            const subscriptionIndex = this._subscriptions.indexOf(subscription);\n\n            if (subscriptionIndex > -1) {\n                this._subscriptions.splice(\n                    subscriptionIndex,\n                    1\n                )\n            }\n        }\n    }\n\n    private _onQueueTimerTick(): void {\n\n        if (!this._canExecute()) {\n            this._setupQueueTimer();\n            this._logger.trace('_onQueueTimerTick(): canExecute() check failed. ignore current execution');\n            return;\n        }\n\n        this._logger.debug('prepare server poll request');\n\n        const now = Number(new Date());\n        const itemsToBeExecuted = this._getPollQueueList()\n            .filter(item => item.queryEnabled && (!item.lastExecution || (Number(item.lastExecution) + (item.interval * 1000) <= now)));\n\n\n        if (!itemsToBeExecuted.length) {\n            this._logger.debug('nothing to run. Waiting next tick...');\n            this._setupQueueTimer();\n            return;\n        }\n\n        this._logger.info(`set busy mode to true`);\n        this._state.next({busy: true});\n        this._queryPollItems(itemsToBeExecuted)\n            .subscribe(\n                () => {\n                    this._state.next({busy: false});\n                    this._setupQueueTimer();\n                },\n                (error) => {\n                    this._state.next({busy: false});\n                }\n            );\n    }\n\n  private _propagateServerResponse(item: PollItem<TError>, response: { error: TError, result: any }): void{\n      try {\n          if (this._pollQueue[item.id]) {\n              this._logger.debug(`propagating response for ${item.id}`);\n              item.lastExecution = new Date();\n              item.observer.next(response);\n          }else\n          {\n              this._logger.info(`cannot find registered action for '${item.id} (it might indicate that this action was unsubscribed while a request to the server was executed)`);\n          }\n      } catch (err) {\n          this._logger.warn( `error happened while propagating response of '${item.id}'.ignoring error. got the following error: ${err.message}`);\n      }\n  }\n\n  public isBusy(): boolean {\n      return this._state.getValue().busy;\n  }\n\n  public register<TResponse>(intervalInSeconds: PollInterval, requestFactory: RequestFactory<TRequest, TResponse>): Observable<{ error: TError, result: TResponse }> {\n    return Observable.create(observer => {\n      const newPollId = this._tokenGenerator.generateUnique(Object.keys(this._pollQueue));\n        this._logger.info( `register new poll request ${newPollId} (interval = ${intervalInSeconds} seconds)`);\n      const newPollItem: PollItem<TError> = this._pollQueue[newPollId] = {\n        id: newPollId,\n        interval: intervalInSeconds,\n        lastExecution: null,\n          queryEnabled: false,\n        requestFactory: requestFactory,\n        observer: observer\n      };\n\n      this._logger.info( `execute the added request '${newPollId}'`);\n      let initialRequest = this._queryPollItems([newPollItem])\n          .subscribe(\n              () =>\n              {\n                  initialRequest = null;\n                  newPollItem.queryEnabled = true;\n                  this._setupQueueTimer();\n              },\n              () =>\n              {\n                  initialRequest = null;\n                  newPollItem.queryEnabled = true;\n                  this._setupQueueTimer();\n              }\n          );\n\n      return () => {\n          this._logger.info(`stop polling for ${newPollId}`);\n          if (initialRequest) {\n              initialRequest.unsubscribe();\n          }\n          delete this._pollQueue[newPollId];\n      }\n    });\n  }\n}\n","import { UploadFileData } from './upload-file-data';\nimport { ISubscription } from 'rxjs/Subscription';\n\nexport type TrackedFileStatus = string\n\nexport class TrackedFileStatuses {\n    public static readonly added: TrackedFileStatus = 'added'; // one-time status, cannot be assigned twice\n    public static readonly pendingPrepare: TrackedFileStatus = 'pendingPrepare';\n    public static readonly preparing: TrackedFileStatus = 'preparing';\n    public static readonly prepared: TrackedFileStatus = 'prepared'; // one-time status, cannot be assigned twice\n    public static readonly pendingUpload: TrackedFileStatus = 'waitingUpload';\n    public static readonly uploading: TrackedFileStatus = 'uploading';\n    public static readonly uploadCompleted: TrackedFileStatus = 'uploadCompleted'; // one-time status, cannot be assigned twice\n    public static readonly failure: TrackedFileStatus = 'failure';\n    public static readonly cancelled: TrackedFileStatus = 'cancelled';\n    public static readonly purged: TrackedFileStatus = 'purged';  // one-time status, cannot be assigned twice\n}\n\nexport interface TrackedFileData\n{\n    id: string;\n    status: TrackedFileStatus;\n    uploadStartAt: Date;\n    progress: number;\n    uploadCompleteAt?: Date;\n    uploadOrder: number;\n    failureType?: string;\n    failureReason?: string;\n    data: UploadFileData;\n}\n\nexport interface TrackedFileChanges\n{\n    status?: TrackedFileStatus;\n    uploadStartAt?: Date;\n    progress?: number;\n    uploadCompleteAt?: Date;\n    uploadOrder?: number;\n    failureType?: string;\n    failureReason?: string;\n}\n\nexport class TrackedFile {\n    private _id: string;\n    public get id():string{\n        return this._id;\n    }\n    status: TrackedFileStatus = TrackedFileStatuses.added;\n    uploadStartAt?: Date;\n    progress: number =  0;\n    uploadCompleteAt: Date = null;\n    uploadOrder: number = 0;\n    failureType: string;\n    failureReason: string;\n    data: UploadFileData;\n    uploadSubscription: ISubscription;\n    private _statusHistory : { [key:string] : boolean } = {\n        'added' : true\n    };\n\n    constructor(id: string, data: UploadFileData)\n    {\n        this._id = id;\n        this.data = data;\n    }\n\n    public asData() : TrackedFileData{\n        return {\n            id: this.id,\n            status: this.status,\n            uploadStartAt: this.uploadStartAt,\n            progress: this.progress,\n            uploadCompleteAt: this.uploadCompleteAt,\n            uploadOrder: this.uploadOrder,\n            failureType: this.failureType,\n            failureReason: this.failureReason,\n            data: this.data\n        };\n    }\n\n    public update(changes: TrackedFileChanges): void\n    {\n        if (changes.status && changes.status !== this.status) {\n            if (!this.canTransitionTo(changes.status))\n            {\n                throw new Error(`file ${this.id}: cannot update status to '${changes.status}'`);\n            }\n\n            this._statusHistory[changes.status] = true;\n        }\n\n        Object.assign(this,changes);\n    }\n\n    public wasInStatus(status: TrackedFileStatus): boolean\n    {\n        return !!this._statusHistory[status];\n    }\n\n    public canTransitionTo(toStatus: string) : boolean {\n        let result: boolean = false;\n        const trackedFile = this;\n        const fromStatus = trackedFile ? trackedFile.status : null;\n\n        if (trackedFile  && fromStatus && toStatus) {\n\n            if (fromStatus === TrackedFileStatuses.purged)\n            {\n                // never allow changing status once file was purged\n                result = false;\n            }\n\n            switch (toStatus) {\n                case TrackedFileStatuses.added:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.added);\n                    break;\n                case TrackedFileStatuses.pendingPrepare:\n                    result = !this.wasInStatus(TrackedFileStatuses.prepared);\n                    break;\n                case TrackedFileStatuses.preparing:\n                    result = !this.wasInStatus(TrackedFileStatuses.prepared)\n                        && fromStatus === TrackedFileStatuses.pendingPrepare;\n                    break;\n                case TrackedFileStatuses.prepared:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.prepared)\n                        && fromStatus === TrackedFileStatuses.preparing;\n                    break;\n                case TrackedFileStatuses.pendingUpload:\n                    result = this.wasInStatus(TrackedFileStatuses.prepared)\n                        && !this.wasInStatus(TrackedFileStatuses.uploadCompleted);\n                    break;\n                case TrackedFileStatuses.uploading:\n                    result = !this.wasInStatus(TrackedFileStatuses.uploadCompleted)\n                        && fromStatus === TrackedFileStatuses.pendingUpload;\n                    break;\n                case TrackedFileStatuses.uploadCompleted:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.uploadCompleted)\n                        && fromStatus === TrackedFileStatuses.uploading;\n                    break;\n                case TrackedFileStatuses.cancelled:\n                    result = ([TrackedFileStatuses.cancelled, TrackedFileStatuses.uploadCompleted, TrackedFileStatuses.purged].indexOf(fromStatus) === -1);\n                    break;\n                case TrackedFileStatuses.failure:\n                    // always allow changing to 'failure' status (assuming 'purge' is handled separately before)\n                    result = ([TrackedFileStatuses.uploadCompleted, TrackedFileStatuses.purged].indexOf(fromStatus) === -1);\n                    break;\n                case TrackedFileStatuses.purged:\n                    // one-time status, cannot be assigned twice\n                    result = !this.wasInStatus(TrackedFileStatuses.purged);\n                    break;\n                default:\n                    throw new Error(`unknown status provided '${toStatus}'`);\n            }\n        }\n\n        return result;\n    }\n\n}\n","import {merge, MonoTypeOperatorFunction, Observable, Operator, Subject, Subscriber, TeardownLogic} from \"rxjs\";\nimport {OnDestroy} from \"@angular/core\";\n\nconst __ngOnDestroySource__ = Symbol(\"__ngOnDestroySource__\");\nconst __ngOnDestroy__ = Symbol(\"__ngOnDestroy__\");\n\ninterface EnhancedOnDestroy extends OnDestroy {\n  [__ngOnDestroySource__]: Subject<string>;\n  [__ngOnDestroy__]: () => void;\n}\n\nexport function cancelOnDestroy<T>(instance: OnDestroy,\n                                   manualDestroy?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new CancelOnDestroyOperator(instance, manualDestroy));\n}\n\nclass CancelOnDestroyOperator<T> implements Operator<T, T> {\n  constructor(private instance: OnDestroy, private manualDestroy?: Observable<any>) {\n    if (instance.ngOnDestroy) {\n      if (!(<EnhancedOnDestroy>instance)[__ngOnDestroySource__]) {\n        (<EnhancedOnDestroy>instance)[__ngOnDestroySource__] = new Subject();\n        (<EnhancedOnDestroy>instance)[__ngOnDestroy__] = instance.ngOnDestroy;\n\n        instance.ngOnDestroy = function (this: EnhancedOnDestroy) {\n\n          this[__ngOnDestroy__].apply(this, arguments);\n          this[__ngOnDestroySource__].next();\n          this[__ngOnDestroySource__].complete();\n        };\n      }\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    return source.subscribe(new CancelOnDestroySubscriber(subscriber, <EnhancedOnDestroy>this.instance, this.manualDestroy));\n  }\n}\n\nclass CancelOnDestroySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>,\n              private _instance: EnhancedOnDestroy,\n              private manualDestroy?: Observable<any>) {\n    super(destination);\n\n    const sources = manualDestroy\n      ? merge(manualDestroy, _instance[__ngOnDestroySource__])\n      : _instance[__ngOnDestroySource__].asObservable();\n\n    this.add(sources.subscribe(\n      () => {\n        destination.unsubscribe();\n      }\n    ));\n  }\n}\n","import {MonoTypeOperatorFunction, Observable, Operator, Subscriber, TeardownLogic} from \"rxjs\";\nimport {OperationTagStoreMediator} from \"../../operation-tag/operation-tag-store-mediator\";\n\nexport function tag<T>(action): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TagOperator(action));\n}\n\nclass TagOperator<T> implements Operator<T, T> {\n  constructor(private _tag: string) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TagSubscriber(subscriber, this._tag));\n  }\n}\n\nclass TagSubscriber<T> extends Subscriber<T> {\n  private _isDecreased = false;\n\n  constructor(destination: Subscriber<T>,\n              private _tag: string) {\n    super(destination);\n\n    OperationTagStoreMediator.increase(this._tag);\n  }\n\n\n  protected _error(err: any) {\n    if (this._tag && !this._isDecreased) {\n\n      this._isDecreased = true;\n      OperationTagStoreMediator.decrease(this._tag);\n    }\n    super._error(err);\n  }\n\n  protected _complete() {\n    if (this._tag && !this._isDecreased) {\n      this._isDecreased = true;\n      OperationTagStoreMediator.decrease(this._tag);\n    }\n    super._complete();\n  }\n\n  unsubscribe() {\n    if (!this.closed && this._tag && !this._isDecreased) {\n      this._isDecreased = true;\n      OperationTagStoreMediator.decrease(this._tag);\n    }\n\n    super.unsubscribe();\n  }\n}\n","/* Copyright 2013 William Summers, Metatribal Research\n * adapted from https://developer.mozilla.org/en-US/docs/JXON\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author William Summers\n *\n */\nexport const XmlToJSON = (function () {\n\n    var options = { // set up the default options\n        mergeCDATA: true,\t// extract cdata and merge with text\n        grokAttr: true,\t\t// convert truthy attributes to boolean, etc\n        grokText: true,\t\t// convert truthy text/attr to boolean, etc\n        normalize: true,\t// collapse multiple spaces to single space\n        xmlns: true, \t\t// include namespaces as attribute in output\n        namespaceKey: '_ns', \t// tag name for namespace objects\n        textKey: '_text', \t// tag name for text nodes\n        valueKey: '_value', \t// tag name for attribute values\n        attrKey: '_attr', \t// tag for attr groups\n        cdataKey: '_cdata',\t// tag for cdata nodes (ignored if mergeCDATA is true)\n        attrsAsObject: true, \t// if false, key is used as prefix to name, set prefix to '' to merge children and attrs.\n        stripAttrPrefix: true, \t// remove namespace prefixes from attributes\n        stripElemPrefix: true, \t// for elements of same name in diff namespaces, you can enable namespaces and access the nskey property\n        childrenAsArray: true \t// force children into arrays\n    };\n\n    var prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n    var trimMatch = new RegExp(/^\\s+|\\s+$/g);\n\n    var grokType = function (sValue) {\n        if (/^\\s*$/.test(sValue)) {\n            return null;\n        }\n        if (/^(?:true|false)$/i.test(sValue)) {\n            return sValue.toLowerCase() === \"true\";\n        }\n        if (isFinite(sValue)) {\n            return parseFloat(sValue);\n        }\n        return sValue;\n    };\n\n    var parseString = function (xmlString : string, opt : any) {\n        return this.parseXML(stringToXML(xmlString), opt);\n    }\n\n    var parseXML = function (oXMLParent, opt?) {\n\n        // initialize options\n        for (let key in opt) {\n            options[key] = opt[key];\n        }\n\n        var vResult = {}, nLength = 0, sCollectedTxt = \"\";\n\n        // parse namespace information\n        if (options.xmlns && oXMLParent.namespaceURI) {\n            vResult[options.namespaceKey] = oXMLParent.namespaceURI;\n        }\n\n        // parse attributes\n        // using attributes property instead of hasAttributes method to support older browsers\n        if (oXMLParent.attributes && oXMLParent.attributes.length > 0) {\n            var vAttribs = {};\n\n            for (nLength; nLength < oXMLParent.attributes.length; nLength++) {\n                let oAttrib = oXMLParent.attributes.item(nLength);\n                vContent = {};\n                let attribName = '';\n\n                if (options.stripAttrPrefix) {\n                    attribName = oAttrib.name.replace(prefixMatch, '');\n\n                } else {\n                    attribName = oAttrib.name;\n                }\n\n                if (options.grokAttr) {\n                    vContent[options.valueKey] = grokType(oAttrib.value.replace(trimMatch, ''));\n                } else {\n                    vContent[options.valueKey] = oAttrib.value.replace(trimMatch, '');\n                }\n\n                if (options.xmlns && oAttrib.namespaceURI) {\n                    vContent[options.namespaceKey] = oAttrib.namespaceURI;\n                }\n\n                if (options.attrsAsObject) { // attributes with same local name must enable prefixes\n                    vAttribs[attribName] = vContent;\n                } else {\n                    vResult[options.attrKey + attribName] = vContent;\n                }\n            }\n\n            if (options.attrsAsObject) {\n                vResult[options.attrKey] = vAttribs;\n            } else {}\n        }\n\n        // iterate over the children\n        if (oXMLParent.hasChildNodes()) {\n            for (var oNode, sProp, vContent, nItem = 0; nItem < oXMLParent.childNodes.length; nItem++) {\n                oNode = oXMLParent.childNodes.item(nItem);\n\n                if (oNode.nodeType === 4) {\n                    if (options.mergeCDATA) {\n                        sCollectedTxt += oNode.nodeValue;\n                    } else {\n                        if (vResult.hasOwnProperty(options.cdataKey)) {\n                            if (vResult[options.cdataKey].constructor !== Array) {\n                                vResult[options.cdataKey] = [vResult[options.cdataKey]];\n                            }\n                            vResult[options.cdataKey].push(oNode.nodeValue);\n\n                        } else {\n                            if (options.childrenAsArray) {\n                                vResult[options.cdataKey] = [];\n                                vResult[options.cdataKey].push(oNode.nodeValue);\n                            } else {\n                                vResult[options.cdataKey] = oNode.nodeValue;\n                            }\n                        }\n                    }\n                } /* nodeType is \"CDATASection\" (4) */\n                else if (oNode.nodeType === 3) {\n                    sCollectedTxt += oNode.nodeValue;\n                } /* nodeType is \"Text\" (3) */\n                else if (oNode.nodeType === 1) { /* nodeType is \"Element\" (1) */\n\n                    if (nLength === 0) {\n                        vResult = {};\n                    }\n\n                    // using nodeName to support browser (IE) implementation with no 'localName' property\n                    if (options.stripElemPrefix) {\n                        sProp = oNode.nodeName.replace(prefixMatch, '');\n                    } else {\n                        sProp = oNode.nodeName;\n                    }\n\n                    vContent = parseXML(oNode);\n\n                    if (vResult.hasOwnProperty(sProp)) {\n                        if (vResult[sProp].constructor !== Array) {\n                            vResult[sProp] = [vResult[sProp]];\n                        }\n                        vResult[sProp].push(vContent);\n\n                    } else {\n                        if (options.childrenAsArray) {\n                            vResult[sProp] = [];\n                            vResult[sProp].push(vContent);\n                        } else {\n                            vResult[sProp] = vContent;\n                        }\n                        nLength++;\n                    }\n                }\n            }\n        } else if (!sCollectedTxt){ // no children and no text, return null\n            if (options.childrenAsArray) {\n                vResult[options.textKey] = [];\n                vResult[options.textKey].push(null);\n            } else {\n                vResult[options.textKey] = null;\n            }\n        }\n\n        if (sCollectedTxt) {\n            if (options.grokText) {\n                let value = grokType(sCollectedTxt.replace(trimMatch, ''));\n                if (value) {\n                    vResult[options.textKey] = value;\n                }\n            } else if (options.normalize) {\n                vResult[options.textKey] = sCollectedTxt.replace(trimMatch, '').replace(/\\s+/g, \" \");\n            } else {\n                vResult[options.textKey] = sCollectedTxt.replace(trimMatch, '');\n            }\n        }\n\n        return vResult;\n    }\n\n\n    // Convert xmlDocument to a string\n    // Returns null on failure\n    var xmlToString = function (xmlDoc) {\n        try {\n            var xmlString = xmlDoc.xml ? xmlDoc.xml : (new XMLSerializer()).serializeToString(xmlDoc);\n            return xmlString;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    // Convert a string to XML Node Structure\n    // Returns null on failure\n    var stringToXML = function (xmlString) {\n        try {\n            var xmlDoc = null;\n\n            if (typeof DOMParser === 'function') {\n\n                var parser = new DOMParser();\n                xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\n\n                return xmlDoc;\n            } else {\n                return null;\n                // TODO [kmcng] consider if to allow active x object\n                // xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                // xmlDoc.async = false;\n                // xmlDoc.loadXML(xmlString);\n                //\n                // return xmlDoc;\n            }\n        } catch (e) {\n            return null;\n        }\n    }\n\n    // this is the \"revealed\"/public part of the module\n    return {\n        parseXML: parseXML,\n        parseString: parseString,\n        xmlToString: xmlToString,\n        stringToXML: stringToXML\n    };\n\n}());","import { OnDestroy, Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { UploadFileData } from './upload-file-data';\nimport { UploadFileAdapter } from './upload-file-adapter';\nimport { Subject, Observable } from 'rxjs';\nimport 'rxjs/add/operator/groupBy';\nimport { FriendlyHashId } from '../friendly-hash-id';\nimport { TrackedFile, TrackedFileChanges, TrackedFileData, TrackedFileStatuses } from './tracked-file';\nimport { cancelOnDestroy } from '../rxjs/operators';\n\nexport interface TrackedFiles {\n    [id: string]: TrackedFile\n}\n\nexport const UploadFileAdapterToken = new InjectionToken<string>('upload-file-adapter');\n\n@Injectable()\nexport class UploadManagement implements OnDestroy {\n    private _trackedFiles: TrackedFiles = {};\n    private _onTrackedFileChanged = new Subject<TrackedFileData>();\n    private _maxUploadRequests: number = null;\n    public onTrackedFileChanged$ = this._onTrackedFileChanged.asObservable();\n    private _tokenGenerator = new FriendlyHashId();\n    syncUploadQueueTimeoutId : number;\n\n    constructor(@Inject(UploadFileAdapterToken) @Optional() private _uploadFileAdapter: UploadFileAdapter<any>[]) {\n\n    }\n\n    public setMaxUploadRequests(maxUploads?: number): void {\n        if (maxUploads === null || maxUploads > 0) {\n            this._log('info', `limit max upload requests to ${maxUploads}`);\n            this._maxUploadRequests = maxUploads;\n        } else {\n            this._log('info', `remove max upload limitation`);\n            this._maxUploadRequests = null;\n        }\n    }\n\n    // TODO [kmcng] replace this function with log library\n    private _log(level: 'silly' | 'debug' | 'info' | 'warn' | 'error', message: string, fileId?: string): void {\n        const messageContext = fileId ? `file '${fileId}'` : '';\n        const origin = 'upload manager';\n        const formattedMessage = `log: [${level}] [${origin}] ${messageContext}: ${message}`;\n        switch (level) {\n            case 'silly':\n            case 'debug':\n            case 'info':\n                console.log(formattedMessage);\n                break;\n            case 'warn':\n                console.warn(formattedMessage);\n                break;\n            case 'error':\n                console.error(formattedMessage);\n                break;\n        }\n    }\n\n    public getTrackedFiles(): TrackedFileData[]\n    {\n        return Object.keys(this._trackedFiles).map(fileId => this._trackedFiles[fileId].asData());\n    }\n\n    public getTrackedFile(fileId: string): TrackedFileData\n    {\n        const relevantFile = this._trackedFiles[fileId];\n        return relevantFile? relevantFile.asData() : null;\n    }\n\n    public addFile(file: UploadFileData): { id: string } {\n        const [newFileId] = this.addFiles([file]);\n        return newFileId;\n    }\n\n    public addFiles(files: UploadFileData[]): { id: string, data: UploadFileData }[] {\n\n        const result: { id: string, data: UploadFileData }[] = [];\n\n        files.forEach((fileData) => {\n\n            const newUploadId = this._tokenGenerator.generateUnique(Object.keys(this._trackedFiles));\n\n            this._log('info', `add new file '${fileData.getFileName()}' to queue with unique file id`,newUploadId);\n            this._createTrackedFile(newUploadId, fileData);\n\n            result.push({id: newUploadId, data: fileData});\n        });\n\n        if (result.length)\n        {\n            this._syncUploadQueue();\n        }\n\n\n        return result;\n    }\n\n    public cancelUploadWithError(id: string, reason: string) : void {\n        this._log('info', `cancel file upload with custom reason '${reason}'`,id);\n\n        const trackedFile = this._trackedFiles[id];\n\n        if (trackedFile) {\n            {\n                if (trackedFile.canTransitionTo(TrackedFileStatuses.cancelled)) {\n                    this.cancelUpload(id, false);\n\n                  if (trackedFile.canTransitionTo(TrackedFileStatuses.failure)) {\n                    this._updateTrackedFile(trackedFile,\n                      {\n                        status: TrackedFileStatuses.failure,\n                        failureReason: reason || 'unknown error',\n                        failureType: 'manual_error'\n                      }\n                    );\n                  }\n                }\n            }\n        }else\n        {\n            this._log('warn','cannot cancel upload, failed to find file with provided id',id);\n        }\n    }\n\n\n    public resumeUpload(id: string): void {\n      this.resumeUploads([id]);\n    }\n\n    public resumeUploads(files: string[]): void {\n        let syncUploadQueue = false;\n\n        files.forEach(id => {\n            this._log('info', `resume file upload.`, id);\n            const trackedFile = this._trackedFiles[id];\n\n            if (trackedFile) {\n                if (trackedFile.wasInStatus(TrackedFileStatuses.prepared)) {\n                    this._updateTrackedFile(trackedFile, {\n                        status: TrackedFileStatuses.pendingUpload\n                    });\n                } else {\n                    this._updateTrackedFile(trackedFile, {\n                        status: TrackedFileStatuses.pendingPrepare\n                    });\n                }\n            } else {\n                this._log('warn', 'cannot resume upload, failed to find file with provided id', id);\n            }\n        });\n\n        this._syncUploadQueue();\n    }\n\n    public cancelUpload(id: string, purge: boolean= true): void {\n        this._log('info', `cancel file upload.`, id);\n\n        const trackedFile = this._trackedFiles[id];\n\n        if (trackedFile) {\n            if (trackedFile.status !== TrackedFileStatuses.cancelled\n                && trackedFile.canTransitionTo(TrackedFileStatuses.cancelled))\n            {\n                if (trackedFile.uploadSubscription) {\n                    trackedFile.uploadSubscription.unsubscribe();\n                    trackedFile.uploadSubscription = null;\n                }\n\n                this._updateTrackedFile(trackedFile,\n                    {\n                        status: TrackedFileStatuses.cancelled\n                    });\n\n                if (purge) {\n                    this.purgeUpload(id);\n                }\n\n                this._syncUploadQueue();\n            }\n        }else\n        {\n            this._log('warn', 'cannot cancel upload, failed to find file with provided id', id);\n        }\n    }\n\n    public purgeUpload(id: string): void {\n\n        this._log('info', `purge file from queue.`, id);\n\n        const trackedFile = this._trackedFiles[id];\n\n        if (trackedFile)\n        {\n            if (trackedFile.canTransitionTo(TrackedFileStatuses.purged)) {\n\n                this.cancelUpload(id, false);\n\n                this._updateTrackedFile(trackedFile, {status: TrackedFileStatuses.purged});\n\n                this._removeTrackedFile(trackedFile);\n            }\n        }else\n        {\n            this._log('warn', 'cannot purge upload, failed to find file with provided id', id);\n        }\n    }\n\n    private _removeTrackedFile(trackedFile: TrackedFile) {\n        this._log('info', `remove tracked file from queue`, trackedFile.id);\n\n        // Developer notice - this is a cleanup function just in case.\n        if (trackedFile.uploadSubscription) {\n            trackedFile.uploadSubscription.unsubscribe();\n            trackedFile.uploadSubscription = null;\n        }\n\n        delete this._trackedFiles[trackedFile.id];\n    }\n\n    private _syncUploadQueue(): void {\n        if (this.syncUploadQueueTimeoutId) {\n            clearTimeout(this.syncUploadQueueTimeoutId);\n            this.syncUploadQueueTimeoutId = null;\n        }\n\n        // DEVELOPER NOTICE: This logic is delayed to the next event loop on purpose to prevent\n        // collision between two sync requests\n        this.syncUploadQueueTimeoutId = setTimeout(() => {\n            this._log('info', `syncing upload queue`);\n            this.syncUploadQueueTimeoutId = null;\n            this._executePreparePhase();\n            this._executeUploadPhase();\n        }, 200);\n    }\n\n    private _executePreparePhase(): void {\n        const files = Object.keys(this._trackedFiles).map(fileId => this._trackedFiles[fileId]).filter(trackedFile => {\n            return trackedFile.status === TrackedFileStatuses.pendingPrepare\n                && trackedFile.canTransitionTo(TrackedFileStatuses.preparing);\n        });\n\n        if (files.length)\n        {\n            this._log('info',`handling ${files.length} files, waiting to be prepared`);\n\n            const groupedFiles = files.reduce((acc: { adapter: UploadFileAdapter<any>, files: TrackedFile[] }[], curr : TrackedFile) => {\n                const uploadAdapter = this._getUploadAdapter(curr.data) || null;\n\n                const matchedItem = acc.find(item => item.adapter ? item.adapter.constructor === uploadAdapter.constructor : item.adapter === null);\n\n                if (matchedItem) {\n                    matchedItem.files.push(curr);\n                } else {\n                    acc.push({adapter: uploadAdapter, files: [curr]});\n                }\n\n                return acc;\n            }, []);\n\n            groupedFiles.forEach(item => {\n                if (item.adapter) {\n                    this._log('debug', `executing prepare phase for ${item.files.length} files with adapter '${item.adapter.label}'`);\n\n                    item.files.forEach(file =>\n                    {\n                        this._updateTrackedFile(file,{ status : TrackedFileStatuses.preparing});\n                    });\n\n                    item.adapter.prepare(item.files)\n                        .pipe(cancelOnDestroy(this))\n                        .subscribe(\n                            preparedFiles => {\n                                this._log('debug', `executing prepare phase succeeded for ${item.files.length} files with adapter '${item.adapter.label}'.`);\n                                this._handlePrepareAdapterResponse(preparedFiles);\n\n                                this._syncUploadQueue();\n                            },\n                            reason => {\n\n                                this._log('error', `executing prepare phase failed for ${item.files.length} files with adapter '${item.adapter.label}'. error: ${reason.message}`);\n\n                                this._handlePrepareAdapterResponse(\n                                    item.files.map(file =>({ id: file.id, status:false}))\n                                );\n\n                                this._syncUploadQueue();\n                            });\n\n                }\n                else {\n                    item.files.forEach(file => {\n                        this._updateTrackedFile(file,\n                            {\n                                status: TrackedFileStatuses.failure,\n                                failureReason: 'upload destination is not supported',\n                                failureType: 'unknown_destination'\n                            })\n                    })\n                }\n            });\n        }\n    }\n\n    private _handlePrepareAdapterResponse(responseFiles : { id: string, status:boolean}[]) : void {\n        responseFiles.forEach(\n            responseFile => {\n                const trackedFile = this._trackedFiles[responseFile.id];\n\n                if (!trackedFile) {\n                    this._log('warn', `cannot handle prepare response for file '${responseFile.id}' since there is no tracking information for that file (did the user purge the file during the prepare execution?)`);\n                }\n                else if (trackedFile.status !== TrackedFileStatuses.preparing) {\n                    this._log('warn', `cannot handle file result from prepare action (did the user cancel the file upload during the prepare execution?)`, trackedFile.id);\n                } else if (responseFile.status) {\n                    const changedStatusToPrepared = this._updateTrackedFile(trackedFile,\n                        {\n                            status: TrackedFileStatuses.prepared\n                        });\n\n                    if (changedStatusToPrepared) {\n                        this._updateTrackedFile(trackedFile,\n                            {\n                                status: TrackedFileStatuses.pendingUpload\n                            });\n                    }\n                } else {\n                    this._updateTrackedFile(trackedFile,\n                        {\n                            status: TrackedFileStatuses.failure,\n                            failureReason: 'failed to prepare upload',\n                            failureType: 'preparation_failed'\n                        });\n                }\n            });\n    }\n\n    private _executeUploadPhase(): void {\n        const waitingForUploadsFiles = [];\n        const activeUploadFiles = [];\n\n        Object.keys(this._trackedFiles).forEach(fileId =>\n        {\n            const trackedFile = this._trackedFiles[fileId];\n\n            if (trackedFile.status === TrackedFileStatuses.uploading)\n            {\n                activeUploadFiles.push(trackedFile);\n            }else if (trackedFile.status === TrackedFileStatuses.pendingUpload\n                && trackedFile.canTransitionTo(TrackedFileStatuses.uploading))\n            {\n                waitingForUploadsFiles.push(trackedFile);\n            }\n        });\n\n        const activeUploadsCount = activeUploadFiles.length;\n        const waitingFilesCount = waitingForUploadsFiles.length;\n\n        if (waitingFilesCount > 0) {\n            let nextUploadFiles: TrackedFile[] = [];\n\n            this._log('silly', `active uploads: ${activeUploadsCount} | pending files: ${waitingFilesCount}`);\n\n            const availableUploadSlots = (this._maxUploadRequests && this._maxUploadRequests > 0) ? this._maxUploadRequests - activeUploadsCount : waitingFilesCount;\n\n            if (availableUploadSlots > 0) {\n                nextUploadFiles = [\n                    ...waitingForUploadsFiles.sort(pendingFile => pendingFile.uploadOrder || 1000)\n                ].slice(0, availableUploadSlots);\n            }\n\n            this._log('debug', `available upload slots to be used ${availableUploadSlots}`);\n\n\n            nextUploadFiles.forEach(pendingFile => {\n                this._initiateUpload(pendingFile);\n            });\n        }\n    }\n\n    private _createTrackedFile(id: string, fileData: UploadFileData): void {\n        const newTrackedFile = this._trackedFiles[id] = new TrackedFile(id, fileData);\n\n        this._onTrackedFileChanged.next(newTrackedFile.asData());\n\n        this._updateTrackedFile(newTrackedFile,\n            {status: TrackedFileStatuses.pendingPrepare}\n        );\n    }\n\n    private _updateTrackedFile(trackedFile: TrackedFile, changes: TrackedFileChanges): boolean {\n\n        let result = true;\n\n        if (changes.status && changes.status !== trackedFile.status) {\n\n\n            if (trackedFile.canTransitionTo(changes.status))\n            {\n                this._log('info', `notify file status changes from '${trackedFile.status}' to '${changes.status}'`,trackedFile.id);\n                trackedFile.update(changes);\n            }else\n            {\n                this._log('error', `cannot update file data from '${trackedFile.status}' to '${changes.status}. target status is not allowed. update to status 'failure' instead.`,trackedFile.id);\n\n                trackedFile.update({\n                    status: TrackedFileStatuses.failure,\n                    failureReason: 'cannot change status',\n                    failureType: 'change_not_allowed'\n                });\n\n                result = false;\n            }\n        }else\n        {\n            //this._log('info', `notify file data changes`,trackedFile.id);\n            trackedFile.update(changes)\n        }\n\n        this._onTrackedFileChanged.next(trackedFile.asData());\n\n        return result;\n    }\n\n    public supportChunkUpload(uploadFileData: UploadFileData) : boolean {\n        const uploadAdapter: UploadFileAdapter<any> = this._getUploadAdapter(uploadFileData);\n        return uploadAdapter ? uploadAdapter.supportChunkUpload() : false;\n    }\n\n    private _initiateUpload(trackedFile: TrackedFile): void {\n\n        const {data, id} = trackedFile;\n        const uploadAdapter: UploadFileAdapter<any> = this._getUploadAdapter(data);\n\n        this._log('info', `initiate new upload for file '${id}'`);\n\n        if (!uploadAdapter) {\n            this._log('warn', `cannot find destination adapter for requested file, failing upload request`);\n            this._updateTrackedFile(trackedFile,\n                {\n                    status: TrackedFileStatuses.failure,\n                    failureReason: 'upload destination is not supported',\n                    failureType: 'unknown_destination'\n                });\n\n            this._syncUploadQueue();\n\n        } else if (trackedFile.canTransitionTo(TrackedFileStatuses.uploading)) {\n            if (trackedFile.uploadSubscription) {\n                this._log('warn', `an active upload was found while the status indicated no upload currently in progress. cancel previous upload`);\n                trackedFile.uploadSubscription.unsubscribe();\n                trackedFile.uploadSubscription = null;\n            }\n\n            this._updateTrackedFile(trackedFile, {\n                status: TrackedFileStatuses.uploading,\n                progress: 0,\n                uploadStartAt: new Date(),\n            });\n\n            const canHandleResponse = (id: string, actionDescription: string) : boolean =>\n            {\n                let result = false;\n                const trackedFileStillExists = !!this._trackedFiles[id];\n\n                if (!trackedFileStillExists) {\n                    this._log('warn', `cannot handle file upload ${actionDescription}. There is no tracking file with the provided id (was the file purged?)`, id);\n                } else if (trackedFile.status !== TrackedFileStatuses.uploading) {\n                    this._log('warn', `cannot handle file upload ${actionDescription}. The file status it not 'uploading' (was the file upload cancelled?)`, id);\n                }else {\n                    result = true;\n                }\n\n                return result;\n            };\n\n            trackedFile.uploadSubscription = uploadAdapter.upload(id, data)\n                .subscribe(\n                    (uploadChanges) => {\n                        if (canHandleResponse(id, 'progress'))\n                        {\n                            this._updateTrackedFile(trackedFile,\n                                {\n                                    progress: uploadChanges.progress\n                                });\n                        }\n                    },\n                    (error) => {\n                        trackedFile.uploadSubscription = null;\n\n                        if (canHandleResponse(id, 'failure')) {\n                            const failureReason = error && error.message ? error.message : '';\n\n                            this._updateTrackedFile(trackedFile,\n                                {\n                                    status: TrackedFileStatuses.failure,\n                                    failureReason,\n                                    failureType: 'general_error'\n                                });\n                        }\n\n                        this._syncUploadQueue();\n                    },\n                    () => {\n                        trackedFile.uploadSubscription = null;\n\n                        if (canHandleResponse(id, 'completion')) {\n                            this._updateTrackedFile(trackedFile,\n                                {\n                                    status: TrackedFileStatuses.uploadCompleted,\n                                    progress: 1,\n                                    uploadCompleteAt: new Date()\n                                });\n\n                            this._removeTrackedFile(trackedFile);\n                            this._syncUploadQueue();\n                        }\n                    }\n                );\n        }\n    }\n\n    private _getUploadAdapter(fileData: UploadFileData): UploadFileAdapter<any> {\n\n        if (this._uploadFileAdapter) {\n            return this._uploadFileAdapter.find(uploadFileAdapter => {\n                return uploadFileAdapter.canHandle(fileData);\n            });\n        } else {\n            return null;\n        }\n    }\n\n    ngOnDestroy(): void {\n        Object.keys(this._trackedFiles).forEach(id =>\n        {\n            this.purgeUpload(id);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { UploadManagement } from './upload-management.service';\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        UploadManagement\n    ]\n})\nexport class UploadManagementModule {\n\n}\n","import { Observable } from 'rxjs';\nimport { UploadFileData } from './upload-file-data';\n\n\nexport abstract class UploadFileAdapter<T extends UploadFileData>{\n    abstract get label() : string;\n    abstract prepare(files : {id: string, data : T}[]) : Observable<{id: string, status: boolean}[]>;\n    abstract upload(id: string, data : T) : Observable<{ id : string, progress? : number}>;\n    abstract canHandle(uploadFile : UploadFileData) : boolean;\n    abstract supportChunkUpload(): boolean;\n}\n","//download.js v4.2, by dandavis; 2008-2016. [CCBY2] see http://danml.com/download.html for tests/usage\nexport const Download = function (data, strFileName, strMimeType) {\n\tvar self = window, // this script is only for browsers anyway...\n\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\tmimeType = strMimeType || defaultMime,\n\t\tpayload = data,\n\t\turl = !strFileName && !strMimeType && payload,\n\t\tanchor = document.createElement(\"a\"),\n\t\ttoString = function(a){return String(a);},\n\t\tmyBlob = (self['Blob'] || self['MozBlob'] || self['WebKitBlob'] || toString),\n\t\tfileName = strFileName || \"download\",\n\t\tblob,\n\t\treader;\n\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\n\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\tpayload=[payload, mimeType];\n\t\tmimeType=payload[0];\n\t\tpayload=payload[1];\n\t}\n\n\t//go ahead and download dataURLs right away\n\tif(/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)){\n\n\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\tmimeType=payload.type || defaultMime;\n\t\t}else{\n\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\tsaver(payload, false) ; // everyone else can save dataURLs un-processed\n\t\t}\n\n\t}//end if dataURL passed?\n\n\tblob = payload instanceof myBlob ?\n\t\tpayload :\n\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\tfunction dataUrlToBlob(strUrl) {\n\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\treturn new myBlob([uiArr], {type: type});\n\t}\n\n\tfunction saver(url, winMode){\n\n\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\tanchor.href = url;\n\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\tanchor.className = \"download-js-link\";\n\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\tanchor.style.display = \"none\";\n\t\t\tdocument.body.appendChild(anchor);\n\t\t\tsetTimeout(function() {\n\t\t\t\tanchor.click();\n\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t}, 66);\n\t\t\treturn true;\n\t\t}\n\n\t\t// handle non-a[download] safari as best we can:\n\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\turl=url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t//do iframe dataURL download (old ch+FF):\n\t\tvar f = document.createElement(\"iframe\");\n\t\tdocument.body.appendChild(f);\n\n\t\tif(!winMode){ // force a mime that will download:\n\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t}\n\t\tf.src=url;\n\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t}//end saver\n\n\n\n\n\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\treturn navigator.msSaveBlob(blob, fileName);\n\t}\n\n\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\tsaver(self.URL.createObjectURL(blob), true);\n\t}else{\n\t\t// handle non-Blob()+non-URL browsers:\n\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\ttry{\n\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob), false  );\n\t\t\t}catch(y){\n\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob), false  );\n\t\t\t}\n\t\t}\n\n\t\t// Blob but not URL support:\n\t\treader=new FileReader();\n\t\treader.onload=function(e){\n\t\t\tsaver(this.result, false);\n\t\t};\n\t\treader.readAsDataURL(blob);\n\t}\n\treturn true;\n};\n","import { Download } from './download';\n\nconst _xmlCharMap = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;'\n};\n\nexport class KalturaUtils\n{\n    static escapeXml(value: any) : string {\n        let parsedValue = value;\n        switch(typeof value)\n        {\n            case 'string':\n            case 'number':\n            case 'boolean':\n                parsedValue = value;\n                break;\n            default:\n            parsedValue = value || '';\n                break;\n        }\n\n        return String(parsedValue).replace(/[&<>]/g, char => _xmlCharMap[char]);\n    }\n\n\tstatic getStartDateValue(value : Date) : Date\n    {\n        if (value) {\n            const newValue = new Date(value.getTime());\n            newValue.setHours(0);\n            newValue.setMinutes(0);\n            newValue.setSeconds(0);\n            return newValue;\n        }else{\n            return null;\n        }\n    }\n\n    static getEndDateValue(value : Date) : Date\n    {\n        if (value) {\n            const newValue = new Date(value.getTime());\n            newValue.setHours(23);\n            newValue.setMinutes(59);\n            newValue.setSeconds(59);\n            return newValue;\n        }else{\n            return null;\n        }\n    }static removeEmptyProperties(value : {})\n\t{\n\t\tObject.keys(value).forEach(function(key) {\n\t\t\tif (value[key] && typeof value[key] === 'object') {\n\t\t\t\tKalturaUtils.removeEmptyProperties(value[key]);\n\t\t\t}\n\t\t\telse if (value[key] === null) {\n\t\t\t\tdelete value[key]\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t}\n\n    static moveUpItems<T>(list: T[], selectedItems : T[]): boolean {\n        if (list && list.length && selectedItems && selectedItems.length) {\n            const relevantItems = selectedItems.map(item => ({ selectedItem: item, index: list.indexOf(item) }))\n                .filter(item => item.index !== -1)\n                .sort((a, b) => a.index - b.index);\n            if (relevantItems.length) {\n                const minIndexInSelected = relevantItems[0].index;\n                const nextIndex = Math.max(0, minIndexInSelected - 1);\n                relevantItems.forEach((item, i) => {\n                    list.splice(item.index - i, 1);\n                });\n\n                list.splice(nextIndex, 0, ...relevantItems.map(item => item.selectedItem));\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static moveDownItems<T>(list: T[], selectedItems : T[]): boolean {\n        if (selectedItems && selectedItems.length && list && list.length) {\n            const relevantItems = selectedItems.map(item => ({ selectedItem: item, index: list.indexOf(item) }))\n                .filter(item => item.index !== -1)\n                .sort((a, b) => a.index - b.index);\n            if (relevantItems.length) {\n                const maxIndexInSelected = relevantItems[relevantItems.length - 1].index;\n                const nextIndex = Math.min(list.length - 1, maxIndexInSelected + 1);\n                relevantItems.forEach((item, i) => {\n                    list.splice(item.index - i, 1);\n                });\n                const correctedIndex = nextIndex - relevantItems.length;\n\n                list.splice(correctedIndex + 1, 0, ...relevantItems.map(item => item.selectedItem));\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static formatTime(value: number, addTimeChars: boolean = false): string {\n\n        let hours: number = Math.floor( Math.round( value ) / 3600 ) % 24;\n        let minutes: number = Math.floor( ( Math.round( value ) / 60 ) % 60 );\n        let seconds: number = Math.round(value) % 60;\n\n        let hoursStr: string = hours === 0 ? '' : addTimeChars ? hours.toString() + \"h:\" : hours.toString() + \":\";\n        let minutesStr: string = minutes === 0 && hours === 0 ? '00' : minutes < 10  ? '0' + minutes.toString() : minutes.toString();\n        let secondsStr: string = seconds < 10  ? '0' + seconds.toString() : seconds.toString();\n        if (addTimeChars){\n            minutesStr = minutesStr + \"m\";\n            secondsStr = secondsStr + \"s\";\n        }\n        return hoursStr + minutesStr + \":\" + secondsStr;\n    }\n\n    static fromServerDate(value : number) : Date\n    {\n        return (value ? new Date(value * 1000) : null);\n    }\n\n    static toServerDate(value : Date) : number\n    {\n        return value ? Math.round(value.getTime() / 1000) : null;\n    }\n\n    static download(data: any, strFileName: string, strMimeType: string) : Boolean\n    {\n        return Download(data, strFileName, strMimeType);\n    }\n}\n","import { XmlToJSON } from './xml-to-json';\nimport { KalturaUtils } from '../utils/kaltura-utils';\n\n\n\nfunction convertAttributes(attributes: object): string {\n  let parsedAttributes = '';\n  if (attributes) {\n    Object.keys(attributes).forEach(attributeName => {\n      const value = KalturaUtils.escapeXml(attributes[attributeName]);\n      parsedAttributes += ` ${attributeName}=\"${value}\"`;\n    });\n  }\n\n  return parsedAttributes;\n}\n\nfunction convertObjectToXml(prefix: string, propertyName: string, propertyValue: any): string {\n    let result = ``;\n\n    const noPrefixPropertyName = (propertyName || '').indexOf('noprefix:') !== -1;\n    if (noPrefixPropertyName) {\n      propertyName = propertyName.replace('noprefix:', '');\n      prefix = '';\n    }\n\n    if (Array.isArray(propertyValue)) {\n        propertyValue.forEach(innerItem =>\n        {\n            result += convertObjectToXml(prefix, propertyName, innerItem);\n        });\n    } else if (propertyValue && typeof propertyValue === 'object') {\n\n        const parsedAttributes = convertAttributes(propertyValue['attr']);\n        let parsedValue: any = '';\n\n        if (propertyValue['text']) {\n            parsedValue = KalturaUtils.escapeXml(propertyValue['text']);\n        } else {\n            Object.keys(propertyValue).forEach(innerProperty => {\n                if (innerProperty !== 'attr') {\n                    parsedValue += convertObjectToXml(prefix, innerProperty, propertyValue[innerProperty]);\n                }\n            });\n        }\n\n        result += `<${prefix}${propertyName}`;\n\n        if (parsedAttributes) {\n            result += `${parsedAttributes}>`;\n        } else {\n            result += '>';\n        }\n\n        result += `${parsedValue}</${prefix}${propertyName}>`;\n    }\n\n\n    return result;\n}\n\nexport class XmlParser\n{\n    static toJson(xml : string) : {}\n    {\n        return XmlToJSON.parseString(xml,\n            {\n                textKey: 'text', \t// tag name for text nodes\n                valueKey: 'value', \t// tag name for attribute values\n                attrKey: 'attr', \t// tag for attr groups\n                cdataKey: 'cdata',\t// tag for cdata nodes (ignored if mergeCDATA is true)\n                childrenAsArray: false, \t// force children into arrays\n\t            grokText: false,\n\t            grokAttr: false,\n              normalize: false,\n            });\n    }\n\n    static toXml(data: object, root: string, prefix: string = ''): string {\n        const parsedPrefix = prefix ? `${prefix}:` : '';\n        let parsedObject = '';\n        let parsedAttributes = '';\n\n        if (data) {\n            parsedAttributes = convertAttributes(data['attr']);\n\n            Object.keys(data).forEach(property => {\n                if (property !== 'attr') {\n                   parsedObject += convertObjectToXml(parsedPrefix, property, data[property])\n                }\n            });\n        }\n\n        return `<${parsedPrefix}${root}${parsedAttributes}>${parsedObject}</${parsedPrefix}${root}>`;\n    }\n\n    static toSimpleXml(data : {}, config : {removeEmpty? : boolean} = {}) : string{\n        let result = '';\n        const _parseValueToXml = (value : any) =>\n        {\n            let result : string;\n\n            if (typeof value === 'object') {\n                result = XmlParser.toSimpleXml(value, config);\n            }\n            else {\n                result = KalturaUtils.escapeXml(value);\n            }\n\n            return result;\n        };\n\n        if (data) {\n            Object.keys(data).forEach(function (key) {\n                const propertyValue = data[key];\n                const isEmptyValue = (propertyValue === null || typeof propertyValue === 'undefined' || propertyValue === '');\n\n                if (!config.removeEmpty || (config.removeEmpty && !isEmptyValue)) {\n                    if (propertyValue instanceof Array) {\n                        propertyValue.map(arrayItem => {\n                            const valueAsXml = _parseValueToXml(arrayItem);\n                            const isEmptyValue = (valueAsXml === null || typeof valueAsXml === 'undefined' || valueAsXml === '');\n\n                            if (!config.removeEmpty || (config.removeEmpty && !isEmptyValue)) {\n                                result += `<${key}>${valueAsXml}</${key}>`;\n                            }\n                        })\n                    } else if (typeof propertyValue === 'object') {\n                        const valueAsXml = _parseValueToXml(propertyValue);\n                        const isEmptyValue = (valueAsXml === null || typeof valueAsXml === 'undefined' || valueAsXml === '');\n\n                        if (!config.removeEmpty || (config.removeEmpty && !isEmptyValue)) {\n                            result += `<${key}>${valueAsXml}</${key}>`;\n                        }\n                    }\n                    else {\n                        const value = KalturaUtils.escapeXml(propertyValue);\n                        result += `<${key}>${value}</${key}>`;\n                    }\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport interface IAppStorage {\n    setInLocalStorage(key:string, value:any) : void;\n    getFromLocalStorage(key:string) : any;\n    removeFromLocalStorage(key:string) : any;\n    setInSessionStorage(key:string, value:any) : void;\n    getFromSessionStorage(key:string) : any;\n    removeFromSessionStorage(key:string) : any;\n}\n\nexport const APP_STORAGE_TOKEN: InjectionToken<IAppStorage> = new InjectionToken<IAppStorage>('APP_STORAGE_TOKEN');\n\nexport class AppStorage implements IAppStorage{\n    private storage : any = {};\n\n    setInLocalStorage(key:string, value:any):void {\n        this.storage[key] = value;\n    }\n\n    getFromLocalStorage(key:string):any {\n        return this.storage[key];\n    }\n\n    removeFromLocalStorage(key:string):any {\n       delete this.storage[key];\n    }\n\n    setInSessionStorage(key:string, value:any):void {\n        this.storage[key] = value;\n    }\n\n    getFromSessionStorage(key:string):any {\n        return this.storage[key];\n    }\n\n    removeFromSessionStorage(key:string):any {\n        delete this.storage[key];\n    }\n\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KalturaUtils } from './utils/kaltura-utils';\nimport { APP_STORAGE_TOKEN, AppStorage } from './app-storage.service';\nimport { EmptyLogger, KalturaLoggerInjectionToken } from './kaltura-logger';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        ]\n})\nexport class KalturaCommonModule {\n    // constructor(@Optional() @SkipSelf() module : KalturaCoreModule, private appBootstrap : AppBootstrap)\n    // {\n    //     if (module) {\n    //         throw new Error(\"KMCngCoreModule module imported twice.\");\n    //     }\n    // }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: KalturaCommonModule,\n            providers: [\n                { provide: APP_STORAGE_TOKEN, useClass: AppStorage },\n\t            KalturaUtils,\n                { provide: KalturaLoggerInjectionToken, useClass: EmptyLogger}\n            ]\n        };\n    }\n}\n"]}